window.addEventListener("load",function(e){smash.init()},!1);var smash={};smash.init=function(){smash.config.init(),smash.sidebar.init(),smash.searchbox.init(),smash.workspace.init(),smash.input.init()},smash.get=function(e,s){try{return e.querySelector(s)}catch(e){console.log(e)}},smash.getAll=function(e,s){try{return e.querySelectorAll(s)}catch(e){console.log(e)}},smash.hide=function(e,s){var a;a=s&&"string"==typeof s?smash.getAll(e,s):[e];for(var t=0;t<a.length;t++)a[t].style.display="none"},smash.nextVisible=function(e){for(;e=e.nextSibling;)if("none"!=e.style.display)return e},smash.firstVisible=function(e){if(e=e.parentElement.firstChild,"none"!=e.style.display)return e;for(;e=e.nextSibling;)if("none"!=e.style.display)return e},smash.previousVisible=function(e){for(;e=e.previousSibling;)if("none"!=e.style.display)return e},smash.lastVisible=function(e){if(e=e.parentElement.lastChild,"none"!=e.style.display)return e;for(;e=e.previousSibling;)if("none"!=e.style.display)return e},smash.show=function(e,s){var a;a=s&&"string"==typeof s?smash.getAll(e,s):[e];for(var t=0;t<a.length;t++)a[t].style.display=""},smash.remove=function(e){e.parentNode.removeChild(e)},smash.on=function(e,s,a,t){for(var n=smash.getAll(e,s),r=0;r<n.length;r++)n[r][a]=t},smash.fuzzyCompare=function(e,s){if(void 0==s||void 0==e)return!1;var a=".*?"+e.toLowerCase().replace(/-/g,"\\-").split("").join(".*?")+".*?";return s.toLowerCase().match(a)},smash.ajax={_headers_:[]},smash.ajax.addHeader=function(e,s){smash.ajax._headers_[e]=s},smash.ajax.removeHeader=function(e){delete smash.ajax._headers_[e]},smash.ajax.onerror=function(e){console.log(e)},smash.ajax.onunauthorized=function(e){smash.ajax.onerror(e)},smash.ajax._xhr_=function(){if("undefined"!=typeof XMLHttpRequest)return new XMLHttpRequest;for(var e,s=["MSXML2.XmlHttp.6.0","MSXML2.XmlHttp.5.0","MSXML2.XmlHttp.4.0","MSXML2.XmlHttp.3.0","MSXML2.XmlHttp.2.0","Microsoft.XmlHttp"],a=0;a<s.length;a++)try{e=new ActiveXObject(s[a]);break}catch(e){}return e},smash.ajax.send=function(e,s,a,t,n,r,o){void 0===o&&(o=!0),void 0===r&&(r=smash.ajax.onerror);var i=smash.ajax._xhr_();i.responseType=n,i.onreadystatechange=function(){if(4==i.readyState)switch(i.status){case 200:case 201:s&&s(i.response);break;case 401:smash.ajax.onunauthorized(i.response);break;default:r(i.response)}},i.open(a,e,o),"json"==n?i.setRequestHeader("Content-type","application/json"):"POST"==a&&i.setRequestHeader("Content-type","application/x-www-form-urlencoded");for(var l in smash.ajax._headers_)i.setRequestHeader(l,smash.ajax._headers_[l]);i.send(t)},smash.ajax.get=function(e,s,a,t,n,r){var o=[];for(var i in a)o.push(encodeURIComponent(i)+"="+encodeURIComponent(a[i]));smash.ajax.send(e+(o.length?"?"+o.join("&"):""),s,"GET",null,t,n,r)},smash.ajax.post=function(e,s,a,t,n,r){var o;if(a)if("json"!=t){var i=[];for(var l in a)i.push(encodeURIComponent(l)+"="+encodeURIComponent(a[l]));o=i.join("&")}else o=JSON.stringify(a);smash.ajax.send(e,s,"POST",o,t,n,r)},smash.class={},smash.class.add=function(e,s){smash.class.has(e,s)||(e.classList?e.classList.add(s):e.className+=" "+s)},smash.class.remove=function(e,s){smash.class.has(e,s)&&(e.classList?e.classList.remove(s):e.className=e.className.replace(s,""))},smash.class.has=function(e,s){return(" "+e.className+" ").replace(/[\n\t]/g," ").indexOf(" "+s+" ")>-1},smash.class.toggle=function(e,s){smash.class.has(e,s)?smash.class.remove(e,s):smash.class.add(e,s)},smash.config={_values_:{_sidebar_lock_:!1}},smash.config.init=function(){var e=smash.storage.get("config");e&&(smash.config._values_=e)},smash.config.get=function(e){var s="_"+e+"_";if(s in smash.config._values_)return smash.config._values_[s];throw new smash.Exception("001",'Invalid config option "'+e+'"')},smash.config.set=function(e,s){var a="_"+e+"_";if(!a in smash.config._values_)throw new smash.Exception("001",'Invalid config option "'+e+'"');smash.config._values_[a]=s,smash.storage.set("config",smash.config._values_)},smash.contextmenu={},smash.contextmenu.new=function(e,s){(a=smash.get(document,"#smash-context-menu"))&&smash.remove(a);var a=document.createElement("div");a.id="smash-context-menu";var t="<ul class='clickable'>";for(i=0;i<s.length;i++)t+="seperator"!=s[i]?'<li class="ctx_item_'+i+'">'+s[i].label+"</li>":'<li class="seperator"></li>';t+="</ul>",a.innerHTML=t,document.body.appendChild(a);var n;for(i=0;i<s.length;i++)"seperator"!=s[i]&&(n=smash.get(a,"li.ctx_item_"+i),n.callback=s[i].callback,n.onmousedown=function(e){this.callback(e),smash.contextmenu.close(e)});var r=e.pageY;return r+a.offsetHeight>window.innerHeight&&(r=window.innerHeight-a.offsetHeight-20),a.style.top=r,a.style.left=e.pageX,e.preventDefault(),document.onclick=smash.contextmenu.close,!1},smash.contextmenu.close=function(e){e.preventDefault(),(ctx=smash.get(document,"#smash-context-menu"))&&smash.remove(ctx),document.onclick=void 0},smash.cookie={},smash.cookie.set=function(e,s,a){var t=new Date;t.setTime(t.getTime()+24*a*60*60*1e3);var n="expires="+t.toUTCString();document.cookie=e+"="+s+";"+n+";path=/"},smash.cookie.get=function(e){for(var e=e+"=",s=decodeURIComponent(document.cookie),a=s.split(";"),t=0;t<a.length;t++){for(var n=a[t];" "==n.charAt(0);)n=n.substring(1);if(0==n.indexOf(e))return n.substring(e.length,n.length)}return""},smash.dialog={},smash.dialog.new=function(e){var s=smash.dialog.checkBackdrop(),a=document.createElement("div");a.className="smash-dialog",a.innerHTML=e,s.appendChild(a)},smash.dialog.checkBackdrop=function(){if(e=smash.get(document,".smash-dialog-backdrop"))return(dialog=smash.get(document,".smash-dialog-backdrop .smash-dialog"))&&e.removeChild(dialog),e;var e=document.createElement("div");return e.className="smash-dialog-backdrop",e.innerHTML='<div class="smash-dialog-background"></div>',smash.get(e,".smash-dialog-background").onclick=smash.dialog.close,smash.get(document,"body").appendChild(e),e},smash.dialog.close=function(){(dialog=smash.get(document,".smash-dialog-backdrop"))&&smash.get(document,"body").removeChild(dialog)},smash.Exception=function(e,s){this.value=e,this.message=s,this.toString=function(){return"SmashException "+this.value+": "+this.message}},smash.input={},smash.input.init=function(){for(var e,s=document.querySelectorAll(".smash-input input, .smash-textarea textarea"),a=0;a<s.length;a++)if(e=s[a],!smash.class.has(e.parentElement,"smash-initialised")){if(e.parentElement.getName=function(){return this.querySelector("input").getAttribute("name")},e.parentElement.setValue=function(s){(e=this.querySelector("input"))?(e.value=s,e.onkeyup()):(e=this.querySelector("textarea"))&&(e.value=s,e.onkeyup())},e.parentElement.getValue=function(){if(e=this.querySelector("input")){var e=this.querySelector("input");return e.value}if(e=this.querySelector("textarea")){var e=this.querySelector("textarea");return e.value}return null},smash.class.has(e.parentElement,"has-floating-label")){smash.class.remove(e.parentElement,"has-floating-label"),smash.class.add(e.parentElement,"floating-label");var t=document.createElement("label");t.innerHTML=e.placeholder,e.parentElement.appendChild(t),e.onkeyup=function(e){var s=this.parentElement.querySelector("label");s&&(""!=this.value?smash.class.add(s,"show"):smash.class.remove(s,"show"))}}e.parentElement.getAttribute("value")&&e.parentElement.setValue(e.parentElement.getAttribute("value")),smash.class.add(e.parentElement,"smash-initialised")}for(var n,r=document.querySelectorAll(".smash-select select"),a=0;a<r.length;a++)if(n=r[a],!smash.class.has(n.parentElement,"smash-initialised")){if(smash.class.has(n.parentElement,"has-floating-label")){smash.class.remove(n.parentElement,"has-floating-label"),smash.class.add(n.parentElement,"floating-label");var t=document.createElement("label");t.innerHTML=n.getAttribute("placeholder"),n.parentElement.appendChild(t)}n.parentElement.getName=function(){return this.querySelector("select").getAttribute("name")},n.parentElement.setValue=function(e){smash.class.remove(this,"is-focussed");var s=this.querySelector("select"),a=this.querySelector("input"),t=s.value;s.value=e,s.selectedIndex>-1?a.value=s.options[s.selectedIndex].text:a.value="",a.focus(),a.blur(),t!=e&&((selected=smash.get(this.parentElement,".selected"))&&smash.class.remove(selected,"selected"),(selected=smash.get(this,'li[value="'+e+'"]'))&&smash.class.add(selected,"selected"),s.onchange&&s.onchange(),this.onchange&&this.onchange())},n.parentElement.getValue=function(){var e=this.querySelector("select");return e.selectedIndex==-1?null:e.options[e.selectedIndex].value},n.parentElement.reset=function(){smash.get(this,"input").value=this.getText(),(hover=smash.get(this,"ul li.hover"))&&smash.class.remove(hover,"hover")},n.parentElement.getText=function(){var e=this.querySelector("select");return e.selectedIndex==-1?null:e.options[e.selectedIndex].innerHTML};var e=document.createElement("input");e.type="text",e.placeholder=n.getAttribute("placeholder"),e.setAttribute("readonly","readonly"),n.parentElement.appendChild(e);var o=n.querySelectorAll("option"),i=document.createElement("ul");i.onmouseup=function(e){e.stopPropagation()};for(var l=0;l<o.length;l++){var h=o[l];if(h.getAttribute("value")){var c=document.createElement("li");c.setAttribute("value",h.value),c.innerHTML=h.innerHTML,i.appendChild(c),c.onmousedown=function(e){this.parentElement.parentElement.setValue(this.getAttribute("value")),e.stopPropagation(),window.onmouseup&&window.onmouseup()}}}n.parentElement.appendChild(i),e.onfocus=function(e){if(!smash.class.has(this.parentElement,"is-focussed")){var s=this.parentElement.querySelector("label");s&&(""!=this.value?smash.class.add(s,"show"):smash.class.remove(s,"show")),this.parentElement.click()}},e.onblur=function(e){window.onmouseup&&window.onmouseup()},n.parentElement.onclick=function(){smash.class.add(this,"is-focussed");var e=smash.get(this,"input"),s=this;e.setAttribute("placeholder",e.value),e.removeAttribute("readonly"),e.blur(),e.value="",window.onmouseup=function(){if(window.onmouseup=null,e.onkeyup=null,e.setAttribute("readonly","readonly"),s.reset(),items=smash.getAll(s,"ul li")){for(var a=0;a<items.length;a++)items[a].style.display="";smash.show(s,"ul")}return smash.class.remove(s,"is-focussed"),!1},e.onkeyup=function(e){switch(e.preventDefault(),e.stopPropagation(),e.keyCode){case 13:(hover=smash.get(s,"ul li.hover"))&&hover.onmousedown(e);break;case 37:case 38:if(hover=smash.get(s,"ul li.hover"))smash.class.remove(hover,"hover"),(previous=smash.previousVisible(hover))?(smash.class.add(previous,"hover"),previous.parentElement.scrollTop=previous.offsetTop):(last=smash.lastVisible(hover))&&(smash.class.add(last,"hover"),last.parentElement.scrollTop=last.parentElement.scrollHeight);else{var a=smash.get(s,"ul li");(last=smash.lastVisible(a))&&(smash.class.add(last,"hover"),last.parentElement.scrollTop=last.parentElement.scrollHeight)}break;case 39:case 40:if(hover=smash.get(s,"ul li.hover"))smash.class.remove(hover,"hover"),(next=smash.nextVisible(hover))?(smash.class.add(next,"hover"),next.parentElement.scrollTop=next.offsetTop):(next=smash.firstVisible(hover))&&(smash.class.add(next,"hover"),next.parentElement.scrollTop=0);else{var a=smash.get(s,"ul li");(next=smash.firstVisible(a))&&(smash.class.add(next,"hover"),next.parentElement.scrollTop=0)}break;case 27:this.value="",this.blur(),this.focus()}var t=this.value.replace(/[^a-zA-Z0-9_ ]/g,"");if(items=smash.getAll(s,"ul li")){smash.show(s,"ul");for(var n,r=!1,o=0;o<items.length;o++)n=items[o],""==t||smash.fuzzyCompare(t,n.innerHTML)?(n.style.display="",r=!0):n.style.display="none";r||smash.hide(s,"ul")}return!1},e.focus()},n.parentElement.getAttribute("value")&&n.parentElement.setValue(n.parentElement.getAttribute("value")),smash.class.add(n.parentElement,"smash-initialised")}smash.input.checkboxInit()},smash.input.checkboxInit=function(){for(var e,s=document.querySelectorAll(".smash-checkbox input"),a=0;a<s.length;a++)if(e=s[a],!smash.class.has(e.parentElement,"smash-initialised")){var t=document.createElement("span");if(t.className="checks",t.innerHTML='<i class="material-icons">check_box_outline_blank</i><i class="material-icons checked">check_box</i>',e.parentElement.appendChild(t),label=e.getAttribute("label")){var n=document.createElement("span");n.className="label",n.innerHTML=label,e.parentElement.appendChild(n)}smash.class.add(e.parentElement,"smash-initialised"),e.checked=smash.class.has(e.parentElement,"checked"),e.parentElement.onclick=function(){smash.class.toggle(this,"checked"),smash.get(this,"input").checked=smash.class.has(this,"checked"),this.onchange&&this.onchange(smash.class.has(this,"checked"))},e.parentElement.getName=function(){return this.querySelector("input").getAttribute("name")},e.parentElement.getValue=function(){return smash.class.has(this,"checked")},e.parentElement.setValue=function(e){smash.class.has(this,"checked")!=e&&this.onclick()}}},smash.router={__parseRouteRegex:/{(.*?)}/gi,__dynamicParts:[],__baseDirectory:null,__routes:{static:[],dynamic:[]}},smash.router.add=function(e,s){var a=smash.router.parseRoute(e);return a.regex?(a.callback=s,smash.router.__routes.dynamic[a.depth]||(smash.router.__routes.dynamic[a.depth]=[]),smash.router.__routes.dynamic[a.depth][a.numVars]||(smash.router.__routes.dynamic[a.depth][a.numVars]=[]),void smash.router.__routes.dynamic[a.depth][a.numVars].push(a)):void(smash.router.__routes.static[e]=s)},smash.router.set=function(e){smash.router.displayURL(e),window.dispatchEvent(new Event("popstate"))},smash.router.displayURL=function(e){e=smash.router.addBaseDirectory(e),window.history.pushState("","",e)},smash.router.redirect=function(e){e.search(/^http[s]?:\/\//)||(e=smash.router.addBaseDirectory(e)),window.location=e},smash.router.handleNotFound=function(e){console.log("route: "+JSON.stringify(e)+" does not exist")},smash.router.run=function(){window.onpopstate=function(e){smash.router.execute()},smash.router.execute()},smash.router.execute=function(){var e=this.getPath();if(this.__routes.static[e.path])return void this.__routes.static[e.path]();var s=e.path.split("/").length-1;if(this.__routes.dynamic[s]){var a,t,n={};for(var r in this.__routes.dynamic[s])for(var o in this.__routes.dynamic[s][r]){var a=this.__routes.dynamic[s][r][o];if(t=e.path.match(a.regex)){for(var i=0;i<a.numVars;i++)n[a.vars[i]]=t[i+1];return void a.callback(n)}}}smash.router.handleNotFound(e)},smash.router.getPath=function(){var e=document.createElement("a");return e.href=window.location,{host:e.hostname,path:smash.router.checkPath(e.pathname)}},smash.router.parseRoute=function(e){e=smash.router.cleanPath(e);var s={path:e,depth:e.split("/").length-1,vars:[],numVars:0};if(smash.router.__dynamicParts=e.match(smash.router.__parseRouteRegex),void 0!=smash.router.__dynamicParts&&null!=smash.router.__dynamicParts){for(var a="^"+e.replace(/\//gi,"\\/")+"$",t=0;t<smash.router.__dynamicParts.length;t++)s.numVars++,s.vars.push(smash.router.__dynamicParts[t].substring(1,smash.router.__dynamicParts[t].length-1)),a=a.replace(smash.router.__dynamicParts[t],"(.*?)");s.regex=new RegExp(a,"i")}return s},smash.router.setBaseDirectory=function(e){return e?void(smash.router.__baseDirectory=smash.router.cleanPath(e)):void(smash.router.__baseDirectory=void 0)},smash.router.addBaseDirectory=function(e){return smash.router.__baseDirectory?(e.indexOf(smash.router.__baseDirectory)===-1&&(e=smash.router.__baseDirectory+e),e):e},smash.router.cleanPath=function(e){return e.length>0&&"/"!=e.substring(0,1)&&(e="/"+e),e.length>2&&"/"==e.substring(e.length-2)&&(e=e.substring(0,e.length-2)),e},smash.router.checkPath=function(e){return e=smash.router.cleanPath(e),smash.router.__baseDirectory&&e.indexOf(smash.router.__baseDirectory)!==-1&&(e=e.replace(smash.router.__baseDirectory,"")),e},smash.router.queryParam=function(e){var s="[\\?&]"+e+"=([^&#]*)",a=new RegExp(s),t=a.exec(window.location.search);if(null!=t)return t[1]},smash.searchbox={i_:!1,minAutoCompleteLength:3,onfocus:void 0,onblur:void 0,onchange:void 0},smash.searchbox.init=function(){if(!smash.searchbox.i_){var e=document.querySelector(".smash-searchbox input");e&&(e.onfocus=function(){0==this.value.length&&smash.searchbox.results('<div class="smash-instruction">Start typing to find results</div>'),smash.class.add(document.querySelector(".smash-header"),"is-focussed"),smash.class.add(document.querySelector(".smash-searchbox .smash-searchbox-results"),"show"),smash.searchbox.onfocus&&smash.searchbox.onfocus()},e.onblur=function(){smash.class.remove(document.querySelector(".smash-header"),"is-focussed"),smash.class.remove(document.querySelector(".smash-searchbox .smash-searchbox-results"),"show"),smash.searchbox.onblur&&smash.searchbox.onblur()},e.onkeyup=function(e){switch(e.keyCode){case 27:return this.value="",void this.blur()}this.value.length<smash.searchbox.minAutoCompleteLength||smash.searchbox.onchange&&smash.searchbox.onchange(this.value)},smash.searchbox.i_=!0)}},smash.searchbox.empty=function(){return!(i=smash.get(document,".smash-searchbox input"))||0==i.value.length},smash.searchbox.appendTo=function(e){var s=document.createElement("div");s.innerHTML=e;var a=document.querySelector(".smash-searchbox .smash-searchbox-results");a.appendChild(s)},smash.searchbox.results=function(e){var s=document.querySelector(".smash-searchbox .smash-searchbox-results");s.innerHTML=e},smash.sidebar={i_:!1},smash.sidebar.init=function(){if(!smash.sidebar.i_){var e=document.querySelector(".smash-sidebar .lock");if(e){e.onclick=function(){smash.sidebar.toggleLock()};var s=document.querySelector(".smash-sidebar");smash.class.add(s,"is-unlocked"),smash.sidebar.i_=!0,smash.config.get("sidebar_lock")&&smash.sidebar.toggleLock()}}},smash.sidebar.toggleLock=function(){smash.sidebar.i_&&(smash.class.toggle(document.querySelector(".smash-sidebar .lock"),"unlock"),smash.class.toggle(document.querySelector(".smash-sidebar"),"is-unlocked"),smash.config.set("sidebar_lock",!smash.class.has(document.querySelector(".smash-sidebar"),"is-unlocked")))},smash.storage={},smash.storage.set=function(e,s){localStorage.setItem(e,JSON.stringify(s))},smash.storage.unset=function(e){localStorage.removeItem(e)},smash.storage.get=function(e){var s=localStorage.getItem(e);if(s)return JSON.parse(s)},smash.storage.clear=function(){localStorage.clear()},smash.workspace={baseTitle:void 0,_ws_:void 0,_hdr_:void 0,_sb_:void 0,_tabs_:[]},smash.workspace.init=function(){smash.workspace._ws_=document.querySelector(".smash-workspace"),smash.workspace._ws_&&(smash.workspace._hdr_=document.querySelector(".smash-header"),smash.workspace._hdr_&&smash.class.add(smash.workspace._ws_,"has-header"),smash.workspace._sb_=document.querySelector(".smash-workspace .smash-sidebar"),smash.workspace._sb_&&smash.class.add(smash.workspace._ws_,"has-sidebar"))},smash.workspace.addTab=function(e,s,a,t){if(!smash.get(document,".smash-tab-pane")){var n=smash.get(document,".smash-panel");if(!n)return void console.log("To add a tab there needs to be a panel");n.innerHTML='<div class="smash-tab-pane"><div class="smash-tabs"></div><div class="smash-panes"></div></div>'}var r=smash.get(document,".smash-tab-pane .smash-tabs"),o=smash.get(document,".smash-tab-pane .smash-panes");if(document.title=smash.workspace.createTitle(s),l=smash.get(r,'.smash-tab[data-id="'+e+'"]')){var i=smash.get(o,'.smash-pane[data-id="'+e+'"]');return i.innerHTML=a,l.dataset.url=t,l.onclick(),{tab:l,pane:i}}smash.hide(o,".smash-pane"),(active=smash.get(r,".smash-tab.active"))&&smash.class.remove(active,"active");var l=document.createElement("div");l.className="smash-tab active",l.dataset.id=e,l.dataset.url=t,l.innerHTML=s+'<i class="material-icons close">close</i>',l.onclick=function(e){(active=smash.get(r,".smash-tab.active"))&&smash.class.remove(active,"active"),smash.class.add(this,"active"),smash.hide(document,".smash-pane"),smash.show(document,'.smash-pane[data-id="'+this.dataset.id+'"]'),this.dataset.url&&"undefined"!=this.dataset.url&&smash.router.displayURL(this.dataset.url),document.title=smash.workspace.createTitle(this.innerHTML)},smash.on(l,".close","onclick",function(e){this.parentElement.onclose&&!this.parentElement.onclose()||(smash.class.has(this.parentElement,"active")&&(this.parentElement.previousSibling?this.parentElement.previousSibling.onclick():this.parentElement.nextSibling&&this.parentElement.nextSibling.onclick()),(i=smash.get(document,'.smash-pane[data-id="'+this.parentElement.dataset.id+'"]'))&&i.parentElement.removeChild(i),this.parentElement.parentElement.removeChild(this.parentElement),this.parentElement.onclosed&&this.parentElement.onclosed(),e.stopPropagation())}),r.appendChild(l);var i=document.createElement("div");return i.className="smash-pane",i.dataset.id=e,i.innerHTML=a,o.appendChild(i),{tab:l,pane:i}},smash.workspace.activeTab=function(){var e=smash.get(document,".smash-tab.active");if(!e)return null;var s=smash.get(document,'.smash-pane[data-id="'+e.dataset.id+'"]');return s?{tab:e,pane:s}:null},smash.workspace.createTitle=function(e){var s=e.replace(/<([^>]+?)([^>]*?)>(.*?)<\/\1>/gi,"");if(""==s){var a=document.createElement("div");a.innerHTML=e,(ts=smash.get(a,".title"))&&(s=ts.innerHTML),""==s&&(s="unknown")}return s+(smash.workspace.baseTitle?" | "+smash.workspace.baseTitle:"")};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNtYXNoLmpzIiwiYWpheC5qcyIsImNsYXNzLmpzIiwiY29uZmlnLmpzIiwiY29udGV4dG1lbnUuanMiLCJjb29raWUuanMiLCJkaWFsb2cuanMiLCJleGNlcHRpb24uanMiLCJpbnB1dC5qcyIsInJvdXRlci5qcyIsInNlYXJjaGJveC5qcyIsInNpZGViYXIuanMiLCJzdG9yYWdlLmpzIiwid29ya3NwYWNlLmpzIl0sIm5hbWVzIjpbIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwic21hc2giLCJpbml0IiwiY29uZmlnIiwic2lkZWJhciIsInNlYXJjaGJveCIsIndvcmtzcGFjZSIsImlucHV0IiwiZ2V0IiwicGFyZW50Iiwic2VsZWN0b3IiLCJxdWVyeVNlbGVjdG9yIiwiY29uc29sZSIsImxvZyIsImdldEFsbCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJoaWRlIiwiZWwiLCJpIiwibGVuZ3RoIiwic3R5bGUiLCJkaXNwbGF5IiwibmV4dFZpc2libGUiLCJuZXh0U2libGluZyIsImZpcnN0VmlzaWJsZSIsInBhcmVudEVsZW1lbnQiLCJmaXJzdENoaWxkIiwicHJldmlvdXNWaXNpYmxlIiwicHJldmlvdXNTaWJsaW5nIiwibGFzdFZpc2libGUiLCJsYXN0Q2hpbGQiLCJzaG93IiwicmVtb3ZlIiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwib24iLCJldmVudCIsImNhbGxiYWNrIiwiZWxlbWVudHMiLCJmdXp6eUNvbXBhcmUiLCJzZWFyY2giLCJjb21wYXJlIiwidW5kZWZpbmVkIiwicmVnZXgiLCJ0b0xvd2VyQ2FzZSIsInJlcGxhY2UiLCJzcGxpdCIsImpvaW4iLCJtYXRjaCIsImFqYXgiLCJfaGVhZGVyc18iLCJhZGRIZWFkZXIiLCJuYW1lIiwidmFsdWUiLCJyZW1vdmVIZWFkZXIiLCJvbmVycm9yIiwibWVzc2FnZSIsIm9udW5hdXRob3JpemVkIiwiX3hocl8iLCJYTUxIdHRwUmVxdWVzdCIsInhociIsInZlcnNpb25zIiwiQWN0aXZlWE9iamVjdCIsInNlbmQiLCJ1cmwiLCJtZXRob2QiLCJkYXRhIiwicmVzcG9uc2VUeXBlIiwiYXN5bmMiLCJ4Iiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInN0YXR1cyIsInJlc3BvbnNlIiwib3BlbiIsInNldFJlcXVlc3RIZWFkZXIiLCJxdWVyeSIsImtleSIsInB1c2giLCJlbmNvZGVVUklDb21wb25lbnQiLCJwb3N0IiwiZGF0YVN0ciIsIkpTT04iLCJzdHJpbmdpZnkiLCJjbGFzcyIsImFkZCIsImNsYXNzTmFtZSIsImhhcyIsImNsYXNzTGlzdCIsImluZGV4T2YiLCJ0b2dnbGUiLCJfdmFsdWVzXyIsIl9zaWRlYmFyX2xvY2tfIiwidiIsInN0b3JhZ2UiLCJvcHRpb24iLCJvIiwiRXhjZXB0aW9uIiwic2V0IiwiY29udGV4dG1lbnUiLCJuZXciLCJpdGVtcyIsImN0eCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImlkIiwibGlzdCIsImxhYmVsIiwiaW5uZXJIVE1MIiwiYm9keSIsImFwcGVuZENoaWxkIiwiaXRlbSIsIm9ubW91c2Vkb3duIiwidGhpcyIsImNsb3NlIiwieSIsInBhZ2VZIiwib2Zmc2V0SGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJ0b3AiLCJsZWZ0IiwicGFnZVgiLCJwcmV2ZW50RGVmYXVsdCIsIm9uY2xpY2siLCJjb29raWUiLCJleHBpcnlEYXlzIiwiZCIsIkRhdGUiLCJzZXRUaW1lIiwiZ2V0VGltZSIsImV4cGlyZXMiLCJ0b1VUQ1N0cmluZyIsImRlY29kZWRDb29raWUiLCJkZWNvZGVVUklDb21wb25lbnQiLCJjYSIsImMiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJkaWFsb2ciLCJjb250ZW50IiwiYmFja2Ryb3AiLCJjaGVja0JhY2tkcm9wIiwidG9TdHJpbmciLCJpbnB1dHMiLCJnZXROYW1lIiwiZ2V0QXR0cmlidXRlIiwic2V0VmFsdWUiLCJvbmtleXVwIiwiZ2V0VmFsdWUiLCJwbGFjZWhvbGRlciIsImwiLCJzZWxlY3QiLCJzZWxlY3RzIiwib2xkIiwic2VsZWN0ZWRJbmRleCIsIm9wdGlvbnMiLCJ0ZXh0IiwiZm9jdXMiLCJibHVyIiwic2VsZWN0ZWQiLCJvbmNoYW5nZSIsInJlc2V0IiwiZ2V0VGV4dCIsImhvdmVyIiwidHlwZSIsInNldEF0dHJpYnV0ZSIsInVsIiwib25tb3VzZXVwIiwic3RvcFByb3BhZ2F0aW9uIiwiaiIsImxpIiwib25mb2N1cyIsImNsaWNrIiwib25ibHVyIiwicmVtb3ZlQXR0cmlidXRlIiwia2V5Q29kZSIsInByZXZpb3VzIiwic2Nyb2xsVG9wIiwib2Zmc2V0VG9wIiwibGFzdCIsInNjcm9sbEhlaWdodCIsIm5leHQiLCJxIiwicmVzdWx0cyIsImNoZWNrYm94SW5pdCIsImNoZWNrYm94IiwiY2hlY2tib3hlcyIsImNoZWNrZWQiLCJyb3V0ZXIiLCJfX3BhcnNlUm91dGVSZWdleCIsIl9fZHluYW1pY1BhcnRzIiwiX19iYXNlRGlyZWN0b3J5IiwiX19yb3V0ZXMiLCJzdGF0aWMiLCJkeW5hbWljIiwicGF0aCIsInJvdXRlIiwicGFyc2VSb3V0ZSIsImRlcHRoIiwibnVtVmFycyIsImRpc3BsYXlVUkwiLCJkaXNwYXRjaEV2ZW50IiwiRXZlbnQiLCJhZGRCYXNlRGlyZWN0b3J5IiwiaGlzdG9yeSIsInB1c2hTdGF0ZSIsInJlZGlyZWN0IiwibG9jYXRpb24iLCJoYW5kbGVOb3RGb3VuZCIsInJ1biIsIm9ucG9wc3RhdGUiLCJleGVjdXRlIiwiZ2V0UGF0aCIsIm1hdGNoZXMiLCJ2YXJOdW0iLCJ2YXJzIiwiaHJlZiIsImhvc3QiLCJob3N0bmFtZSIsImNoZWNrUGF0aCIsInBhdGhuYW1lIiwiY2xlYW5QYXRoIiwiUmVnRXhwIiwic2V0QmFzZURpcmVjdG9yeSIsImRpcmVjdG9yeSIsInF1ZXJ5UGFyYW0iLCJwYXJhbSIsInJlZ2V4UyIsImV4ZWMiLCJpXyIsIm1pbkF1dG9Db21wbGV0ZUxlbmd0aCIsInNzYiIsImVtcHR5IiwiYXBwZW5kVG8iLCJub2RlIiwic2libCIsInRvZ2dsZUxvY2siLCJzaWIiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwidW5zZXQiLCJyZW1vdmVJdGVtIiwiZ2V0SXRlbSIsInBhcnNlIiwiY2xlYXIiLCJiYXNlVGl0bGUiLCJfd3NfIiwiX2hkcl8iLCJfc2JfIiwiX3RhYnNfIiwiYWRkVGFiIiwidGl0bGUiLCJwYW5lbCIsInRhYnMiLCJwYW5lc0NvbnRhaW5lciIsImNyZWF0ZVRpdGxlIiwidGFiIiwicGFuZSIsImRhdGFzZXQiLCJhY3RpdmUiLCJvbmNsb3NlIiwib25jbG9zZWQiLCJhY3RpdmVUYWIiLCJ0IiwiZGl2IiwidHMiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFBQyxpQkFBQSxPQUFBLFNBQUFDLEdBQ0FDLE1BQUFDLFNBQ0EsRUFFQSxJQUFBRCxTQUVBQSxPQUFBQyxLQUFBLFdBQ0FELE1BQUFFLE9BQUFELE9BQ0FELE1BQUFHLFFBQUFGLE9BQ0FELE1BQUFJLFVBQUFILE9BQ0FELE1BQUFLLFVBQUFKLE9BQ0FELE1BQUFNLE1BQUFMLFFBR0FELE1BQUFPLElBQUEsU0FBQUMsRUFBQUMsR0FDQSxJQUNBLE1BQUFELEdBQUFFLGNBQUFELEdBQ0EsTUFBQVYsR0FDQVksUUFBQUMsSUFBQWIsS0FLQUMsTUFBQWEsT0FBQSxTQUFBTCxFQUFBQyxHQUNBLElBQ0EsTUFBQUQsR0FBQU0saUJBQUFMLEdBQ0EsTUFBQVYsR0FDQVksUUFBQUMsSUFBQWIsS0FLQUMsTUFBQWUsS0FBQSxTQUFBUCxFQUFBQyxHQUNBLEdBQUFPLEVBRUFBLEdBREFQLEdBQUEsZ0JBQUFBLEdBQ0FULE1BQUFhLE9BQUFMLEVBQUFDLElBRUFELEVBRUEsS0FBQSxHQUFBUyxHQUFBLEVBQUFBLEVBQUFELEVBQUFFLE9BQUFELElBQ0FELEVBQUFDLEdBQUFFLE1BQUFDLFFBQUEsUUFJQXBCLE1BQUFxQixZQUFBLFNBQUFMLEdBQ0EsS0FBQUEsRUFBQUEsRUFBQU0sYUFDQSxHQUFBLFFBQUFOLEVBQUFHLE1BQUFDLFFBR0EsTUFBQUosSUFLQWhCLE1BQUF1QixhQUFBLFNBQUFQLEdBRUEsR0FEQUEsRUFB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QSxJQUFBLElBQUEwTixFQUFBLENBQ0EsR0FBQUMsR0FBQWpLLFNBQUFDLGNBQUEsTUFDQWdLLEdBQUE1SixVQUFBK0ksR0FDQWMsR0FBQXhRLE1BQUFPLElBQUFnUSxFQUFBLGFBQ0FELEVBQUFFLEdBQUE3SixXQUVBLElBQUEySixJQUNBQSxFQUFBLFdBR0EsTUFBQUEsSUFBQXRRLE1BQUFLLFVBQUErTyxVQUFBLE1BQUFwUCxNQUFBSyxVQUFBK08sVUFBQSIsImZpbGUiOiJzbWFzaC5qcyIsInNvdXJjZXNDb250ZW50IjpbIndpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCBmdW5jdGlvbihlKXtcbiAgICBzbWFzaC5pbml0KCk7XG59LCBmYWxzZSk7XG5cbnZhciBzbWFzaCA9IHt9O1xuXG5zbWFzaC5pbml0ID0gZnVuY3Rpb24oKSB7XG4gICAgc21hc2guY29uZmlnLmluaXQoKTtcbiAgICBzbWFzaC5zaWRlYmFyLmluaXQoKTtcbiAgICBzbWFzaC5zZWFyY2hib3guaW5pdCgpO1xuICAgIHNtYXNoLndvcmtzcGFjZS5pbml0KCk7XG4gICAgc21hc2guaW5wdXQuaW5pdCgpO1xufTtcblxuc21hc2guZ2V0ID0gZnVuY3Rpb24ocGFyZW50LCBzZWxlY3Rvcikge1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBwYXJlbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gICAgfSBjYXRjaChlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGUpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufTtcblxuc21hc2guZ2V0QWxsID0gZnVuY3Rpb24ocGFyZW50LCBzZWxlY3Rvcikge1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBwYXJlbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvcik7XG4gICAgfSBjYXRjaChlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGUpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufTtcblxuc21hc2guaGlkZSA9IGZ1bmN0aW9uKHBhcmVudCwgc2VsZWN0b3IpIHtcbiAgICB2YXIgZWw7XG4gICAgaWYgKHNlbGVjdG9yICYmIHR5cGVvZiBzZWxlY3RvciA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZWwgPSBzbWFzaC5nZXRBbGwocGFyZW50LCBzZWxlY3Rvcik7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZWwgPSBbcGFyZW50XTtcbiAgICB9XG4gICAgZm9yICh2YXIgaT0wOyBpPGVsLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGVsW2ldLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgfVxufTtcblxuc21hc2gubmV4dFZpc2libGUgPSBmdW5jdGlvbihlbCkge1xuICAgIHdoaWxlIChlbCA9IGVsLm5leHRTaWJsaW5nKSB7XG4gICAgICAgIGlmIChlbC5zdHlsZS5kaXNwbGF5ID09ICdub25lJykge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVsO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufTtcblxuc21hc2guZmlyc3RWaXNpYmxlID0gZnVuY3Rpb24oZWwpIHtcbiAgICBlbCA9IGVsLnBhcmVudEVsZW1lbnQuZmlyc3RDaGlsZDtcbiAgICBpZiAoZWwuc3R5bGUuZGlzcGxheSAhPSAnbm9uZScpIHtcbiAgICAgICAgcmV0dXJuIGVsO1xuICAgIH1cbiAgICB3aGlsZSAoZWwgPSBlbC5uZXh0U2libGluZykge1xuICAgICAgICBpZiAoZWwuc3R5bGUuZGlzcGxheSA9PSAnbm9uZScpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlbDtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG5cbnNtYXNoLnByZXZpb3VzVmlzaWJsZSA9IGZ1bmN0aW9uKGVsKSB7XG4gICAgd2hpbGUgKGVsID0gZWwucHJldmlvdXNTaWJsaW5nKSB7XG4gICAgICAgIGlmIChlbC5zdHlsZS5kaXNwbGF5ID09ICdub25lJykge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVsO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufTtcblxuc21hc2gubGFzdFZpc2libGUgPSBmdW5jdGlvbihlbCkge1xuICAgIGVsID0gZWwucGFyZW50RWxlbWVudC5sYXN0Q2hpbGQ7XG4gICAgaWYgKGVsLnN0eWxlLmRpc3BsYXkgIT0gJ25vbmUnKSB7XG4gICAgICAgIHJldHVybiBlbDtcbiAgICB9XG4gICAgd2hpbGUgKGVsID0gZWwucHJldmlvdXNTaWJsaW5nKSB7XG4gICAgICAgIGlmIChlbC5zdHlsZS5kaXNwbGF5ID09ICdub25lJykge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVsO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufTtcblxuc21hc2guc2hvdyA9IGZ1bmN0aW9uKHBhcmVudCwgc2VsZWN0b3IpIHtcbiAgICB2YXIgZWw7XG4gICAgaWYgKHNlbGVjdG9yICYmIHR5cGVvZiBzZWxlY3RvciA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZWwgPSBzbWFzaC5nZXRBbGwocGFyZW50LCBzZWxlY3Rvcik7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZWwgPSBbcGFyZW50XTtcbiAgICB9XG4gICAgZm9yICh2YXIgaT0wOyBpPGVsLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGVsW2ldLnN0eWxlLmRpc3BsYXkgPSAnJztcbiAgICB9XG59O1xuXG5zbWFzaC5yZW1vdmUgPSBmdW5jdGlvbihlbCkge1xuICAgIGVsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZWwpO1xufTtcblxuc21hc2gub24gPSBmdW5jdGlvbihwYXJlbnQsIHNlbGVjdG9yLCBldmVudCwgY2FsbGJhY2spIHtcbiAgICB2YXIgZWxlbWVudHMgPSBzbWFzaC5nZXRBbGwocGFyZW50LCBzZWxlY3Rvcik7XG4gICAgZm9yICh2YXIgaT0wOyBpPGVsZW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGVsZW1lbnRzW2ldW2V2ZW50XSA9IGNhbGxiYWNrO1xuICAgIH1cbn07XG5cbnNtYXNoLmZ1enp5Q29tcGFyZSA9IGZ1bmN0aW9uKHNlYXJjaCwgY29tcGFyZSkge1xuICAgIGlmIChjb21wYXJlID09IHVuZGVmaW5lZCB8fCBzZWFyY2ggPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgdmFyIHJlZ2V4ID0gXCIuKj9cIiArIHNlYXJjaC50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoLy0vZywgXCJcXFxcLVwiKS5zcGxpdChcIlwiKS5qb2luKFwiLio/XCIpICsgXCIuKj9cIjtcbiAgICByZXR1cm4gY29tcGFyZS50b0xvd2VyQ2FzZSgpLm1hdGNoKHJlZ2V4KTtcbn07XG4iLCJzbWFzaC5hamF4ID0ge1xuICAgIF9oZWFkZXJzXzogW11cbn07XG5cbnNtYXNoLmFqYXguYWRkSGVhZGVyID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICBzbWFzaC5hamF4Ll9oZWFkZXJzX1tuYW1lXSA9IHZhbHVlO1xufTtcblxuc21hc2guYWpheC5yZW1vdmVIZWFkZXIgPSBmdW5jdGlvbihuYW1lKSB7XG4gICAgZGVsZXRlIHNtYXNoLmFqYXguX2hlYWRlcnNfW25hbWVdO1xufTtcblxuc21hc2guYWpheC5vbmVycm9yID0gZnVuY3Rpb24obWVzc2FnZSkge1xuICAgIGNvbnNvbGUubG9nKG1lc3NhZ2UpO1xufTtcblxuc21hc2guYWpheC5vbnVuYXV0aG9yaXplZCA9IGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgICBzbWFzaC5hamF4Lm9uZXJyb3IobWVzc2FnZSk7XG59O1xuXG5zbWFzaC5hamF4Ll94aHJfID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICh0eXBlb2YgWE1MSHR0cFJlcXVlc3QgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICB9XG4gICAgdmFyIHZlcnNpb25zID0gW1xuICAgICAgICBcIk1TWE1MMi5YbWxIdHRwLjYuMFwiLFxuICAgICAgICBcIk1TWE1MMi5YbWxIdHRwLjUuMFwiLFxuICAgICAgICBcIk1TWE1MMi5YbWxIdHRwLjQuMFwiLFxuICAgICAgICBcIk1TWE1MMi5YbWxIdHRwLjMuMFwiLFxuICAgICAgICBcIk1TWE1MMi5YbWxIdHRwLjIuMFwiLFxuICAgICAgICBcIk1pY3Jvc29mdC5YbWxIdHRwXCJcbiAgICBdO1xuICAgIHZhciB4aHI7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2ZXJzaW9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgeGhyID0gbmV3IEFjdGl2ZVhPYmplY3QodmVyc2lvbnNbaV0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geGhyO1xufTtcblxuc21hc2guYWpheC5zZW5kID0gZnVuY3Rpb24gKHVybCwgY2FsbGJhY2ssIG1ldGhvZCwgZGF0YSwgcmVzcG9uc2VUeXBlLCBvbmVycm9yLCBhc3luYykge1xuICAgIGlmIChhc3luYyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGFzeW5jID0gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKG9uZXJyb3IgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBvbmVycm9yID0gc21hc2guYWpheC5vbmVycm9yO1xuICAgIH1cbiAgICB2YXIgeCA9IHNtYXNoLmFqYXguX3hocl8oKTtcbiAgICB4LnJlc3BvbnNlVHlwZSA9IHJlc3BvbnNlVHlwZTtcbiAgICB4Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRpZiAoeC5yZWFkeVN0YXRlID09IDQpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoeC5zdGF0dXMpIHtcbiAgICAgICAgICAgIGNhc2UgMjAwOlxuICAgICAgICAgICAgY2FzZSAyMDE6XG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKHgucmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgNDAxOlxuICAgICAgICAgICAgICAgIHNtYXNoLmFqYXgub251bmF1dGhvcml6ZWQoeC5yZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIG9uZXJyb3IoeC5yZXNwb25zZSk7XG4gICAgICAgICAgICB9XG5cdFx0fVxuICAgIH07XG4gICAgeC5vcGVuKG1ldGhvZCwgdXJsLCBhc3luYyk7XG4gICAgaWYgKHJlc3BvbnNlVHlwZSA9PSAnanNvbicpIHtcbiAgICAgICAgeC5zZXRSZXF1ZXN0SGVhZGVyKCdDb250ZW50LXR5cGUnLCAnYXBwbGljYXRpb24vanNvbicpO1xuICAgIH0gZWxzZSBpZiAobWV0aG9kID09ICdQT1NUJykge1xuICAgICAgICB4LnNldFJlcXVlc3RIZWFkZXIoJ0NvbnRlbnQtdHlwZScsICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnKTtcbiAgICB9XG4gICAgZm9yICh2YXIgbmFtZSBpbiBzbWFzaC5hamF4Ll9oZWFkZXJzXykge1xuICAgICAgICB4LnNldFJlcXVlc3RIZWFkZXIobmFtZSwgc21hc2guYWpheC5faGVhZGVyc19bbmFtZV0pO1xuICAgIH1cbiAgICB4LnNlbmQoZGF0YSlcbn07XG5cbnNtYXNoLmFqYXguZ2V0ID0gZnVuY3Rpb24gKHVybCwgY2FsbGJhY2ssIGRhdGEsIHJlc3BvbnNlVHlwZSwgb25lcnJvciwgYXN5bmMpIHtcbiAgICB2YXIgcXVlcnkgPSBbXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gZGF0YSkge1xuICAgICAgICBxdWVyeS5wdXNoKGVuY29kZVVSSUNvbXBvbmVudChrZXkpICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KGRhdGFba2V5XSkpO1xuICAgIH1cbiAgICBzbWFzaC5hamF4LnNlbmQodXJsICsgKHF1ZXJ5Lmxlbmd0aCA/ICc/JyArIHF1ZXJ5LmpvaW4oJyYnKSA6ICcnKSwgY2FsbGJhY2ssICdHRVQnLCBudWxsLCByZXNwb25zZVR5cGUsIG9uZXJyb3IsICBhc3luYylcbn07XG5cbnNtYXNoLmFqYXgucG9zdCA9IGZ1bmN0aW9uICh1cmwsIGNhbGxiYWNrLCBkYXRhLCByZXNwb25zZVR5cGUsIG9uZXJyb3IsIGFzeW5jKSB7XG4gICAgdmFyIGRhdGFTdHI7XG4gICAgaWYgKGRhdGEpIHtcbiAgICAgICAgaWYgKHJlc3BvbnNlVHlwZSAhPSAnanNvbicpIHtcbiAgICAgICAgICAgIHZhciBxdWVyeSA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIGRhdGEpIHtcbiAgICAgICAgICAgICAgICBxdWVyeS5wdXNoKGVuY29kZVVSSUNvbXBvbmVudChrZXkpICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KGRhdGFba2V5XSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGF0YVN0ciA9IHF1ZXJ5LmpvaW4oJyYnKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZGF0YVN0ciA9IEpTT04uc3RyaW5naWZ5KGRhdGEpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHNtYXNoLmFqYXguc2VuZCh1cmwsIGNhbGxiYWNrLCAnUE9TVCcsIGRhdGFTdHIsIHJlc3BvbnNlVHlwZSwgb25lcnJvciwgYXN5bmMpXG59O1xuIiwic21hc2guY2xhc3MgPSB7fTtcblxuc21hc2guY2xhc3MuYWRkID0gZnVuY3Rpb24oZWwsIGNsYXNzTmFtZSkge1xuICAgIGlmICghc21hc2guY2xhc3MuaGFzKGVsLCBjbGFzc05hbWUpKSB7XG4gICAgICAgIGVsLmNsYXNzTGlzdCA/IGVsLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKSA6IGVsLmNsYXNzTmFtZSArPSAoJyAnICsgY2xhc3NOYW1lKTtcbiAgICB9XG59O1xuXG5zbWFzaC5jbGFzcy5yZW1vdmUgPSBmdW5jdGlvbihlbCwgY2xhc3NOYW1lKSB7XG4gICAgaWYgKHNtYXNoLmNsYXNzLmhhcyhlbCwgY2xhc3NOYW1lKSkge1xuICAgICAgICBlbC5jbGFzc0xpc3QgPyBlbC5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSkgOiBlbC5jbGFzc05hbWUgPSBlbC5jbGFzc05hbWUucmVwbGFjZShjbGFzc05hbWUsICcnKTtcbiAgICB9XG59O1xuXG5zbWFzaC5jbGFzcy5oYXMgPSBmdW5jdGlvbihlbCwgY2xhc3NOYW1lKSB7XG4gICAgcmV0dXJuICgoXCIgXCIgKyBlbC5jbGFzc05hbWUgKyBcIiBcIikucmVwbGFjZSgvW1xcblxcdF0vZywgXCIgXCIpLmluZGV4T2YoXCIgXCIgKyBjbGFzc05hbWUgKyBcIiBcIikgPiAtMSk7XG59O1xuXG5zbWFzaC5jbGFzcy50b2dnbGUgPSBmdW5jdGlvbihlbCwgY2xhc3NOYW1lKSB7XG4gICAgc21hc2guY2xhc3MuaGFzKGVsLCBjbGFzc05hbWUpID8gc21hc2guY2xhc3MucmVtb3ZlKGVsLCBjbGFzc05hbWUpIDogc21hc2guY2xhc3MuYWRkKGVsLCBjbGFzc05hbWUpO1xufTtcbiIsInNtYXNoLmNvbmZpZyA9IHtcbiAgICBfdmFsdWVzXzoge1xuICAgICAgICBfc2lkZWJhcl9sb2NrXzogZmFsc2VcbiAgICB9XG59XG5cbnNtYXNoLmNvbmZpZy5pbml0ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHYgPSBzbWFzaC5zdG9yYWdlLmdldCgnY29uZmlnJyk7XG4gICAgaWYgKHYpIHtcbiAgICAgICAgc21hc2guY29uZmlnLl92YWx1ZXNfID0gdjtcbiAgICB9XG59O1xuXG5zbWFzaC5jb25maWcuZ2V0ID0gZnVuY3Rpb24ob3B0aW9uKSB7XG4gICAgdmFyIG8gPSAnXycgKyBvcHRpb24gKyAnXyc7XG4gICAgaWYgKG8gaW4gc21hc2guY29uZmlnLl92YWx1ZXNfKSB7XG4gICAgICAgIHJldHVybiBzbWFzaC5jb25maWcuX3ZhbHVlc19bb107XG4gICAgfVxuICAgIHRocm93IG5ldyBzbWFzaC5FeGNlcHRpb24oJzAwMScsICdJbnZhbGlkIGNvbmZpZyBvcHRpb24gXCInICsgb3B0aW9uICsgJ1wiJyk7XG59O1xuXG5zbWFzaC5jb25maWcuc2V0ID0gZnVuY3Rpb24ob3B0aW9uLCB2YWx1ZSkge1xuICAgIHZhciBvID0gJ18nICsgb3B0aW9uICsgJ18nO1xuICAgIGlmICghbyBpbiBzbWFzaC5jb25maWcuX3ZhbHVlc18pIHtcbiAgICAgICAgdGhyb3cgbmV3IHNtYXNoLkV4Y2VwdGlvbignMDAxJywgJ0ludmFsaWQgY29uZmlnIG9wdGlvbiBcIicgKyBvcHRpb24gKyAnXCInKTtcbiAgICB9XG4gICAgc21hc2guY29uZmlnLl92YWx1ZXNfW29dID0gdmFsdWU7XG4gICAgc21hc2guc3RvcmFnZS5zZXQoJ2NvbmZpZycsIHNtYXNoLmNvbmZpZy5fdmFsdWVzXyk7XG59O1xuIiwic21hc2guY29udGV4dG1lbnUgPSB7fTtcblxuc21hc2guY29udGV4dG1lbnUubmV3ID0gZnVuY3Rpb24oZSwgaXRlbXMpIHtcbiAgICBpZiAoY3R4ID0gc21hc2guZ2V0KGRvY3VtZW50LCBcIiNzbWFzaC1jb250ZXh0LW1lbnVcIikpIHtcbiAgICAgICAgc21hc2gucmVtb3ZlKGN0eCk7XG4gICAgfVxuICAgIHZhciBjdHggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGN0eC5pZCA9ICBcInNtYXNoLWNvbnRleHQtbWVudVwiO1xuICAgIHZhciBsaXN0ID0gXCI8dWwgY2xhc3M9J2NsaWNrYWJsZSc+XCI7XG4gICAgZm9yIChpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChpdGVtc1tpXSA9PSBcInNlcGVyYXRvclwiKSB7XG4gICAgICAgICAgICBsaXN0ICs9ICc8bGkgY2xhc3M9XCJzZXBlcmF0b3JcIj48L2xpPic7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBsaXN0ICs9ICc8bGkgY2xhc3M9XCJjdHhfaXRlbV8nICsgaSArICdcIj4nICsgaXRlbXNbaV0ubGFiZWwgKyBcIjwvbGk+XCI7XG4gICAgfVxuICAgIGxpc3QgKz0gJzwvdWw+JztcbiAgICBjdHguaW5uZXJIVE1MID0gbGlzdDtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGN0eCk7XG4gICAgdmFyIGl0ZW07XG4gICAgZm9yIChpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChpdGVtc1tpXSA9PSBcInNlcGVyYXRvclwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpdGVtID0gc21hc2guZ2V0KGN0eCwgXCJsaS5jdHhfaXRlbV9cIiArIGkpO1xuICAgICAgICBpdGVtLmNhbGxiYWNrID0gaXRlbXNbaV0uY2FsbGJhY2s7XG4gICAgICAgIGl0ZW0ub25tb3VzZWRvd24gPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICB0aGlzLmNhbGxiYWNrKGUpO1xuICAgICAgICAgICAgc21hc2guY29udGV4dG1lbnUuY2xvc2UoZSk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHZhciB5ID0gZS5wYWdlWVxuICAgIGlmICh5ICsgY3R4Lm9mZnNldEhlaWdodCA+IHdpbmRvdy5pbm5lckhlaWdodCkge1xuICAgICAgICB5ID0gd2luZG93LmlubmVySGVpZ2h0IC0gY3R4Lm9mZnNldEhlaWdodCAtIDIwO1xuICAgIH1cbiAgICBjdHguc3R5bGUudG9wID0geTtcbiAgICBjdHguc3R5bGUubGVmdCA9IGUucGFnZVg7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGRvY3VtZW50Lm9uY2xpY2sgPSBzbWFzaC5jb250ZXh0bWVudS5jbG9zZTtcbiAgICByZXR1cm4gZmFsc2U7XG59O1xuXG5zbWFzaC5jb250ZXh0bWVudS5jbG9zZSA9IGZ1bmN0aW9uKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgaWYgKGN0eCA9IHNtYXNoLmdldChkb2N1bWVudCwgXCIjc21hc2gtY29udGV4dC1tZW51XCIpKSB7XG4gICAgICAgIHNtYXNoLnJlbW92ZShjdHgpO1xuICAgIH1cbiAgICBkb2N1bWVudC5vbmNsaWNrID0gdW5kZWZpbmVkO1xufTtcbiIsInNtYXNoLmNvb2tpZSA9IHt9O1xuXG5zbWFzaC5jb29raWUuc2V0ID0gZnVuY3Rpb24obmFtZSwgdmFsdWUsIGV4cGlyeURheXMpIHtcbiAgICB2YXIgZCA9IG5ldyBEYXRlKCk7XG4gICAgZC5zZXRUaW1lKGQuZ2V0VGltZSgpICsgKGV4cGlyeURheXMqMjQqNjAqNjAqMTAwMCkpO1xuICAgIHZhciBleHBpcmVzID0gXCJleHBpcmVzPVwiKyBkLnRvVVRDU3RyaW5nKCk7XG4gICAgZG9jdW1lbnQuY29va2llID0gbmFtZSArIFwiPVwiICsgdmFsdWUgKyBcIjtcIiArIGV4cGlyZXMgKyBcIjtwYXRoPS9cIjtcbn07XG5cbnNtYXNoLmNvb2tpZS5nZXQgPSBmdW5jdGlvbihuYW1lKSB7XG4gICAgdmFyIG5hbWUgPSBuYW1lICsgXCI9XCI7XG4gICAgdmFyIGRlY29kZWRDb29raWUgPSBkZWNvZGVVUklDb21wb25lbnQoZG9jdW1lbnQuY29va2llKTtcbiAgICB2YXIgY2EgPSBkZWNvZGVkQ29va2llLnNwbGl0KCc7Jyk7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8Y2EubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGMgPSBjYVtpXTtcbiAgICAgICAgd2hpbGUgKGMuY2hhckF0KDApID09ICcgJykge1xuICAgICAgICAgICAgYyA9IGMuc3Vic3RyaW5nKDEpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjLmluZGV4T2YobmFtZSkgPT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIGMuc3Vic3RyaW5nKG5hbWUubGVuZ3RoLCBjLmxlbmd0aCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIFwiXCI7XG59O1xuIiwic21hc2guZGlhbG9nID0ge307XG5cbnNtYXNoLmRpYWxvZy5uZXcgPSBmdW5jdGlvbihjb250ZW50KSB7XG4gICAgdmFyIGJhY2tkcm9wID0gc21hc2guZGlhbG9nLmNoZWNrQmFja2Ryb3AoKTtcblxuICAgIHZhciBkaWFsb2cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBkaWFsb2cuY2xhc3NOYW1lID0gJ3NtYXNoLWRpYWxvZyc7XG4gICAgZGlhbG9nLmlubmVySFRNTCA9IGNvbnRlbnQ7XG4gICAgYmFja2Ryb3AuYXBwZW5kQ2hpbGQoZGlhbG9nKTtcbn07XG5cbnNtYXNoLmRpYWxvZy5jaGVja0JhY2tkcm9wID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKGJhY2tkcm9wID0gc21hc2guZ2V0KGRvY3VtZW50LCBcIi5zbWFzaC1kaWFsb2ctYmFja2Ryb3BcIikpIHtcbiAgICAgICAgaWYgKGRpYWxvZyA9IHNtYXNoLmdldChkb2N1bWVudCwgXCIuc21hc2gtZGlhbG9nLWJhY2tkcm9wIC5zbWFzaC1kaWFsb2dcIikpIHtcbiAgICAgICAgICAgIGJhY2tkcm9wLnJlbW92ZUNoaWxkKGRpYWxvZyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJhY2tkcm9wO1xuICAgIH1cbiAgICB2YXIgYmFja2Ryb3AgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBiYWNrZHJvcC5jbGFzc05hbWUgPSAnc21hc2gtZGlhbG9nLWJhY2tkcm9wJztcbiAgICBiYWNrZHJvcC5pbm5lckhUTUwgPSAnPGRpdiBjbGFzcz1cInNtYXNoLWRpYWxvZy1iYWNrZ3JvdW5kXCI+PC9kaXY+JztcbiAgICBzbWFzaC5nZXQoYmFja2Ryb3AsICcuc21hc2gtZGlhbG9nLWJhY2tncm91bmQnKS5vbmNsaWNrID0gc21hc2guZGlhbG9nLmNsb3NlO1xuICAgIHNtYXNoLmdldChkb2N1bWVudCwgJ2JvZHknKS5hcHBlbmRDaGlsZChiYWNrZHJvcCk7XG4gICAgcmV0dXJuIGJhY2tkcm9wO1xufTtcblxuc21hc2guZGlhbG9nLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKGRpYWxvZyA9IHNtYXNoLmdldChkb2N1bWVudCwgXCIuc21hc2gtZGlhbG9nLWJhY2tkcm9wXCIpKSB7XG4gICAgICAgIHNtYXNoLmdldChkb2N1bWVudCwgJ2JvZHknKS5yZW1vdmVDaGlsZChkaWFsb2cpO1xuICAgIH1cbn07XG4iLCJzbWFzaC5FeGNlcHRpb24gPSBmdW5jdGlvbiAodmFsdWUsIG1lc3NhZ2UpIHtcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICB0aGlzLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAnU21hc2hFeGNlcHRpb24gJyArIHRoaXMudmFsdWUgKyAnOiAnICsgdGhpcy5tZXNzYWdlO1xuICAgIH07XG59O1xuIiwic21hc2guaW5wdXQgPSB7fTtcblxuc21hc2guaW5wdXQuaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBpbnB1dHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnNtYXNoLWlucHV0IGlucHV0LCAuc21hc2gtdGV4dGFyZWEgdGV4dGFyZWFcIik7XG4gICAgdmFyIGlucHV0O1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaW5wdXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlucHV0ID0gaW5wdXRzW2ldO1xuICAgICAgICBpZiAoc21hc2guY2xhc3MuaGFzKGlucHV0LnBhcmVudEVsZW1lbnQsICdzbWFzaC1pbml0aWFsaXNlZCcpKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlucHV0LnBhcmVudEVsZW1lbnQuZ2V0TmFtZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvcihcImlucHV0XCIpLmdldEF0dHJpYnV0ZSgnbmFtZScpO1xuICAgICAgICB9O1xuXG4gICAgICAgIGlucHV0LnBhcmVudEVsZW1lbnQuc2V0VmFsdWUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKGlucHV0ID0gdGhpcy5xdWVyeVNlbGVjdG9yKFwiaW5wdXRcIikpIHtcbiAgICAgICAgICAgICAgICBpbnB1dC52YWx1ZSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIGlucHV0Lm9ua2V5dXAoKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaW5wdXQgPSB0aGlzLnF1ZXJ5U2VsZWN0b3IoXCJ0ZXh0YXJlYVwiKSkge1xuICAgICAgICAgICAgICAgIGlucHV0LnZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgaW5wdXQub25rZXl1cCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGlucHV0LnBhcmVudEVsZW1lbnQuZ2V0VmFsdWUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmIChpbnB1dCA9IHRoaXMucXVlcnlTZWxlY3RvcihcImlucHV0XCIpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gdGhpcy5xdWVyeVNlbGVjdG9yKFwiaW5wdXRcIik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlucHV0LnZhbHVlXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGlucHV0ID0gdGhpcy5xdWVyeVNlbGVjdG9yKFwidGV4dGFyZWFcIikpIHtcbiAgICAgICAgICAgICAgICB2YXIgaW5wdXQgPSB0aGlzLnF1ZXJ5U2VsZWN0b3IoXCJ0ZXh0YXJlYVwiKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gaW5wdXQudmFsdWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9O1xuXG4gICAgICAgIGlmIChzbWFzaC5jbGFzcy5oYXMoaW5wdXQucGFyZW50RWxlbWVudCwgJ2hhcy1mbG9hdGluZy1sYWJlbCcpKSB7XG4gICAgICAgICAgICBzbWFzaC5jbGFzcy5yZW1vdmUoaW5wdXQucGFyZW50RWxlbWVudCwgJ2hhcy1mbG9hdGluZy1sYWJlbCcpO1xuICAgICAgICAgICAgc21hc2guY2xhc3MuYWRkKGlucHV0LnBhcmVudEVsZW1lbnQsICdmbG9hdGluZy1sYWJlbCcpO1xuXG4gICAgICAgICAgICB2YXIgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgICAgICAgICAgbGFiZWwuaW5uZXJIVE1MID0gaW5wdXQucGxhY2Vob2xkZXI7XG4gICAgICAgICAgICBpbnB1dC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGxhYmVsKTtcbiAgICAgICAgICAgIGlucHV0Lm9ua2V5dXAgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGwgPSB0aGlzLnBhcmVudEVsZW1lbnQucXVlcnlTZWxlY3RvcihcImxhYmVsXCIpO1xuICAgICAgICAgICAgICAgIGlmIChsKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnZhbHVlICE9IFwiXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNtYXNoLmNsYXNzLmFkZChsLCAnc2hvdycpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgc21hc2guY2xhc3MucmVtb3ZlKGwsICdzaG93Jyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGlucHV0LnBhcmVudEVsZW1lbnQuZ2V0QXR0cmlidXRlKCd2YWx1ZScpKSB7XG4gICAgICAgICAgICBpbnB1dC5wYXJlbnRFbGVtZW50LnNldFZhbHVlKGlucHV0LnBhcmVudEVsZW1lbnQuZ2V0QXR0cmlidXRlKCd2YWx1ZScpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHNtYXNoLmNsYXNzLmFkZChpbnB1dC5wYXJlbnRFbGVtZW50LCAnc21hc2gtaW5pdGlhbGlzZWQnKTtcbiAgICB9XG4gICAgdmFyIHNlbGVjdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnNtYXNoLXNlbGVjdCBzZWxlY3RcIik7XG4gICAgdmFyIHNlbGVjdDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNlbGVjdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgc2VsZWN0ID0gc2VsZWN0c1tpXTtcbiAgICAgICAgaWYgKHNtYXNoLmNsYXNzLmhhcyhzZWxlY3QucGFyZW50RWxlbWVudCwgJ3NtYXNoLWluaXRpYWxpc2VkJykpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzbWFzaC5jbGFzcy5oYXMoc2VsZWN0LnBhcmVudEVsZW1lbnQsICdoYXMtZmxvYXRpbmctbGFiZWwnKSkge1xuICAgICAgICAgICAgc21hc2guY2xhc3MucmVtb3ZlKHNlbGVjdC5wYXJlbnRFbGVtZW50LCAnaGFzLWZsb2F0aW5nLWxhYmVsJyk7XG4gICAgICAgICAgICBzbWFzaC5jbGFzcy5hZGQoc2VsZWN0LnBhcmVudEVsZW1lbnQsICdmbG9hdGluZy1sYWJlbCcpO1xuICAgICAgICAgICAgdmFyIGxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICAgICAgICAgIGxhYmVsLmlubmVySFRNTCA9IHNlbGVjdC5nZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJyk7XG4gICAgICAgICAgICBzZWxlY3QucGFyZW50RWxlbWVudC5hcHBlbmRDaGlsZChsYWJlbCk7XG4gICAgICAgIH1cblxuICAgICAgICBzZWxlY3QucGFyZW50RWxlbWVudC5nZXROYW1lID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yKFwic2VsZWN0XCIpLmdldEF0dHJpYnV0ZSgnbmFtZScpO1xuICAgICAgICB9O1xuXG4gICAgICAgIHNlbGVjdC5wYXJlbnRFbGVtZW50LnNldFZhbHVlID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIHNtYXNoLmNsYXNzLnJlbW92ZSh0aGlzLCAnaXMtZm9jdXNzZWQnKTtcbiAgICAgICAgICAgIHZhciBzZWxlY3QgPSB0aGlzLnF1ZXJ5U2VsZWN0b3IoXCJzZWxlY3RcIik7XG4gICAgICAgICAgICB2YXIgaW5wdXQgPSB0aGlzLnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dFwiKTtcbiAgICAgICAgICAgIHZhciBvbGQgPSBzZWxlY3QudmFsdWU7XG4gICAgICAgICAgICBzZWxlY3QudmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgICAgIGlmIChzZWxlY3Quc2VsZWN0ZWRJbmRleCA+IC0xKSB7XG4gICAgICAgICAgICAgICAgaW5wdXQudmFsdWUgPSBzZWxlY3Qub3B0aW9uc1tzZWxlY3Quc2VsZWN0ZWRJbmRleF0udGV4dDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaW5wdXQudmFsdWUgPSBcIlwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaW5wdXQuZm9jdXMoKTtcbiAgICAgICAgICAgIGlucHV0LmJsdXIoKTtcbiAgICAgICAgICAgIGlmIChvbGQgIT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZWN0ZWQgPSBzbWFzaC5nZXQodGhpcy5wYXJlbnRFbGVtZW50LCAnLnNlbGVjdGVkJykpIHtcbiAgICAgICAgICAgICAgICAgICAgc21hc2guY2xhc3MucmVtb3ZlKHNlbGVjdGVkLCAnc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHNlbGVjdGVkID0gc21hc2guZ2V0KHRoaXMsICdsaVt2YWx1ZT1cIicgKyB2YWx1ZSArICdcIl0nKSkge1xuICAgICAgICAgICAgICAgICAgICBzbWFzaC5jbGFzcy5hZGQoc2VsZWN0ZWQsICdzZWxlY3RlZCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc2VsZWN0Lm9uY2hhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdC5vbmNoYW5nZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodGhpcy5vbmNoYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uY2hhbmdlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIHNlbGVjdC5wYXJlbnRFbGVtZW50LmdldFZhbHVlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgc2VsZWN0ID0gdGhpcy5xdWVyeVNlbGVjdG9yKFwic2VsZWN0XCIpO1xuICAgICAgICAgICAgaWYgKHNlbGVjdC5zZWxlY3RlZEluZGV4ID09IC0xKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gc2VsZWN0Lm9wdGlvbnNbc2VsZWN0LnNlbGVjdGVkSW5kZXhdLnZhbHVlO1xuICAgICAgICB9O1xuXG4gICAgICAgIHNlbGVjdC5wYXJlbnRFbGVtZW50LnJlc2V0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBzbWFzaC5nZXQodGhpcywgJ2lucHV0JykudmFsdWUgPSB0aGlzLmdldFRleHQoKTtcbiAgICAgICAgICAgIGlmIChob3ZlciA9IHNtYXNoLmdldCh0aGlzLCAndWwgbGkuaG92ZXInKSkge1xuICAgICAgICAgICAgICAgIHNtYXNoLmNsYXNzLnJlbW92ZShob3ZlciwgJ2hvdmVyJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgc2VsZWN0LnBhcmVudEVsZW1lbnQuZ2V0VGV4dCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIHNlbGVjdCA9IHRoaXMucXVlcnlTZWxlY3RvcihcInNlbGVjdFwiKTtcbiAgICAgICAgICAgIGlmIChzZWxlY3Quc2VsZWN0ZWRJbmRleCA9PSAtMSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHNlbGVjdC5vcHRpb25zW3NlbGVjdC5zZWxlY3RlZEluZGV4XS5pbm5lckhUTUw7XG4gICAgICAgIH07XG5cbiAgICAgICAgdmFyIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgICAgaW5wdXQudHlwZSA9IFwidGV4dFwiO1xuICAgICAgICBpbnB1dC5wbGFjZWhvbGRlciA9IHNlbGVjdC5nZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJyk7XG4gICAgICAgIGlucHV0LnNldEF0dHJpYnV0ZShcInJlYWRvbmx5XCIsIFwicmVhZG9ubHlcIik7XG4gICAgICAgIHNlbGVjdC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGlucHV0KTtcblxuICAgICAgICB2YXIgb3B0aW9ucyA9IHNlbGVjdC5xdWVyeVNlbGVjdG9yQWxsKFwib3B0aW9uXCIpO1xuICAgICAgICB2YXIgdWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xuICAgICAgICB1bC5vbm1vdXNldXAgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICB9O1xuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IG9wdGlvbnMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgIHZhciBvcHRpb24gPSBvcHRpb25zW2pdO1xuICAgICAgICAgICAgaWYgKCFvcHRpb24uZ2V0QXR0cmlidXRlKCd2YWx1ZScpKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgICAgICAgICAgbGkuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgb3B0aW9uLnZhbHVlKTtcbiAgICAgICAgICAgIGxpLmlubmVySFRNTCA9IG9wdGlvbi5pbm5lckhUTUw7XG4gICAgICAgICAgICB1bC5hcHBlbmRDaGlsZChsaSk7XG4gICAgICAgICAgICBsaS5vbm1vdXNlZG93biA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5zZXRWYWx1ZSh0aGlzLmdldEF0dHJpYnV0ZSgndmFsdWUnKSk7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICBpZiAod2luZG93Lm9ubW91c2V1cCkge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cub25tb3VzZXVwKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHNlbGVjdC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKHVsKTtcbiAgICAgICAgaW5wdXQub25mb2N1cyA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIGlmIChzbWFzaC5jbGFzcy5oYXModGhpcy5wYXJlbnRFbGVtZW50LCAnaXMtZm9jdXNzZWQnKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBsID0gdGhpcy5wYXJlbnRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJsYWJlbFwiKTtcbiAgICAgICAgICAgIGlmIChsKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMudmFsdWUgIT0gXCJcIikge1xuICAgICAgICAgICAgICAgICAgICBzbWFzaC5jbGFzcy5hZGQobCwgJ3Nob3cnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzbWFzaC5jbGFzcy5yZW1vdmUobCwgJ3Nob3cnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnBhcmVudEVsZW1lbnQuY2xpY2soKTtcbiAgICAgICAgfTtcblxuICAgICAgICBpbnB1dC5vbmJsdXIgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBpZiAod2luZG93Lm9ubW91c2V1cCkge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5vbm1vdXNldXAoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHNlbGVjdC5wYXJlbnRFbGVtZW50Lm9uY2xpY2sgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHNtYXNoLmNsYXNzLmFkZCh0aGlzLCAnaXMtZm9jdXNzZWQnKTtcbiAgICAgICAgICAgIHZhciBpbnB1dCA9IHNtYXNoLmdldCh0aGlzLCAnaW5wdXQnKTtcbiAgICAgICAgICAgIHZhciBzZWxlY3QgPSB0aGlzO1xuICAgICAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKFwicGxhY2Vob2xkZXJcIiwgaW5wdXQudmFsdWUpO1xuICAgICAgICAgICAgaW5wdXQucmVtb3ZlQXR0cmlidXRlKFwicmVhZG9ubHlcIik7XG4gICAgICAgICAgICBpbnB1dC5ibHVyKCk7XG4gICAgICAgICAgICBpbnB1dC52YWx1ZSA9IFwiXCI7XG4gICAgICAgICAgICB3aW5kb3cub25tb3VzZXVwID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgd2luZG93Lm9ubW91c2V1cCA9IG51bGw7XG4gICAgICAgICAgICAgICAgaW5wdXQub25rZXl1cCA9IG51bGw7XG4gICAgICAgICAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKFwicmVhZG9ubHlcIiwgXCJyZWFkb25seVwiKTtcbiAgICAgICAgICAgICAgICBzZWxlY3QucmVzZXQoKTtcbiAgICAgICAgICAgICAgICBpZiAoaXRlbXMgPSBzbWFzaC5nZXRBbGwoc2VsZWN0LCAndWwgbGknKSkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpPTA7IGk8aXRlbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zW2ldLnN0eWxlLmRpc3BsYXkgPSBcIlwiO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHNtYXNoLnNob3coc2VsZWN0LCAndWwnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc21hc2guY2xhc3MucmVtb3ZlKHNlbGVjdCwgJ2lzLWZvY3Vzc2VkJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlucHV0Lm9ua2V5dXAgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChlLmtleUNvZGUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDEzOlxuICAgICAgICAgICAgICAgICAgICBpZiAoaG92ZXIgPSBzbWFzaC5nZXQoc2VsZWN0LCAndWwgbGkuaG92ZXInKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaG92ZXIub25tb3VzZWRvd24oZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzNzpcbiAgICAgICAgICAgICAgICBjYXNlIDM4OlxuICAgICAgICAgICAgICAgICAgICBpZiAoaG92ZXIgPSBzbWFzaC5nZXQoc2VsZWN0LCAndWwgbGkuaG92ZXInKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc21hc2guY2xhc3MucmVtb3ZlKGhvdmVyLCBcImhvdmVyXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByZXZpb3VzID0gc21hc2gucHJldmlvdXNWaXNpYmxlKGhvdmVyKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNtYXNoLmNsYXNzLmFkZChwcmV2aW91cywgXCJob3ZlclwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmV2aW91cy5wYXJlbnRFbGVtZW50LnNjcm9sbFRvcCA9IHByZXZpb3VzLm9mZnNldFRvcDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxhc3QgPSBzbWFzaC5sYXN0VmlzaWJsZShob3ZlcikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc21hc2guY2xhc3MuYWRkKGxhc3QsIFwiaG92ZXJcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3QucGFyZW50RWxlbWVudC5zY3JvbGxUb3AgPSBsYXN0LnBhcmVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBsaSA9IHNtYXNoLmdldChzZWxlY3QsICd1bCBsaScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxhc3QgPSBzbWFzaC5sYXN0VmlzaWJsZShsaSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbWFzaC5jbGFzcy5hZGQobGFzdCwgXCJob3ZlclwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0LnBhcmVudEVsZW1lbnQuc2Nyb2xsVG9wID0gbGFzdC5wYXJlbnRFbGVtZW50LnNjcm9sbEhlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDM5OlxuICAgICAgICAgICAgICAgIGNhc2UgNDA6XG4gICAgICAgICAgICAgICAgICAgIGlmIChob3ZlciA9IHNtYXNoLmdldChzZWxlY3QsICd1bCBsaS5ob3ZlcicpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzbWFzaC5jbGFzcy5yZW1vdmUoaG92ZXIsIFwiaG92ZXJcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobmV4dCA9IHNtYXNoLm5leHRWaXNpYmxlKGhvdmVyKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNtYXNoLmNsYXNzLmFkZChuZXh0LCBcImhvdmVyXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHQucGFyZW50RWxlbWVudC5zY3JvbGxUb3AgPSBuZXh0Lm9mZnNldFRvcDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5leHQgPSBzbWFzaC5maXJzdFZpc2libGUoaG92ZXIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNtYXNoLmNsYXNzLmFkZChuZXh0LCBcImhvdmVyXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0LnBhcmVudEVsZW1lbnQuc2Nyb2xsVG9wID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbGkgPSBzbWFzaC5nZXQoc2VsZWN0LCAndWwgbGknKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXh0ID0gc21hc2guZmlyc3RWaXNpYmxlKGxpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNtYXNoLmNsYXNzLmFkZChuZXh0LCBcImhvdmVyXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHQucGFyZW50RWxlbWVudC5zY3JvbGxUb3AgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMjc6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudmFsdWUgPSBcIlwiO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJsdXIoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHEgPSB0aGlzLnZhbHVlLnJlcGxhY2UoL1teYS16QS1aMC05XyBdL2csIFwiXCIpO1xuICAgICAgICAgICAgICAgIGlmIChpdGVtcyA9IHNtYXNoLmdldEFsbChzZWxlY3QsICd1bCBsaScpKSB7XG4gICAgICAgICAgICAgICAgICAgIHNtYXNoLnNob3coc2VsZWN0LCAndWwnKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW07XG4gICAgICAgICAgICAgICAgICAgIHZhciByZXN1bHRzID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGk9MDsgaTxpdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbSA9IGl0ZW1zW2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHEgPT0gXCJcIiB8fCBzbWFzaC5mdXp6eUNvbXBhcmUocSwgaXRlbS5pbm5lckhUTUwpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRzID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFyZXN1bHRzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzbWFzaC5oaWRlKHNlbGVjdCwgJ3VsJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlucHV0LmZvY3VzKCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKHNlbGVjdC5wYXJlbnRFbGVtZW50LmdldEF0dHJpYnV0ZSgndmFsdWUnKSkge1xuICAgICAgICAgICAgc2VsZWN0LnBhcmVudEVsZW1lbnQuc2V0VmFsdWUoc2VsZWN0LnBhcmVudEVsZW1lbnQuZ2V0QXR0cmlidXRlKCd2YWx1ZScpKTtcbiAgICAgICAgfVxuICAgICAgICBzbWFzaC5jbGFzcy5hZGQoc2VsZWN0LnBhcmVudEVsZW1lbnQsICdzbWFzaC1pbml0aWFsaXNlZCcpO1xuICAgIH1cbiAgICBzbWFzaC5pbnB1dC5jaGVja2JveEluaXQoKTtcbn07XG5cbnNtYXNoLmlucHV0LmNoZWNrYm94SW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBjaGVja2JveGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5zbWFzaC1jaGVja2JveCBpbnB1dFwiKTtcbiAgICB2YXIgY2hlY2tib3g7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGVja2JveGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNoZWNrYm94ID0gY2hlY2tib3hlc1tpXTtcbiAgICAgICAgaWYgKHNtYXNoLmNsYXNzLmhhcyhjaGVja2JveC5wYXJlbnRFbGVtZW50LCAnc21hc2gtaW5pdGlhbGlzZWQnKSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgYyA9ICBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgIGMuY2xhc3NOYW1lID0gJ2NoZWNrcyc7XG4gICAgICAgIGMuaW5uZXJIVE1MID0gJzxpIGNsYXNzPVwibWF0ZXJpYWwtaWNvbnNcIj5jaGVja19ib3hfb3V0bGluZV9ibGFuazwvaT48aSBjbGFzcz1cIm1hdGVyaWFsLWljb25zIGNoZWNrZWRcIj5jaGVja19ib3g8L2k+JztcbiAgICAgICAgY2hlY2tib3gucGFyZW50RWxlbWVudC5hcHBlbmRDaGlsZChjKTtcblxuICAgICAgICBpZiAobGFiZWwgPSBjaGVja2JveC5nZXRBdHRyaWJ1dGUoJ2xhYmVsJykpIHtcbiAgICAgICAgICAgIHZhciBsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICAgICAgbC5jbGFzc05hbWUgPSAnbGFiZWwnO1xuICAgICAgICAgICAgbC5pbm5lckhUTUwgPSBsYWJlbDtcbiAgICAgICAgICAgIGNoZWNrYm94LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQobCk7XG4gICAgICAgIH1cbiAgICAgICAgc21hc2guY2xhc3MuYWRkKGNoZWNrYm94LnBhcmVudEVsZW1lbnQsICdzbWFzaC1pbml0aWFsaXNlZCcpO1xuICAgICAgICBjaGVja2JveC5jaGVja2VkID0gc21hc2guY2xhc3MuaGFzKGNoZWNrYm94LnBhcmVudEVsZW1lbnQsICdjaGVja2VkJyk7XG5cbiAgICAgICAgY2hlY2tib3gucGFyZW50RWxlbWVudC5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBzbWFzaC5jbGFzcy50b2dnbGUodGhpcywgJ2NoZWNrZWQnKTtcbiAgICAgICAgICAgIHNtYXNoLmdldCh0aGlzLCAnaW5wdXQnKS5jaGVja2VkID0gc21hc2guY2xhc3MuaGFzKHRoaXMsICdjaGVja2VkJyk7XG4gICAgICAgICAgICBpZiAodGhpcy5vbmNoYW5nZSkge1xuICAgICAgICAgICAgICAgIHRoaXMub25jaGFuZ2Uoc21hc2guY2xhc3MuaGFzKHRoaXMsICdjaGVja2VkJykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGNoZWNrYm94LnBhcmVudEVsZW1lbnQuZ2V0TmFtZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvcihcImlucHV0XCIpLmdldEF0dHJpYnV0ZSgnbmFtZScpO1xuICAgICAgICB9O1xuXG4gICAgICAgIGNoZWNrYm94LnBhcmVudEVsZW1lbnQuZ2V0VmFsdWUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBzbWFzaC5jbGFzcy5oYXModGhpcywgJ2NoZWNrZWQnKTtcbiAgICAgICAgfTtcblxuICAgICAgICBjaGVja2JveC5wYXJlbnRFbGVtZW50LnNldFZhbHVlID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIGlmIChzbWFzaC5jbGFzcy5oYXModGhpcywgJ2NoZWNrZWQnKSA9PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMub25jbGljaygpO1xuICAgICAgICB9O1xuICAgIH1cbn07XG4iLCJzbWFzaC5yb3V0ZXIgPSB7XG4gICAgX19wYXJzZVJvdXRlUmVnZXg6IC97KC4qPyl9L2lnLFxuICAgIF9fZHluYW1pY1BhcnRzOiBbXSxcbiAgICBfX2Jhc2VEaXJlY3Rvcnk6IG51bGwsXG4gICAgX19yb3V0ZXM6IHtcbiAgICAgICAgc3RhdGljOiBbXSxcbiAgICAgICAgZHluYW1pYzogW11cbiAgICB9XG59O1xuXG4vKipcbiAqIEFkZCBhIHJvdXRlIGhhbmRsZXIgdG8gdGhlIHJvdXRlclxuICogQHBhcmFtIHN0cmluZyAgIHBhdGhcbiAqIEBwYXJhbSBGdW5jdGlvbiBjYWxsYmFja1xuICovXG5zbWFzaC5yb3V0ZXIuYWRkID0gZnVuY3Rpb24ocGF0aCwgY2FsbGJhY2spIHtcbiAgICB2YXIgcm91dGUgPSBzbWFzaC5yb3V0ZXIucGFyc2VSb3V0ZShwYXRoKTtcbiAgICBpZiAocm91dGUucmVnZXgpIHtcbiAgICAgICAgcm91dGUuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAgICAgaWYgKCFzbWFzaC5yb3V0ZXIuX19yb3V0ZXMuZHluYW1pY1tyb3V0ZS5kZXB0aF0pIHtcbiAgICAgICAgICAgIHNtYXNoLnJvdXRlci5fX3JvdXRlcy5keW5hbWljW3JvdXRlLmRlcHRoXSA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIGlmICghc21hc2gucm91dGVyLl9fcm91dGVzLmR5bmFtaWNbcm91dGUuZGVwdGhdW3JvdXRlLm51bVZhcnNdKSB7XG4gICAgICAgICAgICBzbWFzaC5yb3V0ZXIuX19yb3V0ZXMuZHluYW1pY1tyb3V0ZS5kZXB0aF1bcm91dGUubnVtVmFyc10gPSBbXTtcbiAgICAgICAgfVxuICAgICAgICBzbWFzaC5yb3V0ZXIuX19yb3V0ZXMuZHluYW1pY1tyb3V0ZS5kZXB0aF1bcm91dGUubnVtVmFyc10ucHVzaChyb3V0ZSk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgc21hc2gucm91dGVyLl9fcm91dGVzLnN0YXRpY1twYXRoXSA9IGNhbGxiYWNrO1xufTtcblxuLyoqXG4gKiBTZXQgYW5kIGV4ZWN1dGUgdGhlIGdpdmVuIHBhdGhcbiAqIEBwYXJhbSBzdHJpbmcgcGF0aFxuICovXG5zbWFzaC5yb3V0ZXIuc2V0ID0gZnVuY3Rpb24ocGF0aCkge1xuICAgIHNtYXNoLnJvdXRlci5kaXNwbGF5VVJMKHBhdGgpO1xuICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgncG9wc3RhdGUnKSk7XG59O1xuXG4vKipcbiAqIERpc3BsYXkgdGhlIHVybCBpbiB0aGUgYnJvd3NlclxuICogQHBhcmFtICBzdHJpbmcgcGF0aFxuICogQHJldHVybiB2b2lkXG4gKi9cbnNtYXNoLnJvdXRlci5kaXNwbGF5VVJMID0gZnVuY3Rpb24ocGF0aCkge1xuICAgIHBhdGggPSBzbWFzaC5yb3V0ZXIuYWRkQmFzZURpcmVjdG9yeShwYXRoKTtcbiAgICB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUoXCJcIiwgXCJcIiwgcGF0aCk7XG59O1xuXG4vKipcbiAqIFJlZGlyZWN0IHRvIHRoZSBjb3JyZWN0IHVybFxuICogQHBhcmFtICBzdHJpbmcgcGF0aFxuICogQHJldHVybiB2b2lkXG4gKi9cbnNtYXNoLnJvdXRlci5yZWRpcmVjdCA9IGZ1bmN0aW9uKHBhdGgpIHtcbiAgICBpZiAoIXBhdGguc2VhcmNoKC9eaHR0cFtzXT86XFwvXFwvLykpIHtcbiAgICAgICAgcGF0aCA9IHNtYXNoLnJvdXRlci5hZGRCYXNlRGlyZWN0b3J5KHBhdGgpO1xuICAgIH1cbiAgICB3aW5kb3cubG9jYXRpb24gPSBwYXRoO1xufTtcblxuLyoqXG4gKiBFeGVjdXRlIHdoZW4gYSBwYXRoIGlzIG5vdCBmb3VuZC5cbiAqIEBwYXJhbSAgUm91dGUgcm91dGVcbiAqIEByZXR1cm4gdm9pZFxuICovXG5zbWFzaC5yb3V0ZXIuaGFuZGxlTm90Rm91bmQgPSBmdW5jdGlvbihyb3V0ZSkge1xuICAgIGNvbnNvbGUubG9nKFwicm91dGU6IFwiICsgSlNPTi5zdHJpbmdpZnkocm91dGUpICsgXCIgZG9lcyBub3QgZXhpc3RcIik7XG59O1xuXG4vKipcbiAqIFJ1biB0aGUgcm91dGVyIGFuZCBjaGVjayB0aGUgZ2l2ZW4gcGF0aFxuICogQHJldHVybiB2b2lkXG4gKi9cbnNtYXNoLnJvdXRlci5ydW4gPSBmdW5jdGlvbigpIHtcbiAgICB3aW5kb3cub25wb3BzdGF0ZSA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIHNtYXNoLnJvdXRlci5leGVjdXRlKCk7XG4gICAgfTtcbiAgICBzbWFzaC5yb3V0ZXIuZXhlY3V0ZSgpO1xufVxuXG4vKipcbiAqIEV4ZWN1dGUgdGhlIHJvdXRlciBhbmQgY2hlY2sgZ2l2ZW4gcGF0aFxuICogQHJldHVybiB2b2lkXG4gKi9cbnNtYXNoLnJvdXRlci5leGVjdXRlID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHBhdGggPSB0aGlzLmdldFBhdGgoKTtcbiAgICBpZiAodGhpcy5fX3JvdXRlcy5zdGF0aWNbcGF0aC5wYXRoXSkge1xuICAgICAgICB0aGlzLl9fcm91dGVzLnN0YXRpY1twYXRoLnBhdGhdKCk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGRlcHRoID0gcGF0aC5wYXRoLnNwbGl0KFwiL1wiKS5sZW5ndGgtMTtcbiAgICBpZiAodGhpcy5fX3JvdXRlcy5keW5hbWljW2RlcHRoXSkge1xuICAgICAgICB2YXIgcm91dGU7XG4gICAgICAgIHZhciBtYXRjaGVzO1xuICAgICAgICB2YXIgZGF0YSA9IHt9O1xuICAgICAgICBmb3IgKHZhciB2YXJOdW0gaW4gdGhpcy5fX3JvdXRlcy5keW5hbWljW2RlcHRoXSkge1xuICAgICAgICAgICAgZm9yICh2YXIgaXRlbSBpbiB0aGlzLl9fcm91dGVzLmR5bmFtaWNbZGVwdGhdW3Zhck51bV0pIHtcbiAgICAgICAgICAgICAgICB2YXIgcm91dGUgPSB0aGlzLl9fcm91dGVzLmR5bmFtaWNbZGVwdGhdW3Zhck51bV1baXRlbV07XG4gICAgICAgICAgICAgICAgbWF0Y2hlcyA9IHBhdGgucGF0aC5tYXRjaChyb3V0ZS5yZWdleCk7XG4gICAgICAgICAgICAgICAgaWYgKCFtYXRjaGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpPTA7IGk8cm91dGUubnVtVmFyczsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGFbcm91dGUudmFyc1tpXV0gPSBtYXRjaGVzW2krMV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJvdXRlLmNhbGxiYWNrKGRhdGEpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBzbWFzaC5yb3V0ZXIuaGFuZGxlTm90Rm91bmQocGF0aCk7XG59O1xuXG4vKipcbiAqIEdldCBwYXRoIHdpdGhvdXQgYmFzZSBkaXJlY3RvcnkgaWYgYXZhaWxhYmxlXG4gKiBAcmV0dXJuIFBhdGhcbiAqL1xuc21hc2gucm91dGVyLmdldFBhdGggPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xuICAgIGwuaHJlZiA9IHdpbmRvdy5sb2NhdGlvbjtcbiAgICByZXR1cm4ge2hvc3Q6IGwuaG9zdG5hbWUsIHBhdGg6IHNtYXNoLnJvdXRlci5jaGVja1BhdGgobC5wYXRobmFtZSl9O1xufTtcblxuLyoqXG4gKiBQYXJzZSB0aGUgZ2l2ZW4gcm91dGUgZ2l2ZW4gYnkgYWRkXG4gKiBAcGFyYW0gIHN0cmluZyBwYXRoXG4gKiBAcmV0dXJuIFJvdXRlXG4gKi9cbnNtYXNoLnJvdXRlci5wYXJzZVJvdXRlID0gZnVuY3Rpb24ocGF0aCkge1xuICAgIHBhdGggPSBzbWFzaC5yb3V0ZXIuY2xlYW5QYXRoKHBhdGgpO1xuICAgIHZhciByb3V0ZSA9IHtcbiAgICAgICAgcGF0aDogcGF0aCxcbiAgICAgICAgZGVwdGg6IChwYXRoLnNwbGl0KFwiL1wiKS5sZW5ndGggLSAxKSxcbiAgICAgICAgdmFyczogW10sXG4gICAgICAgIG51bVZhcnM6IDBcbiAgICB9O1xuICAgIHNtYXNoLnJvdXRlci5fX2R5bmFtaWNQYXJ0cyA9IHBhdGgubWF0Y2goc21hc2gucm91dGVyLl9fcGFyc2VSb3V0ZVJlZ2V4KTtcbiAgICBpZiAoc21hc2gucm91dGVyLl9fZHluYW1pY1BhcnRzICE9IHVuZGVmaW5lZCAmJiBzbWFzaC5yb3V0ZXIuX19keW5hbWljUGFydHMgIT0gbnVsbCkge1xuICAgICAgICB2YXIgcmVnZXggPSBcIl5cIiArIHBhdGgucmVwbGFjZSgvXFwvL2lnLCBcIlxcXFwvXCIpICsgXCIkXCI7XG4gICAgICAgIGZvciAodmFyIGk9MDsgaTxzbWFzaC5yb3V0ZXIuX19keW5hbWljUGFydHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHJvdXRlLm51bVZhcnMrKztcbiAgICAgICAgICAgIHJvdXRlLnZhcnMucHVzaChzbWFzaC5yb3V0ZXIuX19keW5hbWljUGFydHNbaV0uc3Vic3RyaW5nKDEsIHNtYXNoLnJvdXRlci5fX2R5bmFtaWNQYXJ0c1tpXS5sZW5ndGgtMSkpO1xuICAgICAgICAgICAgcmVnZXggPSByZWdleC5yZXBsYWNlKHNtYXNoLnJvdXRlci5fX2R5bmFtaWNQYXJ0c1tpXSwgXCIoLio/KVwiKTtcbiAgICAgICAgfVxuICAgICAgICByb3V0ZS5yZWdleCA9IG5ldyBSZWdFeHAocmVnZXgsICdpJyk7XG4gICAgfVxuICAgIHJldHVybiByb3V0ZTtcbn07XG5cbi8qKlxuICogU2V0IHRoZSBiYXNlIGRpcmVjdG9yeSB0byBiZSB1c2VkIGJ5IGFsbCByb3V0ZXNcbiAqIEBwYXJhbSBzdHJpbmcgZGlyZWN0b3J5XG4gKi9cbnNtYXNoLnJvdXRlci5zZXRCYXNlRGlyZWN0b3J5ID0gZnVuY3Rpb24oZGlyZWN0b3J5KSB7XG4gICAgaWYgKCFkaXJlY3RvcnkpIHtcbiAgICAgICAgc21hc2gucm91dGVyLl9fYmFzZURpcmVjdG9yeSA9IHVuZGVmaW5lZDtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzbWFzaC5yb3V0ZXIuX19iYXNlRGlyZWN0b3J5ID0gc21hc2gucm91dGVyLmNsZWFuUGF0aChkaXJlY3RvcnkpO1xufTtcblxuLyoqXG4gKiBBZGQgdGhlIGJhc2UgZGlyZWN0b3J5IGlmIGl0IGlzIGF2YWlsYWJsZVxuICogQHBhcmFtIHN0cmluZyBwYXRoXG4gKiBAcmV0dXJuIHN0cmluZ1xuICovXG5zbWFzaC5yb3V0ZXIuYWRkQmFzZURpcmVjdG9yeSA9IGZ1bmN0aW9uKHBhdGgpIHtcbiAgICBpZiAoIXNtYXNoLnJvdXRlci5fX2Jhc2VEaXJlY3RvcnkpIHtcbiAgICAgICAgcmV0dXJuIHBhdGg7XG4gICAgfVxuICAgIGlmIChwYXRoLmluZGV4T2Yoc21hc2gucm91dGVyLl9fYmFzZURpcmVjdG9yeSkgPT09IC0xKSB7XG4gICAgICAgIHBhdGggPSBzbWFzaC5yb3V0ZXIuX19iYXNlRGlyZWN0b3J5ICsgcGF0aDtcbiAgICB9XG4gICAgcmV0dXJuIHBhdGg7XG59O1xuXG4vKipcbiAqIENsZWFuIHRoZSBnaXZlbiBwYXRoIHRvIHRoZSBwcm9wZXIgcGF0aCB0byBiZSB1c2VkIGJ5IHRoZSByb3V0ZXJcbiAqIEBwYXJhbSAgc3RyaW5nIHBhdGhcbiAqIEByZXR1cm4gc3RyaW5nXG4gKi9cbnNtYXNoLnJvdXRlci5jbGVhblBhdGggPSBmdW5jdGlvbihwYXRoKSB7XG4gICAgaWYgKHBhdGgubGVuZ3RoID4gMCAmJiBwYXRoLnN1YnN0cmluZygwLCAxKSAhPSBcIi9cIikge1xuICAgICAgICBwYXRoID0gXCIvXCIgKyBwYXRoO1xuICAgIH1cbiAgICBpZiAocGF0aC5sZW5ndGggPiAyICYmIHBhdGguc3Vic3RyaW5nKHBhdGgubGVuZ3RoLTIpID09IFwiL1wiKSB7XG4gICAgICAgIHBhdGggPSBwYXRoLnN1YnN0cmluZygwLCBwYXRoLmxlbmd0aC0yKTtcbiAgICB9XG4gICAgcmV0dXJuIHBhdGg7XG59O1xuXG4vKipcbiAqIENoZWNrIHRoZSBwYXRoIGlmIHRoZXJlIGlzIGEgYmFzZSBkaXJlY3RvcnkgYXZhaWxhYmxlXG4gKiBAcGFyYW0gIHN0cmluZyBwYXRoIFRoZSBwYXRoIHRvIGNoZWNrXG4gKiBAcmV0dXJuIHN0cmluZyAgICAgIFRoZSBwYXRoIHdpdGhvdXQgYSBiYXNlIGRpcmVjdG9yeSBmb3IgdXNlIG9mIGNoZWNraW5nIHJvdXRlc1xuICovXG5zbWFzaC5yb3V0ZXIuY2hlY2tQYXRoID0gZnVuY3Rpb24ocGF0aCkge1xuICAgIHBhdGggPSBzbWFzaC5yb3V0ZXIuY2xlYW5QYXRoKHBhdGgpO1xuICAgIGlmIChzbWFzaC5yb3V0ZXIuX19iYXNlRGlyZWN0b3J5ICYmIHBhdGguaW5kZXhPZihzbWFzaC5yb3V0ZXIuX19iYXNlRGlyZWN0b3J5KSAhPT0gLTEpIHtcbiAgICAgICAgcGF0aCA9IHBhdGgucmVwbGFjZShzbWFzaC5yb3V0ZXIuX19iYXNlRGlyZWN0b3J5LCAnJyk7XG4gICAgfVxuICAgIHJldHVybiBwYXRoO1xufTtcblxuLyoqXG4gKiBHZXQgdGhlIHF1ZXJ5IHBhcmFtIGluIHRoZSB1cmxcbiAqIEBwYXJhbSAgc3RyaW5nIHBhcmFtIFRoZSBwYXJhbSB5b3Ugd2FudCB0byBoYXZlXG4gKiBAcmV0dXJuIHN0cmluZyAgICAgICBUaGUgdmFsdWUgb2YgdGhlIHBhcmFtIG9yIHVuZGVmaW5lZCBpZiBpdCBpcyBub3QgYXZhaWxhYmxlXG4gKi9cbnNtYXNoLnJvdXRlci5xdWVyeVBhcmFtID0gZnVuY3Rpb24ocGFyYW0pIHtcbiAgICB2YXIgcmVnZXhTID0gXCJbXFxcXD8mXVwiK3BhcmFtK1wiPShbXiYjXSopXCIsXG4gICAgcmVnZXggPSBuZXcgUmVnRXhwKCByZWdleFMgKSxcbiAgICByZXN1bHRzID0gcmVnZXguZXhlYyggd2luZG93LmxvY2F0aW9uLnNlYXJjaCApO1xuICAgIGlmKCByZXN1bHRzID09IG51bGwgKXtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdHNbMV07Ly9kZWNvZGVVUklDb21wb25lbnQocmVzdWx0c1sxXS5yZXBsYWNlKC9cXCsvZywgXCIgXCIpKTtcbn07XG4iLCJzbWFzaC5zZWFyY2hib3ggPSB7XG4gICAgaV86IGZhbHNlLFxuICAgIG1pbkF1dG9Db21wbGV0ZUxlbmd0aDogMyxcbiAgICBvbmZvY3VzOiB1bmRlZmluZWQsXG4gICAgb25ibHVyOiB1bmRlZmluZWQsXG4gICAgb25jaGFuZ2U6IHVuZGVmaW5lZCxcbn07XG5cbnNtYXNoLnNlYXJjaGJveC5pbml0ID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKHNtYXNoLnNlYXJjaGJveC5pXykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBzc2IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNtYXNoLXNlYXJjaGJveCBpbnB1dFwiKTtcbiAgICBpZiAoIXNzYikge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHNzYi5vbmZvY3VzID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh0aGlzLnZhbHVlLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgICBzbWFzaC5zZWFyY2hib3gucmVzdWx0cygnPGRpdiBjbGFzcz1cInNtYXNoLWluc3RydWN0aW9uXCI+U3RhcnQgdHlwaW5nIHRvIGZpbmQgcmVzdWx0czwvZGl2PicpO1xuICAgICAgICB9XG4gICAgICAgIHNtYXNoLmNsYXNzLmFkZChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNtYXNoLWhlYWRlclwiKSwgJ2lzLWZvY3Vzc2VkJyk7XG4gICAgICAgIHNtYXNoLmNsYXNzLmFkZChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNtYXNoLXNlYXJjaGJveCAuc21hc2gtc2VhcmNoYm94LXJlc3VsdHNcIiksICdzaG93Jyk7XG4gICAgICAgIGlmIChzbWFzaC5zZWFyY2hib3gub25mb2N1cykge1xuICAgICAgICAgICAgc21hc2guc2VhcmNoYm94Lm9uZm9jdXMoKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgc3NiLm9uYmx1ciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBzbWFzaC5jbGFzcy5yZW1vdmUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zbWFzaC1oZWFkZXJcIiksICdpcy1mb2N1c3NlZCcpO1xuICAgICAgICBzbWFzaC5jbGFzcy5yZW1vdmUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zbWFzaC1zZWFyY2hib3ggLnNtYXNoLXNlYXJjaGJveC1yZXN1bHRzXCIpLCAnc2hvdycpO1xuICAgICAgICBpZiAoc21hc2guc2VhcmNoYm94Lm9uYmx1cikge1xuICAgICAgICAgICAgc21hc2guc2VhcmNoYm94Lm9uYmx1cigpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBzc2Iub25rZXl1cCA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgc3dpdGNoIChlLmtleUNvZGUpIHtcbiAgICAgICAgY2FzZSAyNzpcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSAnJztcbiAgICAgICAgICAgIHRoaXMuYmx1cigpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnZhbHVlLmxlbmd0aCA8IHNtYXNoLnNlYXJjaGJveC5taW5BdXRvQ29tcGxldGVMZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc21hc2guc2VhcmNoYm94Lm9uY2hhbmdlKSB7XG4gICAgICAgICAgICBzbWFzaC5zZWFyY2hib3gub25jaGFuZ2UodGhpcy52YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHNtYXNoLnNlYXJjaGJveC5pXyA9IHRydWU7XG59O1xuXG5zbWFzaC5zZWFyY2hib3guZW1wdHkgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAoaSA9IHNtYXNoLmdldChkb2N1bWVudCwgXCIuc21hc2gtc2VhcmNoYm94IGlucHV0XCIpKSB7XG4gICAgICAgIHJldHVybiAoaS52YWx1ZS5sZW5ndGggPT0gMCk7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuXG5zbWFzaC5zZWFyY2hib3guYXBwZW5kVG8gPSBmdW5jdGlvbihjb250ZW50KSB7XG4gICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIG5vZGUuaW5uZXJIVE1MID0gY29udGVudDtcbiAgICB2YXIgcmVzdWx0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc21hc2gtc2VhcmNoYm94IC5zbWFzaC1zZWFyY2hib3gtcmVzdWx0c1wiKTtcbiAgICByZXN1bHRzLmFwcGVuZENoaWxkKG5vZGUpO1xufTtcblxuc21hc2guc2VhcmNoYm94LnJlc3VsdHMgPSBmdW5jdGlvbihjb250ZW50KSB7XG4gICAgdmFyIHJlc3VsdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNtYXNoLXNlYXJjaGJveCAuc21hc2gtc2VhcmNoYm94LXJlc3VsdHNcIik7XG4gICAgcmVzdWx0cy5pbm5lckhUTUwgPSBjb250ZW50O1xufTtcbiIsInNtYXNoLnNpZGViYXIgPSB7XG4gICAgaV86IGZhbHNlXG59O1xuXG5zbWFzaC5zaWRlYmFyLmluaXQgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAoc21hc2guc2lkZWJhci5pXykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBzaWJsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zbWFzaC1zaWRlYmFyIC5sb2NrXCIpO1xuICAgIGlmICghc2libCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHNpYmwub25jbGljayA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBzbWFzaC5zaWRlYmFyLnRvZ2dsZUxvY2soKTtcbiAgICB9O1xuXG4gICAgdmFyIHNpYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc21hc2gtc2lkZWJhclwiKTtcbiAgICBzbWFzaC5jbGFzcy5hZGQoc2liLCAnaXMtdW5sb2NrZWQnKTtcbiAgICBzbWFzaC5zaWRlYmFyLmlfID0gdHJ1ZTtcbiAgICBpZiAoc21hc2guY29uZmlnLmdldCgnc2lkZWJhcl9sb2NrJykpIHtcbiAgICAgICAgc21hc2guc2lkZWJhci50b2dnbGVMb2NrKCk7XG4gICAgfVxufTtcblxuc21hc2guc2lkZWJhci50b2dnbGVMb2NrID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKCFzbWFzaC5zaWRlYmFyLmlfKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgc21hc2guY2xhc3MudG9nZ2xlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc21hc2gtc2lkZWJhciAubG9ja1wiKSwgJ3VubG9jaycpO1xuICAgIHNtYXNoLmNsYXNzLnRvZ2dsZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNtYXNoLXNpZGViYXJcIiksICdpcy11bmxvY2tlZCcpO1xuICAgIHNtYXNoLmNvbmZpZy5zZXQoJ3NpZGViYXJfbG9jaycsICFzbWFzaC5jbGFzcy5oYXMoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zbWFzaC1zaWRlYmFyXCIpLCAnaXMtdW5sb2NrZWQnKSk7XG59O1xuIiwic21hc2guc3RvcmFnZSA9IHt9O1xuXG5zbWFzaC5zdG9yYWdlLnNldCA9IGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIEpTT04uc3RyaW5naWZ5KHZhbHVlKSk7XG59O1xuXG5zbWFzaC5zdG9yYWdlLnVuc2V0ID0gZnVuY3Rpb24oa2V5KSB7XG4gICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oa2V5KTtcbn07XG5cbnNtYXNoLnN0b3JhZ2UuZ2V0ID0gZnVuY3Rpb24oa2V5KSB7XG4gICAgdmFyIGkgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xuICAgIGlmICghaSkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4gSlNPTi5wYXJzZShpKTtcbn07XG5cbnNtYXNoLnN0b3JhZ2UuY2xlYXIgPSBmdW5jdGlvbigpIHtcbiAgICBsb2NhbFN0b3JhZ2UuY2xlYXIoKTtcbn07XG4iLCJzbWFzaC53b3Jrc3BhY2UgPSB7XG4gICAgYmFzZVRpdGxlOiB1bmRlZmluZWQsXG4gICAgX3dzXzogdW5kZWZpbmVkLFxuICAgIF9oZHJfOiB1bmRlZmluZWQsXG4gICAgX3NiXzogdW5kZWZpbmVkLFxuICAgIF90YWJzXzogW11cbn07XG5cbnNtYXNoLndvcmtzcGFjZS5pbml0ID0gZnVuY3Rpb24oKSB7XG4gICAgc21hc2gud29ya3NwYWNlLl93c18gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNtYXNoLXdvcmtzcGFjZVwiKTtcbiAgICBpZiAoIXNtYXNoLndvcmtzcGFjZS5fd3NfKSB7XG4gICAgICAgIHJldHVyblxuICAgIH1cbiAgICBzbWFzaC53b3Jrc3BhY2UuX2hkcl8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNtYXNoLWhlYWRlclwiKTtcbiAgICBpZiAoc21hc2gud29ya3NwYWNlLl9oZHJfKSB7XG4gICAgICAgIHNtYXNoLmNsYXNzLmFkZChzbWFzaC53b3Jrc3BhY2UuX3dzXywgJ2hhcy1oZWFkZXInKTtcbiAgICB9XG4gICAgc21hc2gud29ya3NwYWNlLl9zYl8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNtYXNoLXdvcmtzcGFjZSAuc21hc2gtc2lkZWJhclwiKTtcbiAgICBpZiAoc21hc2gud29ya3NwYWNlLl9zYl8pIHtcbiAgICAgICAgc21hc2guY2xhc3MuYWRkKHNtYXNoLndvcmtzcGFjZS5fd3NfLCAnaGFzLXNpZGViYXInKTtcbiAgICB9XG59O1xuXG5zbWFzaC53b3Jrc3BhY2UuYWRkVGFiID0gZnVuY3Rpb24oaWQsIHRpdGxlLCBjb250ZW50LCB1cmwpIHtcbiAgICBpZiAoIXNtYXNoLmdldChkb2N1bWVudCwgJy5zbWFzaC10YWItcGFuZScpKSB7XG4gICAgICAgIHZhciBwYW5lbCA9IHNtYXNoLmdldChkb2N1bWVudCwgJy5zbWFzaC1wYW5lbCcpO1xuICAgICAgICBpZiAoIXBhbmVsKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnVG8gYWRkIGEgdGFiIHRoZXJlIG5lZWRzIHRvIGJlIGEgcGFuZWwnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBwYW5lbC5pbm5lckhUTUwgPSAnPGRpdiBjbGFzcz1cInNtYXNoLXRhYi1wYW5lXCI+PGRpdiBjbGFzcz1cInNtYXNoLXRhYnNcIj48L2Rpdj48ZGl2IGNsYXNzPVwic21hc2gtcGFuZXNcIj48L2Rpdj48L2Rpdj4nO1xuICAgIH1cbiAgICB2YXIgdGFicyA9IHNtYXNoLmdldChkb2N1bWVudCwgJy5zbWFzaC10YWItcGFuZSAuc21hc2gtdGFicycpO1xuICAgIHZhciBwYW5lc0NvbnRhaW5lciA9IHNtYXNoLmdldChkb2N1bWVudCwgJy5zbWFzaC10YWItcGFuZSAuc21hc2gtcGFuZXMnKTtcblxuICAgIGRvY3VtZW50LnRpdGxlID0gc21hc2gud29ya3NwYWNlLmNyZWF0ZVRpdGxlKHRpdGxlKTtcblxuICAgIGlmICh0YWIgPSBzbWFzaC5nZXQodGFicywgJy5zbWFzaC10YWJbZGF0YS1pZD1cIicgKyBpZCArICdcIl0nKSkge1xuICAgICAgICB2YXIgcGFuZSA9IHNtYXNoLmdldChwYW5lc0NvbnRhaW5lciwgJy5zbWFzaC1wYW5lW2RhdGEtaWQ9XCInICsgaWQgKyAnXCJdJyk7XG4gICAgICAgIHBhbmUuaW5uZXJIVE1MID0gY29udGVudDtcbiAgICAgICAgdGFiLmRhdGFzZXQudXJsID0gdXJsO1xuICAgICAgICB0YWIub25jbGljaygpO1xuICAgICAgICByZXR1cm4ge3RhYjogdGFiLCBwYW5lOiBwYW5lfTtcbiAgICB9XG5cbiAgICBzbWFzaC5oaWRlKHBhbmVzQ29udGFpbmVyLCBcIi5zbWFzaC1wYW5lXCIpO1xuICAgIGlmIChhY3RpdmUgPSBzbWFzaC5nZXQodGFicywgJy5zbWFzaC10YWIuYWN0aXZlJykpIHtcbiAgICAgICAgc21hc2guY2xhc3MucmVtb3ZlKGFjdGl2ZSwgJ2FjdGl2ZScpO1xuICAgIH1cblxuICAgIC8vIENyZWF0ZSBhIG5ldyB0YWJcbiAgICB2YXIgdGFiID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICB0YWIuY2xhc3NOYW1lID0gJ3NtYXNoLXRhYiBhY3RpdmUnO1xuICAgIHRhYi5kYXRhc2V0LmlkID0gaWQ7XG4gICAgdGFiLmRhdGFzZXQudXJsID0gdXJsO1xuICAgIHRhYi5pbm5lckhUTUwgPSB0aXRsZSArICc8aSBjbGFzcz1cIm1hdGVyaWFsLWljb25zIGNsb3NlXCI+Y2xvc2U8L2k+JztcbiAgICB0YWIub25jbGljayA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgaWYgKGFjdGl2ZSA9IHNtYXNoLmdldCh0YWJzLCAnLnNtYXNoLXRhYi5hY3RpdmUnKSkge1xuICAgICAgICAgICAgc21hc2guY2xhc3MucmVtb3ZlKGFjdGl2ZSwgJ2FjdGl2ZScpO1xuICAgICAgICB9XG4gICAgICAgIHNtYXNoLmNsYXNzLmFkZCh0aGlzLCAnYWN0aXZlJyk7XG4gICAgICAgIHNtYXNoLmhpZGUoZG9jdW1lbnQsICcuc21hc2gtcGFuZScpO1xuICAgICAgICBzbWFzaC5zaG93KGRvY3VtZW50LCAnLnNtYXNoLXBhbmVbZGF0YS1pZD1cIicgKyB0aGlzLmRhdGFzZXQuaWQgKyAnXCJdJyk7XG4gICAgICAgIGlmICh0aGlzLmRhdGFzZXQudXJsICYmIHRoaXMuZGF0YXNldC51cmwgIT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgc21hc2gucm91dGVyLmRpc3BsYXlVUkwodGhpcy5kYXRhc2V0LnVybCk7XG4gICAgICAgIH1cbiAgICAgICAgZG9jdW1lbnQudGl0bGUgPSBzbWFzaC53b3Jrc3BhY2UuY3JlYXRlVGl0bGUodGhpcy5pbm5lckhUTUwpO1xuICAgIH07XG4gICAgc21hc2gub24odGFiLCAnLmNsb3NlJywgJ29uY2xpY2snLCBmdW5jdGlvbihlKSB7XG4gICAgICAgIGlmICh0aGlzLnBhcmVudEVsZW1lbnQub25jbG9zZSAmJiAhdGhpcy5wYXJlbnRFbGVtZW50Lm9uY2xvc2UoKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzbWFzaC5jbGFzcy5oYXModGhpcy5wYXJlbnRFbGVtZW50LCAnYWN0aXZlJykpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnBhcmVudEVsZW1lbnQucHJldmlvdXNTaWJsaW5nKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJlbnRFbGVtZW50LnByZXZpb3VzU2libGluZy5vbmNsaWNrKCk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucGFyZW50RWxlbWVudC5uZXh0U2libGluZykge1xuICAgICAgICAgICAgICAgIHRoaXMucGFyZW50RWxlbWVudC5uZXh0U2libGluZy5vbmNsaWNrKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHBhbmUgPSBzbWFzaC5nZXQoZG9jdW1lbnQsICcuc21hc2gtcGFuZVtkYXRhLWlkPVwiJyArIHRoaXMucGFyZW50RWxlbWVudC5kYXRhc2V0LmlkICsgJ1wiXScpKSB7XG4gICAgICAgICAgICBwYW5lLnBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQocGFuZSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQodGhpcy5wYXJlbnRFbGVtZW50KTtcbiAgICAgICAgaWYgKHRoaXMucGFyZW50RWxlbWVudC5vbmNsb3NlZCkge1xuICAgICAgICAgICAgdGhpcy5wYXJlbnRFbGVtZW50Lm9uY2xvc2VkKCk7XG4gICAgICAgIH1cbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9KTtcbiAgICB0YWJzLmFwcGVuZENoaWxkKHRhYik7XG5cbiAgICAvLyBDcmVhdGUgYSBuZXcgcGFuZSB3aXRoIHRoZSBwcm92aWRlZCBjb250ZW50XG4gICAgdmFyIHBhbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHBhbmUuY2xhc3NOYW1lID0gJ3NtYXNoLXBhbmUnO1xuICAgIHBhbmUuZGF0YXNldC5pZCA9IGlkO1xuICAgIHBhbmUuaW5uZXJIVE1MID0gY29udGVudDtcbiAgICBwYW5lc0NvbnRhaW5lci5hcHBlbmRDaGlsZChwYW5lKTtcbiAgICByZXR1cm4ge3RhYjogdGFiLCBwYW5lOiBwYW5lfTtcbn07XG5cbnNtYXNoLndvcmtzcGFjZS5hY3RpdmVUYWIgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdGFiID0gc21hc2guZ2V0KGRvY3VtZW50LCAnLnNtYXNoLXRhYi5hY3RpdmUnKVxuICAgIGlmICghdGFiKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICB2YXIgcGFuZSA9IHNtYXNoLmdldChkb2N1bWVudCwgJy5zbWFzaC1wYW5lW2RhdGEtaWQ9XCInICsgdGFiLmRhdGFzZXQuaWQgKyAnXCJdJyk7XG4gICAgaWYgKCFwYW5lKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge3RhYjogdGFiLCBwYW5lOiBwYW5lfTtcbn07XG5cbnNtYXNoLndvcmtzcGFjZS5jcmVhdGVUaXRsZSA9IGZ1bmN0aW9uKHRpdGxlKSB7XG4gICAgdmFyIHQgPSB0aXRsZS5yZXBsYWNlKC88KFtePl0rPykoW14+XSo/KT4oLio/KTxcXC9cXDE+L2lnLCBcIlwiKTtcbiAgICBpZiAodCA9PSAnJykge1xuICAgICAgICB2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgZGl2LmlubmVySFRNTCA9IHRpdGxlO1xuICAgICAgICBpZiAodHMgPSBzbWFzaC5nZXQoZGl2LCAnLnRpdGxlJykpIHtcbiAgICAgICAgICAgIHQgPSB0cy5pbm5lckhUTUw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHQgPT0gJycpIHtcbiAgICAgICAgICAgIHQgPSAndW5rbm93bic7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHQgKyAoc21hc2gud29ya3NwYWNlLmJhc2VUaXRsZSA/ICcgfCAnICsgc21hc2gud29ya3NwYWNlLmJhc2VUaXRsZSA6IFwiXCIpO1xufTtcbiJdfQ==
