window.addEventListener("load",function(e){smash.init()},!1);var smash={};smash.init=function(){smash.config.init(),smash.sidebar.init(),smash.searchbox.init(),smash.workspace.init(),smash.input.init()},smash.get=function(e,s){try{return e.querySelector(s)}catch(e){console.log(e)}},smash.getAll=function(e,s){try{return e.querySelectorAll(s)}catch(e){console.log(e)}},smash.hide=function(e,s){var a;a=s&&"string"==typeof s?smash.getAll(e,s):[e];for(var t=0;t<a.length;t++)a[t].style.display="none"},smash.nextVisible=function(e){for(;e=e.nextSibling;)if("none"!=e.style.display)return e},smash.firstVisible=function(e){if(e=e.parentElement.firstChild,"none"!=e.style.display)return e;for(;e=e.nextSibling;)if("none"!=e.style.display)return e},smash.previousVisible=function(e){for(;e=e.previousSibling;)if("none"!=e.style.display)return e},smash.lastVisible=function(e){if(e=e.parentElement.lastChild,"none"!=e.style.display)return e;for(;e=e.previousSibling;)if("none"!=e.style.display)return e},smash.show=function(e,s){var a;a=s&&"string"==typeof s?smash.getAll(e,s):[e];for(var t=0;t<a.length;t++)a[t].style.display=""},smash.remove=function(e){e.parentNode.removeChild(e)},smash.on=function(e,s,a,t){for(var n=smash.getAll(e,s),r=0;r<n.length;r++)n[r][a]=t},smash.fuzzyCompare=function(e,s){if(void 0==s||void 0==e)return!1;var a=".*?"+e.toLowerCase().replace(/-/g,"\\-").split("").join(".*?")+".*?";return s.toLowerCase().match(a)},smash.ajax={_headers_:[]},smash.ajax.addHeader=function(e,s){smash.ajax._headers_[e]=s},smash.ajax.removeHeader=function(e){delete smash.ajax._headers_[e]},smash.ajax.onerror=function(e){console.log(e)},smash.ajax.onunauthorized=function(e){smash.ajax.onerror(e)},smash.ajax._xhr_=function(){if("undefined"!=typeof XMLHttpRequest)return new XMLHttpRequest;for(var e,s=["MSXML2.XmlHttp.6.0","MSXML2.XmlHttp.5.0","MSXML2.XmlHttp.4.0","MSXML2.XmlHttp.3.0","MSXML2.XmlHttp.2.0","Microsoft.XmlHttp"],a=0;a<s.length;a++)try{e=new ActiveXObject(s[a]);break}catch(e){}return e},smash.ajax.send=function(e,s,a,t,n,r,o){void 0===o&&(o=!0),void 0===r&&(r=smash.ajax.onerror);var i=smash.ajax._xhr_();i.responseType=n,i.onreadystatechange=function(){if(4==i.readyState)switch(i.status){case 200:case 201:s&&s(i.response);break;case 401:smash.ajax.onunauthorized(i.response);break;default:r(i.response)}},i.open(a,e,o),"json"==n?i.setRequestHeader("Content-type","application/json"):"POST"==a&&i.setRequestHeader("Content-type","application/x-www-form-urlencoded");for(var l in smash.ajax._headers_)i.setRequestHeader(l,smash.ajax._headers_[l]);i.send(t)},smash.ajax.get=function(e,s,a,t,n,r){var o=[];for(var i in a)o.push(encodeURIComponent(i)+"="+encodeURIComponent(a[i]));smash.ajax.send(e+(o.length?"?"+o.join("&"):""),s,"GET",null,t,n,r)},smash.ajax.post=function(e,s,a,t,n,r){var o;if(a)if("json"!=t){var i=[];for(var l in a)i.push(encodeURIComponent(l)+"="+encodeURIComponent(a[l]));o=i.join("&")}else o=JSON.stringify(a);smash.ajax.send(e,s,"POST",o,t,n,r)},smash.class={},smash.class.add=function(e,s){smash.class.has(e,s)||(e.classList?e.classList.add(s):e.className+=" "+s)},smash.class.remove=function(e,s){smash.class.has(e,s)&&(e.classList?e.classList.remove(s):e.className=e.className.replace(s,""))},smash.class.has=function(e,s){return(" "+e.className+" ").replace(/[\n\t]/g," ").indexOf(" "+s+" ")>-1},smash.class.toggle=function(e,s){smash.class.has(e,s)?smash.class.remove(e,s):smash.class.add(e,s)},smash.config={_values_:{_sidebar_lock_:!1}},smash.config.init=function(){var e=smash.storage.get("config");e&&(smash.config._values_=e)},smash.config.get=function(e){var s="_"+e+"_";if(s in smash.config._values_)return smash.config._values_[s];throw new smash.Exception("001",'Invalid config option "'+e+'"')},smash.config.set=function(e,s){var a="_"+e+"_";if(!a in smash.config._values_)throw new smash.Exception("001",'Invalid config option "'+e+'"');smash.config._values_[a]=s,smash.storage.set("config",smash.config._values_)},smash.contextmenu={},smash.contextmenu.new=function(e,s){(a=smash.get(document,"#smash-context-menu"))&&smash.remove(a);var a=document.createElement("div");a.id="smash-context-menu";var t="<ul class='clickable'>";for(i=0;i<s.length;i++)t+="seperator"!=s[i]?'<li class="ctx_item_'+i+'">'+s[i].label+"</li>":'<li class="seperator"></li>';t+="</ul>",a.innerHTML=t,document.body.appendChild(a);var n;for(i=0;i<s.length;i++)"seperator"!=s[i]&&(n=smash.get(a,"li.ctx_item_"+i),n.callback=s[i].callback,n.onmousedown=function(e){this.callback(e),smash.contextmenu.close(e)});var r=e.pageY;return r+a.offsetHeight>window.innerHeight&&(r=window.innerHeight-a.offsetHeight-20),a.style.top=r,a.style.left=e.pageX,e.preventDefault(),document.onclick=smash.contextmenu.close,!1},smash.contextmenu.close=function(e){e.preventDefault(),(ctx=smash.get(document,"#smash-context-menu"))&&smash.remove(ctx),document.onclick=void 0},smash.cookie={},smash.cookie.set=function(e,s,a){var t=new Date;t.setTime(t.getTime()+24*a*60*60*1e3);var n="expires="+t.toUTCString();document.cookie=e+"="+s+";"+n+";path=/"},smash.cookie.get=function(e){for(var e=e+"=",s=decodeURIComponent(document.cookie),a=s.split(";"),t=0;t<a.length;t++){for(var n=a[t];" "==n.charAt(0);)n=n.substring(1);if(0==n.indexOf(e))return n.substring(e.length,n.length)}return""},smash.dialog={},smash.dialog.new=function(e){var s=smash.dialog.checkBackdrop(),a=document.createElement("div");a.className="smash-dialog",a.innerHTML=e,s.appendChild(a)},smash.dialog.checkBackdrop=function(){if(e=smash.get(document,".smash-dialog-backdrop"))return(dialog=smash.get(document,".smash-dialog-backdrop .smash-dialog"))&&e.removeChild(dialog),e;var e=document.createElement("div");return e.className="smash-dialog-backdrop",e.innerHTML='<div class="smash-dialog-background"></div>',smash.get(e,".smash-dialog-background").onclick=smash.dialog.close,smash.get(document,"body").appendChild(e),e},smash.dialog.close=function(){(dialog=smash.get(document,".smash-dialog-backdrop"))&&smash.get(document,"body").removeChild(dialog)},smash.Exception=function(e,s){this.value=e,this.message=s,this.toString=function(){return"SmashException "+this.value+": "+this.message}},smash.input={},smash.input.init=function(){for(var e,s=document.querySelectorAll(".smash-input input, .smash-textarea textarea"),a=0;a<s.length;a++)if(e=s[a],!smash.class.has(e.parentElement,"smash-initialised")){if(e.parentElement.getName=function(){return this.querySelector("input").getAttribute("name")},e.parentElement.setValue=function(s){(e=this.querySelector("input"))?(e.value=s,e.onkeyup()):(e=this.querySelector("textarea"))&&(e.value=s,e.onkeyup())},e.parentElement.getValue=function(){if(e=this.querySelector("input")){var e=this.querySelector("input");return e.value}if(e=this.querySelector("textarea")){var e=this.querySelector("textarea");return e.value}return null},smash.class.has(e.parentElement,"has-floating-label")){smash.class.remove(e.parentElement,"has-floating-label"),smash.class.add(e.parentElement,"floating-label");var t=document.createElement("label");t.innerHTML=e.placeholder,e.parentElement.appendChild(t),e.onkeyup=function(e){var s=this.parentElement.querySelector("label");s&&(""!=this.value?smash.class.add(s,"show"):smash.class.remove(s,"show"))}}e.parentElement.getAttribute("value")&&e.parentElement.setValue(e.parentElement.getAttribute("value")),smash.class.add(e.parentElement,"smash-initialised")}for(var n,r=document.querySelectorAll(".smash-select select"),a=0;a<r.length;a++)if(n=r[a],!smash.class.has(n.parentElement,"smash-initialised")){if(smash.class.has(n.parentElement,"has-floating-label")){smash.class.remove(n.parentElement,"has-floating-label"),smash.class.add(n.parentElement,"floating-label");var t=document.createElement("label");t.innerHTML=n.getAttribute("placeholder"),n.parentElement.appendChild(t)}n.parentElement.getName=function(){return this.querySelector("select").getAttribute("name")},n.parentElement.setValue=function(e){smash.class.remove(this,"is-focussed");var s=this.querySelector("select"),a=this.querySelector("input"),t=s.value;s.value=e,s.selectedIndex>-1?a.value=s.options[s.selectedIndex].text:a.value="",a.focus(),a.blur(),t!=e&&(s.onchange&&s.onchange(),this.onchange&&this.onchange())},n.parentElement.getValue=function(){var e=this.querySelector("select");return e.selectedIndex==-1?null:e.options[e.selectedIndex].value},n.parentElement.reset=function(){smash.get(this,"input").value=this.getText()},n.parentElement.getText=function(){var e=this.querySelector("select");return e.selectedIndex==-1?null:e.options[e.selectedIndex].innerHTML};var e=document.createElement("input");e.type="text",e.placeholder=n.getAttribute("placeholder"),e.setAttribute("readonly","readonly"),n.parentElement.appendChild(e);var o=n.querySelectorAll("option"),i=document.createElement("ul");i.onmouseup=function(e){e.stopPropagation()};for(var l=0;l<o.length;l++){var c=o[l];if(c.getAttribute("value")){var h=document.createElement("li");h.setAttribute("value",c.value),h.innerHTML=c.innerHTML,i.appendChild(h),h.onmousedown=function(e){this.parentElement.parentElement.setValue(this.getAttribute("value")),e.stopPropagation(),window.onmouseup&&window.onmouseup()}}}n.parentElement.appendChild(i),e.onfocus=function(e){if(!smash.class.has(this.parentElement,"is-focussed")){var s=this.parentElement.querySelector("label");s&&(""!=this.value?smash.class.add(s,"show"):smash.class.remove(s,"show")),this.parentElement.click()}},e.onblur=function(e){window.onmouseup&&window.onmouseup()},n.parentElement.onclick=function(){smash.class.add(this,"is-focussed");var e=smash.get(this,"input"),s=this;e.setAttribute("placeholder",e.value),e.removeAttribute("readonly"),e.blur(),e.value="",window.onmouseup=function(){if(window.onmouseup=null,e.onkeyup=null,e.setAttribute("readonly","readonly"),s.reset(),items=smash.getAll(s,"ul li")){for(var a=0;a<items.length;a++)items[a].style.display="";smash.show(s,"ul")}return smash.class.remove(s,"is-focussed"),!1},e.onkeyup=function(e){switch(e.preventDefault(),e.stopPropagation(),e.keyCode){case 13:(selected=smash.get(s,"ul li.selected"))&&selected.onmousedown(e);break;case 37:case 38:if(selected=smash.get(s,"ul li.selected"))smash.class.remove(selected,"selected"),(previous=smash.previousVisible(selected))?(smash.class.add(previous,"selected"),previous.parentElement.scrollTop=previous.parentElement.scrollTop-previous.offsetHeight):(last=smash.lastVisible(selected))&&(smash.class.add(last,"selected"),last.parentElement.scrollTop=last.parentElement.scrollHeight);else{var a=smash.get(s,"ul li");(last=smash.lastVisible(a))&&(smash.class.add(last,"selected"),last.parentElement.scrollTop=last.parentElement.scrollHeight)}break;case 39:case 40:if(selected=smash.get(s,"ul li.selected"))smash.class.remove(selected,"selected"),(next=smash.nextVisible(selected))?(smash.class.add(next,"selected"),next.parentElement.scrollTop=next.parentElement.scrollTop+next.offsetHeight):(next=smash.firstVisible(selected))&&(smash.class.add(next,"selected"),next.parentElement.scrollTop=0);else{var a=smash.get(s,"ul li");(next=smash.firstVisible(a))&&(smash.class.add(next,"selected"),next.parentElement.scrollTop=0)}break;case 27:this.value="",this.blur(),this.focus()}var t=this.value.replace(/[^a-zA-Z0-9_ ]/g,"");if(items=smash.getAll(s,"ul li")){smash.show(s,"ul");for(var n,r=!1,o=0;o<items.length;o++)n=items[o],""==t||smash.fuzzyCompare(t,n.innerHTML)?(n.style.display="",r=!0):n.style.display="none";r||smash.hide(s,"ul")}return!1},e.focus()},n.parentElement.getAttribute("value")&&n.parentElement.setValue(n.parentElement.getAttribute("value")),smash.class.add(n.parentElement,"smash-initialised")}smash.input.checkboxInit()},smash.input.checkboxInit=function(){for(var e,s=document.querySelectorAll(".smash-checkbox input"),a=0;a<s.length;a++)if(e=s[a],!smash.class.has(e.parentElement,"smash-initialised")){var t=document.createElement("span");if(t.className="checks",t.innerHTML='<i class="material-icons">check_box_outline_blank</i><i class="material-icons checked">check_box</i>',e.parentElement.appendChild(t),label=e.getAttribute("label")){var n=document.createElement("span");n.className="label",n.innerHTML=label,e.parentElement.appendChild(n)}smash.class.add(e.parentElement,"smash-initialised"),e.checked=smash.class.has(e.parentElement,"checked"),e.parentElement.onclick=function(){smash.class.toggle(this,"checked"),smash.get(this,"input").checked=smash.class.has(this,"checked"),this.onchange&&this.onchange(smash.class.has(this,"checked"))},e.parentElement.getName=function(){return this.querySelector("input").getAttribute("name")},e.parentElement.getValue=function(){return smash.class.has(this,"checked")},e.parentElement.setValue=function(e){smash.class.has(this,"checked")!=e&&this.onclick()}}},smash.router={__parseRouteRegex:/{(.*?)}/gi,__dynamicParts:[],__baseDirectory:null,__routes:{static:[],dynamic:[]}},smash.router.add=function(e,s){var a=smash.router.parseRoute(e);return a.regex?(a.callback=s,smash.router.__routes.dynamic[a.depth]||(smash.router.__routes.dynamic[a.depth]=[]),smash.router.__routes.dynamic[a.depth][a.numVars]||(smash.router.__routes.dynamic[a.depth][a.numVars]=[]),void smash.router.__routes.dynamic[a.depth][a.numVars].push(a)):void(smash.router.__routes.static[e]=s)},smash.router.set=function(e){smash.router.displayURL(e),window.dispatchEvent(new Event("popstate"))},smash.router.displayURL=function(e){e=smash.router.addBaseDirectory(e),window.history.pushState("","",e)},smash.router.redirect=function(e){e.search(/^http[s]?:\/\//)||(e=smash.router.addBaseDirectory(e)),window.location=e},smash.router.handleNotFound=function(e){console.log("route: "+JSON.stringify(e)+" does not exist")},smash.router.run=function(){window.onpopstate=function(e){smash.router.execute()},smash.router.execute()},smash.router.execute=function(){var e=this.getPath();if(this.__routes.static[e.path])return void this.__routes.static[e.path]();var s=e.path.split("/").length-1;if(this.__routes.dynamic[s]){var a,t,n={};for(var r in this.__routes.dynamic[s])for(var o in this.__routes.dynamic[s][r]){var a=this.__routes.dynamic[s][r][o];if(t=e.path.match(a.regex)){for(var i=0;i<a.numVars;i++)n[a.vars[i]]=t[i+1];return void a.callback(n)}}}smash.router.handleNotFound(e)},smash.router.getPath=function(){var e=document.createElement("a");return e.href=window.location,{host:e.hostname,path:smash.router.checkPath(e.pathname)}},smash.router.parseRoute=function(e){e=smash.router.cleanPath(e);var s={path:e,depth:e.split("/").length-1,vars:[],numVars:0};if(smash.router.__dynamicParts=e.match(smash.router.__parseRouteRegex),void 0!=smash.router.__dynamicParts&&null!=smash.router.__dynamicParts){for(var a="^"+e.replace(/\//gi,"\\/")+"$",t=0;t<smash.router.__dynamicParts.length;t++)s.numVars++,s.vars.push(smash.router.__dynamicParts[t].substring(1,smash.router.__dynamicParts[t].length-1)),a=a.replace(smash.router.__dynamicParts[t],"(.*?)");s.regex=new RegExp(a,"i")}return s},smash.router.setBaseDirectory=function(e){return e?void(smash.router.__baseDirectory=smash.router.cleanPath(e)):void(smash.router.__baseDirectory=void 0)},smash.router.addBaseDirectory=function(e){return smash.router.__baseDirectory?(e.indexOf(smash.router.__baseDirectory)===-1&&(e=smash.router.__baseDirectory+e),e):e},smash.router.cleanPath=function(e){return e.length>0&&"/"!=e.substring(0,1)&&(e="/"+e),e.length>2&&"/"==e.substring(e.length-2)&&(e=e.substring(0,e.length-2)),e},smash.router.checkPath=function(e){return e=smash.router.cleanPath(e),smash.router.__baseDirectory&&e.indexOf(smash.router.__baseDirectory)!==-1&&(e=e.replace(smash.router.__baseDirectory,"")),e},smash.router.queryParam=function(e){var s="[\\?&]"+e+"=([^&#]*)",a=new RegExp(s),t=a.exec(window.location.search);if(null!=t)return t[1]},smash.searchbox={i_:!1,minAutoCompleteLength:3,onfocus:void 0,onblur:void 0,onchange:void 0},smash.searchbox.init=function(){if(!smash.searchbox.i_){var e=document.querySelector(".smash-searchbox input");e&&(e.onfocus=function(){0==this.value.length&&smash.searchbox.results('<div class="smash-instruction">Start typing to find results</div>'),smash.class.add(document.querySelector(".smash-header"),"is-focussed"),smash.class.add(document.querySelector(".smash-searchbox .smash-searchbox-results"),"show"),smash.searchbox.onfocus&&smash.searchbox.onfocus()},e.onblur=function(){smash.class.remove(document.querySelector(".smash-header"),"is-focussed"),smash.class.remove(document.querySelector(".smash-searchbox .smash-searchbox-results"),"show"),smash.searchbox.onblur&&smash.searchbox.onblur()},e.onkeyup=function(e){switch(e.keyCode){case 27:return this.value="",void this.blur()}this.value.length<smash.searchbox.minAutoCompleteLength||smash.searchbox.onchange&&smash.searchbox.onchange(this.value)},smash.searchbox.i_=!0)}},smash.searchbox.empty=function(){return!(i=smash.get(document,".smash-searchbox input"))||0==i.value.length},smash.searchbox.appendTo=function(e){var s=document.createElement("div");s.innerHTML=e;var a=document.querySelector(".smash-searchbox .smash-searchbox-results");a.appendChild(s)},smash.searchbox.results=function(e){var s=document.querySelector(".smash-searchbox .smash-searchbox-results");s.innerHTML=e},smash.sidebar={i_:!1},smash.sidebar.init=function(){if(!smash.sidebar.i_){var e=document.querySelector(".smash-sidebar .lock");if(e){e.onclick=function(){smash.sidebar.toggleLock()};var s=document.querySelector(".smash-sidebar");smash.class.add(s,"is-unlocked"),smash.sidebar.i_=!0,smash.config.get("sidebar_lock")&&smash.sidebar.toggleLock()}}},smash.sidebar.toggleLock=function(){smash.sidebar.i_&&(smash.class.toggle(document.querySelector(".smash-sidebar .lock"),"unlock"),smash.class.toggle(document.querySelector(".smash-sidebar"),"is-unlocked"),smash.config.set("sidebar_lock",!smash.class.has(document.querySelector(".smash-sidebar"),"is-unlocked")))},smash.storage={},smash.storage.set=function(e,s){localStorage.setItem(e,JSON.stringify(s))},smash.storage.unset=function(e){localStorage.removeItem(e)},smash.storage.get=function(e){var s=localStorage.getItem(e);if(s)return JSON.parse(s)},smash.storage.clear=function(){localStorage.clear()},smash.workspace={baseTitle:void 0,_ws_:void 0,_hdr_:void 0,_sb_:void 0,_tabs_:[]},smash.workspace.init=function(){smash.workspace._ws_=document.querySelector(".smash-workspace"),smash.workspace._ws_&&(smash.workspace._hdr_=document.querySelector(".smash-header"),smash.workspace._hdr_&&smash.class.add(smash.workspace._ws_,"has-header"),smash.workspace._sb_=document.querySelector(".smash-workspace .smash-sidebar"),smash.workspace._sb_&&smash.class.add(smash.workspace._ws_,"has-sidebar"))},smash.workspace.addTab=function(e,s,a,t){if(!smash.get(document,".smash-tab-pane")){var n=smash.get(document,".smash-panel");if(!n)return void console.log("To add a tab there needs to be a panel");n.innerHTML='<div class="smash-tab-pane"><div class="smash-tabs"></div><div class="smash-panes"></div></div>'}var r=smash.get(document,".smash-tab-pane .smash-tabs"),o=smash.get(document,".smash-tab-pane .smash-panes");if(document.title=smash.workspace.createTitle(s),l=smash.get(r,'.smash-tab[data-id="'+e+'"]')){var i=smash.get(o,'.smash-pane[data-id="'+e+'"]');return i.innerHTML=a,l.dataset.url=t,l.onclick(),{tab:l,pane:i}}smash.hide(o,".smash-pane"),(active=smash.get(r,".smash-tab.active"))&&smash.class.remove(active,"active");var l=document.createElement("div");l.className="smash-tab active",l.dataset.id=e,l.dataset.url=t,l.innerHTML=s+'<i class="material-icons close">close</i>',l.onclick=function(e){(active=smash.get(r,".smash-tab.active"))&&smash.class.remove(active,"active"),smash.class.add(this,"active"),smash.hide(document,".smash-pane"),smash.show(document,'.smash-pane[data-id="'+this.dataset.id+'"]'),this.dataset.url&&"undefined"!=this.dataset.url&&smash.router.displayURL(this.dataset.url),document.title=smash.workspace.createTitle(this.innerHTML)},smash.on(l,".close","onclick",function(e){this.parentElement.onclose&&!this.parentElement.onclose()||(smash.class.has(this.parentElement,"active")&&(this.parentElement.previousSibling?this.parentElement.previousSibling.onclick():this.parentElement.nextSibling&&this.parentElement.nextSibling.onclick()),(i=smash.get(document,'.smash-pane[data-id="'+this.parentElement.dataset.id+'"]'))&&i.parentElement.removeChild(i),this.parentElement.parentElement.removeChild(this.parentElement),this.parentElement.onclosed&&this.parentElement.onclosed(),e.stopPropagation())}),r.appendChild(l);var i=document.createElement("div");return i.className="smash-pane",i.dataset.id=e,i.innerHTML=a,o.appendChild(i),{tab:l,pane:i}},smash.workspace.activeTab=function(){var e=smash.get(document,".smash-tab.active");if(!e)return null;var s=smash.get(document,'.smash-pane[data-id="'+e.dataset.id+'"]');return s?{tab:e,pane:s}:null},smash.workspace.createTitle=function(e){var s=e.replace(/<([^>]+?)([^>]*?)>(.*?)<\/\1>/gi,"");if(""==s){var a=document.createElement("div");a.innerHTML=e,(ts=smash.get(a,".title"))&&(s=ts.innerHTML),""==s&&(s="unknown")}return s+(smash.workspace.baseTitle?" | "+smash.workspace.baseTitle:"")};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNtYXNoLmpzIiwiYWpheC5qcyIsImNsYXNzLmpzIiwiY29uZmlnLmpzIiwiY29udGV4dG1lbnUuanMiLCJjb29raWUuanMiLCJkaWFsb2cuanMiLCJleGNlcHRpb24uanMiLCJpbnB1dC5qcyIsInJvdXRlci5qcyIsInNlYXJjaGJveC5qcyIsInNpZGViYXIuanMiLCJzdG9yYWdlLmpzIiwid29ya3NwYWNlLmpzIl0sIm5hbWVzIjpbIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwic21hc2giLCJpbml0IiwiY29uZmlnIiwic2lkZWJhciIsInNlYXJjaGJveCIsIndvcmtzcGFjZSIsImlucHV0IiwiZ2V0IiwicGFyZW50Iiwic2VsZWN0b3IiLCJxdWVyeVNlbGVjdG9yIiwiY29uc29sZSIsImxvZyIsImdldEFsbCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJoaWRlIiwiZWwiLCJpIiwibGVuZ3RoIiwic3R5bGUiLCJkaXNwbGF5IiwibmV4dFZpc2libGUiLCJuZXh0U2libGluZyIsImZpcnN0VmlzaWJsZSIsInBhcmVudEVsZW1lbnQiLCJmaXJzdENoaWxkIiwicHJldmlvdXNWaXNpYmxlIiwicHJldmlvdXNTaWJsaW5nIiwibGFzdFZpc2libGUiLCJsYXN0Q2hpbGQiLCJzaG93IiwicmVtb3ZlIiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwib24iLCJldmVudCIsImNhbGxiYWNrIiwiZWxlbWVudHMiLCJmdXp6eUNvbXBhcmUiLCJzZWFyY2giLCJjb21wYXJlIiwidW5kZWZpbmVkIiwicmVnZXgiLCJ0b0xvd2VyQ2FzZSIsInJlcGxhY2UiLCJzcGxpdCIsImpvaW4iLCJtYXRjaCIsImFqYXgiLCJfaGVhZGVyc18iLCJhZGRIZWFkZXIiLCJuYW1lIiwidmFsdWUiLCJyZW1vdmVIZWFkZXIiLCJvbmVycm9yIiwibWVzc2FnZSIsIm9udW5hdXRob3JpemVkIiwiX3hocl8iLCJYTUxIdHRwUmVxdWVzdCIsInhociIsInZlcnNpb25zIiwiQWN0aXZlWE9iamVjdCIsInNlbmQiLCJ1cmwiLCJtZXRob2QiLCJkYXRhIiwicmVzcG9uc2VUeXBlIiwiYXN5bmMiLCJ4Iiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInN0YXR1cyIsInJlc3BvbnNlIiwib3BlbiIsInNldFJlcXVlc3RIZWFkZXIiLCJxdWVyeSIsImtleSIsInB1c2giLCJlbmNvZGVVUklDb21wb25lbnQiLCJwb3N0IiwiZGF0YVN0ciIsIkpTT04iLCJzdHJpbmdpZnkiLCJjbGFzcyIsImFkZCIsImNsYXNzTmFtZSIsImhhcyIsImNsYXNzTGlzdCIsImluZGV4T2YiLCJ0b2dnbGUiLCJfdmFsdWVzXyIsIl9zaWRlYmFyX2xvY2tfIiwidiIsInN0b3JhZ2UiLCJvcHRpb24iLCJvIiwiRXhjZXB0aW9uIiwic2V0IiwiY29udGV4dG1lbnUiLCJuZXciLCJpdGVtcyIsImN0eCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImlkIiwibGlzdCIsImxhYmVsIiwiaW5uZXJIVE1MIiwiYm9keSIsImFwcGVuZENoaWxkIiwiaXRlbSIsIm9ubW91c2Vkb3duIiwidGhpcyIsImNsb3NlIiwieSIsInBhZ2VZIiwib2Zmc2V0SGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJ0b3AiLCJsZWZ0IiwicGFnZVgiLCJwcmV2ZW50RGVmYXVsdCIsIm9uY2xpY2siLCJjb29raWUiLCJleHBpcnlEYXlzIiwiZCIsIkRhdGUiLCJzZXRUaW1lIiwiZ2V0VGltZSIsImV4cGlyZXMiLCJ0b1VUQ1N0cmluZyIsImRlY29kZWRDb29raWUiLCJkZWNvZGVVUklDb21wb25lbnQiLCJjYSIsImMiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJkaWFsb2ciLCJjb250ZW50IiwiYmFja2Ryb3AiLCJjaGVja0JhY2tkcm9wIiwidG9TdHJpbmciLCJpbnB1dHMiLCJnZXROYW1lIiwiZ2V0QXR0cmlidXRlIiwic2V0VmFsdWUiLCJvbmtleXVwIiwiZ2V0VmFsdWUiLCJwbGFjZWhvbGRlciIsImwiLCJzZWxlY3QiLCJzZWxlY3RzIiwib2xkIiwic2VsZWN0ZWRJbmRleCIsIm9wdGlvbnMiLCJ0ZXh0IiwiZm9jdXMiLCJibHVyIiwib25jaGFuZ2UiLCJyZXNldCIsImdldFRleHQiLCJ0eXBlIiwic2V0QXR0cmlidXRlIiwidWwiLCJvbm1vdXNldXAiLCJzdG9wUHJvcGFnYXRpb24iLCJqIiwibGkiLCJvbmZvY3VzIiwiY2xpY2siLCJvbmJsdXIiLCJyZW1vdmVBdHRyaWJ1dGUiLCJrZXlDb2RlIiwic2VsZWN0ZWQiLCJwcmV2aW91cyIsInNjcm9sbFRvcCIsImxhc3QiLCJzY3JvbGxIZWlnaHQiLCJuZXh0IiwicSIsInJlc3VsdHMiLCJjaGVja2JveEluaXQiLCJjaGVja2JveCIsImNoZWNrYm94ZXMiLCJjaGVja2VkIiwicm91dGVyIiwiX19wYXJzZVJvdXRlUmVnZXgiLCJfX2R5bmFtaWNQYXJ0cyIsIl9fYmFzZURpcmVjdG9yeSIsIl9fcm91dGVzIiwic3RhdGljIiwiZHluYW1pYyIsInBhdGgiLCJyb3V0ZSIsInBhcnNlUm91dGUiLCJkZXB0aCIsIm51bVZhcnMiLCJkaXNwbGF5VVJMIiwiZGlzcGF0Y2hFdmVudCIsIkV2ZW50IiwiYWRkQmFzZURpcmVjdG9yeSIsImhpc3RvcnkiLCJwdXNoU3RhdGUiLCJyZWRpcmVjdCIsImxvY2F0aW9uIiwiaGFuZGxlTm90Rm91bmQiLCJydW4iLCJvbnBvcHN0YXRlIiwiZXhlY3V0ZSIsImdldFBhdGgiLCJtYXRjaGVzIiwidmFyTnVtIiwidmFycyIsImhyZWYiLCJob3N0IiwiaG9zdG5hbWUiLCJjaGVja1BhdGgiLCJwYXRobmFtZSIsImNsZWFuUGF0aCIsIlJlZ0V4cCIsInNldEJhc2VEaXJlY3RvcnkiLCJkaXJlY3RvcnkiLCJxdWVyeVBhcmFtIiwicGFyYW0iLCJyZWdleFMiLCJleGVjIiwiaV8iLCJtaW5BdXRvQ29tcGxldGVMZW5ndGgiLCJzc2IiLCJlbXB0eSIsImFwcGVuZFRvIiwibm9kZSIsInNpYmwiLCJ0b2dnbGVMb2NrIiwic2liIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsInVuc2V0IiwicmVtb3ZlSXRlbSIsImdldEl0ZW0iLCJwYXJzZSIsImNsZWFyIiwiYmFzZVRpdGxlIiwiX3dzXyIsIl9oZHJfIiwiX3NiXyIsIl90YWJzXyIsImFkZFRhYiIsInRpdGxlIiwicGFuZWwiLCJ0YWJzIiwicGFuZXNDb250YWluZXIiLCJjcmVhdGVUaXRsZSIsInRhYiIsInBhbmUiLCJkYXRhc2V0IiwiYWN0aXZlIiwib25jbG9zZSIsIm9uY2xvc2VkIiwiYWN0aXZlVGFiIiwidCIsImRpdiIsInRzIl0sIm1hcHBpbmdzIjoiQUFBQUEsT0FBQUMsaUJBQUEsT0FBQSxTQUFBQyxHQUNBQyxNQUFBQyxTQUNBLEVBRUEsSUFBQUQsU0FFQUEsT0FBQUMsS0FBQSxXQUNBRCxNQUFBRSxPQUFBRCxPQUNBRCxNQUFBRyxRQUFBRixPQUNBRCxNQUFBSSxVQUFBSCxPQUNBRCxNQUFBSyxVQUFBSixPQUNBRCxNQUFBTSxNQUFBTCxRQUdBRCxNQUFBTyxJQUFBLFNBQUFDLEVBQUFDLEdBQ0EsSUFDQSxNQUFBRCxHQUFBRSxjQUFBRCxHQUNBLE1BQUFWLEdBQ0FZLFFBQUFDLElBQUFiLEtBS0FDLE1BQUFhLE9BQUEsU0FBQUwsRUFBQUMsR0FDQSxJQUNBLE1BQUFELEdBQUFNLGlCQUFBTCxHQUNBLE1BQUFWLEdBQ0FZLFFBQUFDLElBQUFiLEtBS0FDLE1BQUFlLEtBQUEsU0FBQVAsRUFBQUMsR0FDQSxHQUFBTyxFQUVBQSxHQURBUCxHQUFBLGdCQUFBQSxHQUNBVCxNQUFBYSxPQUFBTCxFQUFBQyxJQUVBRCxFQUVBLEtBQUEsR0FBQVMsR0FBQSxFQUFBQSxFQUFBRCxFQUFBRSxPQUFBRCxJQUNBRCxFQUFBQyxHQUFBRSxNQUFBQyxRQUFBLFFBSUFwQixNQUFBcUIsWUFBQSxTQUFBTCxHQUNBLEtBQUFBLEVBQUFBLEVBQUFNLGFBQ0EsR0FBQSxRQUFBTixFQUFBRyxNQUFBQyxRQUdBLE1BQUFKLElBS0FoQixNQUFBdUIsYUFBQSxTQUFBUCxHQUVBLEdBREFBLEVBQUFBLEVBQUFRLGNBQUFDLFdBQ0Es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QUssVUFBQTZPLFVBQUEiLCJmaWxlIjoic21hc2guanMiLCJzb3VyY2VzQ29udGVudCI6WyJ3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgZnVuY3Rpb24oZSl7XG4gICAgc21hc2guaW5pdCgpO1xufSwgZmFsc2UpO1xuXG52YXIgc21hc2ggPSB7fTtcblxuc21hc2guaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgIHNtYXNoLmNvbmZpZy5pbml0KCk7XG4gICAgc21hc2guc2lkZWJhci5pbml0KCk7XG4gICAgc21hc2guc2VhcmNoYm94LmluaXQoKTtcbiAgICBzbWFzaC53b3Jrc3BhY2UuaW5pdCgpO1xuICAgIHNtYXNoLmlucHV0LmluaXQoKTtcbn07XG5cbnNtYXNoLmdldCA9IGZ1bmN0aW9uKHBhcmVudCwgc2VsZWN0b3IpIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gcGFyZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuICAgIH0gY2F0Y2goZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhlKTtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG5cbnNtYXNoLmdldEFsbCA9IGZ1bmN0aW9uKHBhcmVudCwgc2VsZWN0b3IpIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gcGFyZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpO1xuICAgIH0gY2F0Y2goZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhlKTtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG5cbnNtYXNoLmhpZGUgPSBmdW5jdGlvbihwYXJlbnQsIHNlbGVjdG9yKSB7XG4gICAgdmFyIGVsO1xuICAgIGlmIChzZWxlY3RvciAmJiB0eXBlb2Ygc2VsZWN0b3IgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGVsID0gc21hc2guZ2V0QWxsKHBhcmVudCwgc2VsZWN0b3IpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGVsID0gW3BhcmVudF07XG4gICAgfVxuICAgIGZvciAodmFyIGk9MDsgaTxlbC5sZW5ndGg7IGkrKykge1xuICAgICAgICBlbFtpXS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIH1cbn07XG5cbnNtYXNoLm5leHRWaXNpYmxlID0gZnVuY3Rpb24oZWwpIHtcbiAgICB3aGlsZSAoZWwgPSBlbC5uZXh0U2libGluZykge1xuICAgICAgICBpZiAoZWwuc3R5bGUuZGlzcGxheSA9PSAnbm9uZScpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlbDtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG5cbnNtYXNoLmZpcnN0VmlzaWJsZSA9IGZ1bmN0aW9uKGVsKSB7XG4gICAgZWwgPSBlbC5wYXJlbnRFbGVtZW50LmZpcnN0Q2hpbGQ7XG4gICAgaWYgKGVsLnN0eWxlLmRpc3BsYXkgIT0gJ25vbmUnKSB7XG4gICAgICAgIHJldHVybiBlbDtcbiAgICB9XG4gICAgd2hpbGUgKGVsID0gZWwubmV4dFNpYmxpbmcpIHtcbiAgICAgICAgaWYgKGVsLnN0eWxlLmRpc3BsYXkgPT0gJ25vbmUnKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZWw7XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG59O1xuXG5zbWFzaC5wcmV2aW91c1Zpc2libGUgPSBmdW5jdGlvbihlbCkge1xuICAgIHdoaWxlIChlbCA9IGVsLnByZXZpb3VzU2libGluZykge1xuICAgICAgICBpZiAoZWwuc3R5bGUuZGlzcGxheSA9PSAnbm9uZScpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlbDtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG5cbnNtYXNoLmxhc3RWaXNpYmxlID0gZnVuY3Rpb24oZWwpIHtcbiAgICBlbCA9IGVsLnBhcmVudEVsZW1lbnQubGFzdENoaWxkO1xuICAgIGlmIChlbC5zdHlsZS5kaXNwbGF5ICE9ICdub25lJykge1xuICAgICAgICByZXR1cm4gZWw7XG4gICAgfVxuICAgIHdoaWxlIChlbCA9IGVsLnByZXZpb3VzU2libGluZykge1xuICAgICAgICBpZiAoZWwuc3R5bGUuZGlzcGxheSA9PSAnbm9uZScpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlbDtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG5cbnNtYXNoLnNob3cgPSBmdW5jdGlvbihwYXJlbnQsIHNlbGVjdG9yKSB7XG4gICAgdmFyIGVsO1xuICAgIGlmIChzZWxlY3RvciAmJiB0eXBlb2Ygc2VsZWN0b3IgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGVsID0gc21hc2guZ2V0QWxsKHBhcmVudCwgc2VsZWN0b3IpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGVsID0gW3BhcmVudF07XG4gICAgfVxuICAgIGZvciAodmFyIGk9MDsgaTxlbC5sZW5ndGg7IGkrKykge1xuICAgICAgICBlbFtpXS5zdHlsZS5kaXNwbGF5ID0gJyc7XG4gICAgfVxufTtcblxuc21hc2gucmVtb3ZlID0gZnVuY3Rpb24oZWwpIHtcbiAgICBlbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGVsKTtcbn07XG5cbnNtYXNoLm9uID0gZnVuY3Rpb24ocGFyZW50LCBzZWxlY3RvciwgZXZlbnQsIGNhbGxiYWNrKSB7XG4gICAgdmFyIGVsZW1lbnRzID0gc21hc2guZ2V0QWxsKHBhcmVudCwgc2VsZWN0b3IpO1xuICAgIGZvciAodmFyIGk9MDsgaTxlbGVtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBlbGVtZW50c1tpXVtldmVudF0gPSBjYWxsYmFjaztcbiAgICB9XG59O1xuXG5zbWFzaC5mdXp6eUNvbXBhcmUgPSBmdW5jdGlvbihzZWFyY2gsIGNvbXBhcmUpIHtcbiAgICBpZiAoY29tcGFyZSA9PSB1bmRlZmluZWQgfHwgc2VhcmNoID09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHZhciByZWdleCA9IFwiLio/XCIgKyBzZWFyY2gudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC8tL2csIFwiXFxcXC1cIikuc3BsaXQoXCJcIikuam9pbihcIi4qP1wiKSArIFwiLio/XCI7XG4gICAgcmV0dXJuIGNvbXBhcmUudG9Mb3dlckNhc2UoKS5tYXRjaChyZWdleCk7XG59O1xuIiwic21hc2guYWpheCA9IHtcbiAgICBfaGVhZGVyc186IFtdXG59O1xuXG5zbWFzaC5hamF4LmFkZEhlYWRlciA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gICAgc21hc2guYWpheC5faGVhZGVyc19bbmFtZV0gPSB2YWx1ZTtcbn07XG5cbnNtYXNoLmFqYXgucmVtb3ZlSGVhZGVyID0gZnVuY3Rpb24obmFtZSkge1xuICAgIGRlbGV0ZSBzbWFzaC5hamF4Ll9oZWFkZXJzX1tuYW1lXTtcbn07XG5cbnNtYXNoLmFqYXgub25lcnJvciA9IGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgICBjb25zb2xlLmxvZyhtZXNzYWdlKTtcbn07XG5cbnNtYXNoLmFqYXgub251bmF1dGhvcml6ZWQgPSBmdW5jdGlvbihtZXNzYWdlKSB7XG4gICAgc21hc2guYWpheC5vbmVycm9yKG1lc3NhZ2UpO1xufTtcblxuc21hc2guYWpheC5feGhyXyA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodHlwZW9mIFhNTEh0dHBSZXF1ZXN0ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgfVxuICAgIHZhciB2ZXJzaW9ucyA9IFtcbiAgICAgICAgXCJNU1hNTDIuWG1sSHR0cC42LjBcIixcbiAgICAgICAgXCJNU1hNTDIuWG1sSHR0cC41LjBcIixcbiAgICAgICAgXCJNU1hNTDIuWG1sSHR0cC40LjBcIixcbiAgICAgICAgXCJNU1hNTDIuWG1sSHR0cC4zLjBcIixcbiAgICAgICAgXCJNU1hNTDIuWG1sSHR0cC4yLjBcIixcbiAgICAgICAgXCJNaWNyb3NvZnQuWG1sSHR0cFwiXG4gICAgXTtcbiAgICB2YXIgeGhyO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmVyc2lvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHhociA9IG5ldyBBY3RpdmVYT2JqZWN0KHZlcnNpb25zW2ldKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHhocjtcbn07XG5cbnNtYXNoLmFqYXguc2VuZCA9IGZ1bmN0aW9uICh1cmwsIGNhbGxiYWNrLCBtZXRob2QsIGRhdGEsIHJlc3BvbnNlVHlwZSwgb25lcnJvciwgYXN5bmMpIHtcbiAgICBpZiAoYXN5bmMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBhc3luYyA9IHRydWU7XG4gICAgfVxuICAgIGlmIChvbmVycm9yID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgb25lcnJvciA9IHNtYXNoLmFqYXgub25lcnJvcjtcbiAgICB9XG4gICAgdmFyIHggPSBzbWFzaC5hamF4Ll94aHJfKCk7XG4gICAgeC5yZXNwb25zZVR5cGUgPSByZXNwb25zZVR5cGU7XG4gICAgeC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG5cdFx0aWYgKHgucmVhZHlTdGF0ZSA9PSA0KSB7XG4gICAgICAgICAgICBzd2l0Y2ggKHguc3RhdHVzKSB7XG4gICAgICAgICAgICBjYXNlIDIwMDpcbiAgICAgICAgICAgIGNhc2UgMjAxOlxuICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayh4LnJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDQwMTpcbiAgICAgICAgICAgICAgICBzbWFzaC5hamF4Lm9udW5hdXRob3JpemVkKHgucmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBvbmVycm9yKHgucmVzcG9uc2UpO1xuICAgICAgICAgICAgfVxuXHRcdH1cbiAgICB9O1xuICAgIHgub3BlbihtZXRob2QsIHVybCwgYXN5bmMpO1xuICAgIGlmIChyZXNwb25zZVR5cGUgPT0gJ2pzb24nKSB7XG4gICAgICAgIHguc2V0UmVxdWVzdEhlYWRlcignQ29udGVudC10eXBlJywgJ2FwcGxpY2F0aW9uL2pzb24nKTtcbiAgICB9IGVsc2UgaWYgKG1ldGhvZCA9PSAnUE9TVCcpIHtcbiAgICAgICAgeC5zZXRSZXF1ZXN0SGVhZGVyKCdDb250ZW50LXR5cGUnLCAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJyk7XG4gICAgfVxuICAgIGZvciAodmFyIG5hbWUgaW4gc21hc2guYWpheC5faGVhZGVyc18pIHtcbiAgICAgICAgeC5zZXRSZXF1ZXN0SGVhZGVyKG5hbWUsIHNtYXNoLmFqYXguX2hlYWRlcnNfW25hbWVdKTtcbiAgICB9XG4gICAgeC5zZW5kKGRhdGEpXG59O1xuXG5zbWFzaC5hamF4LmdldCA9IGZ1bmN0aW9uICh1cmwsIGNhbGxiYWNrLCBkYXRhLCByZXNwb25zZVR5cGUsIG9uZXJyb3IsIGFzeW5jKSB7XG4gICAgdmFyIHF1ZXJ5ID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIGRhdGEpIHtcbiAgICAgICAgcXVlcnkucHVzaChlbmNvZGVVUklDb21wb25lbnQoa2V5KSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudChkYXRhW2tleV0pKTtcbiAgICB9XG4gICAgc21hc2guYWpheC5zZW5kKHVybCArIChxdWVyeS5sZW5ndGggPyAnPycgKyBxdWVyeS5qb2luKCcmJykgOiAnJyksIGNhbGxiYWNrLCAnR0VUJywgbnVsbCwgcmVzcG9uc2VUeXBlLCBvbmVycm9yLCAgYXN5bmMpXG59O1xuXG5zbWFzaC5hamF4LnBvc3QgPSBmdW5jdGlvbiAodXJsLCBjYWxsYmFjaywgZGF0YSwgcmVzcG9uc2VUeXBlLCBvbmVycm9yLCBhc3luYykge1xuICAgIHZhciBkYXRhU3RyO1xuICAgIGlmIChkYXRhKSB7XG4gICAgICAgIGlmIChyZXNwb25zZVR5cGUgIT0gJ2pzb24nKSB7XG4gICAgICAgICAgICB2YXIgcXVlcnkgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBkYXRhKSB7XG4gICAgICAgICAgICAgICAgcXVlcnkucHVzaChlbmNvZGVVUklDb21wb25lbnQoa2V5KSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudChkYXRhW2tleV0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRhdGFTdHIgPSBxdWVyeS5qb2luKCcmJylcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGRhdGFTdHIgPSBKU09OLnN0cmluZ2lmeShkYXRhKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzbWFzaC5hamF4LnNlbmQodXJsLCBjYWxsYmFjaywgJ1BPU1QnLCBkYXRhU3RyLCByZXNwb25zZVR5cGUsIG9uZXJyb3IsIGFzeW5jKVxufTtcbiIsInNtYXNoLmNsYXNzID0ge307XG5cbnNtYXNoLmNsYXNzLmFkZCA9IGZ1bmN0aW9uKGVsLCBjbGFzc05hbWUpIHtcbiAgICBpZiAoIXNtYXNoLmNsYXNzLmhhcyhlbCwgY2xhc3NOYW1lKSkge1xuICAgICAgICBlbC5jbGFzc0xpc3QgPyBlbC5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSkgOiBlbC5jbGFzc05hbWUgKz0gKCcgJyArIGNsYXNzTmFtZSk7XG4gICAgfVxufTtcblxuc21hc2guY2xhc3MucmVtb3ZlID0gZnVuY3Rpb24oZWwsIGNsYXNzTmFtZSkge1xuICAgIGlmIChzbWFzaC5jbGFzcy5oYXMoZWwsIGNsYXNzTmFtZSkpIHtcbiAgICAgICAgZWwuY2xhc3NMaXN0ID8gZWwuY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpIDogZWwuY2xhc3NOYW1lID0gZWwuY2xhc3NOYW1lLnJlcGxhY2UoY2xhc3NOYW1lLCAnJyk7XG4gICAgfVxufTtcblxuc21hc2guY2xhc3MuaGFzID0gZnVuY3Rpb24oZWwsIGNsYXNzTmFtZSkge1xuICAgIHJldHVybiAoKFwiIFwiICsgZWwuY2xhc3NOYW1lICsgXCIgXCIpLnJlcGxhY2UoL1tcXG5cXHRdL2csIFwiIFwiKS5pbmRleE9mKFwiIFwiICsgY2xhc3NOYW1lICsgXCIgXCIpID4gLTEpO1xufTtcblxuc21hc2guY2xhc3MudG9nZ2xlID0gZnVuY3Rpb24oZWwsIGNsYXNzTmFtZSkge1xuICAgIHNtYXNoLmNsYXNzLmhhcyhlbCwgY2xhc3NOYW1lKSA/IHNtYXNoLmNsYXNzLnJlbW92ZShlbCwgY2xhc3NOYW1lKSA6IHNtYXNoLmNsYXNzLmFkZChlbCwgY2xhc3NOYW1lKTtcbn07XG4iLCJzbWFzaC5jb25maWcgPSB7XG4gICAgX3ZhbHVlc186IHtcbiAgICAgICAgX3NpZGViYXJfbG9ja186IGZhbHNlXG4gICAgfVxufVxuXG5zbWFzaC5jb25maWcuaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB2ID0gc21hc2guc3RvcmFnZS5nZXQoJ2NvbmZpZycpO1xuICAgIGlmICh2KSB7XG4gICAgICAgIHNtYXNoLmNvbmZpZy5fdmFsdWVzXyA9IHY7XG4gICAgfVxufTtcblxuc21hc2guY29uZmlnLmdldCA9IGZ1bmN0aW9uKG9wdGlvbikge1xuICAgIHZhciBvID0gJ18nICsgb3B0aW9uICsgJ18nO1xuICAgIGlmIChvIGluIHNtYXNoLmNvbmZpZy5fdmFsdWVzXykge1xuICAgICAgICByZXR1cm4gc21hc2guY29uZmlnLl92YWx1ZXNfW29dO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgc21hc2guRXhjZXB0aW9uKCcwMDEnLCAnSW52YWxpZCBjb25maWcgb3B0aW9uIFwiJyArIG9wdGlvbiArICdcIicpO1xufTtcblxuc21hc2guY29uZmlnLnNldCA9IGZ1bmN0aW9uKG9wdGlvbiwgdmFsdWUpIHtcbiAgICB2YXIgbyA9ICdfJyArIG9wdGlvbiArICdfJztcbiAgICBpZiAoIW8gaW4gc21hc2guY29uZmlnLl92YWx1ZXNfKSB7XG4gICAgICAgIHRocm93IG5ldyBzbWFzaC5FeGNlcHRpb24oJzAwMScsICdJbnZhbGlkIGNvbmZpZyBvcHRpb24gXCInICsgb3B0aW9uICsgJ1wiJyk7XG4gICAgfVxuICAgIHNtYXNoLmNvbmZpZy5fdmFsdWVzX1tvXSA9IHZhbHVlO1xuICAgIHNtYXNoLnN0b3JhZ2Uuc2V0KCdjb25maWcnLCBzbWFzaC5jb25maWcuX3ZhbHVlc18pO1xufTtcbiIsInNtYXNoLmNvbnRleHRtZW51ID0ge307XG5cbnNtYXNoLmNvbnRleHRtZW51Lm5ldyA9IGZ1bmN0aW9uKGUsIGl0ZW1zKSB7XG4gICAgaWYgKGN0eCA9IHNtYXNoLmdldChkb2N1bWVudCwgXCIjc21hc2gtY29udGV4dC1tZW51XCIpKSB7XG4gICAgICAgIHNtYXNoLnJlbW92ZShjdHgpO1xuICAgIH1cbiAgICB2YXIgY3R4ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBjdHguaWQgPSAgXCJzbWFzaC1jb250ZXh0LW1lbnVcIjtcbiAgICB2YXIgbGlzdCA9IFwiPHVsIGNsYXNzPSdjbGlja2FibGUnPlwiO1xuICAgIGZvciAoaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoaXRlbXNbaV0gPT0gXCJzZXBlcmF0b3JcIikge1xuICAgICAgICAgICAgbGlzdCArPSAnPGxpIGNsYXNzPVwic2VwZXJhdG9yXCI+PC9saT4nO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgbGlzdCArPSAnPGxpIGNsYXNzPVwiY3R4X2l0ZW1fJyArIGkgKyAnXCI+JyArIGl0ZW1zW2ldLmxhYmVsICsgXCI8L2xpPlwiO1xuICAgIH1cbiAgICBsaXN0ICs9ICc8L3VsPic7XG4gICAgY3R4LmlubmVySFRNTCA9IGxpc3Q7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjdHgpO1xuICAgIHZhciBpdGVtO1xuICAgIGZvciAoaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoaXRlbXNbaV0gPT0gXCJzZXBlcmF0b3JcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaXRlbSA9IHNtYXNoLmdldChjdHgsIFwibGkuY3R4X2l0ZW1fXCIgKyBpKTtcbiAgICAgICAgaXRlbS5jYWxsYmFjayA9IGl0ZW1zW2ldLmNhbGxiYWNrO1xuICAgICAgICBpdGVtLm9ubW91c2Vkb3duID0gZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgdGhpcy5jYWxsYmFjayhlKTtcbiAgICAgICAgICAgIHNtYXNoLmNvbnRleHRtZW51LmNsb3NlKGUpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICB2YXIgeSA9IGUucGFnZVlcbiAgICBpZiAoeSArIGN0eC5vZmZzZXRIZWlnaHQgPiB3aW5kb3cuaW5uZXJIZWlnaHQpIHtcbiAgICAgICAgeSA9IHdpbmRvdy5pbm5lckhlaWdodCAtIGN0eC5vZmZzZXRIZWlnaHQgLSAyMDtcbiAgICB9XG4gICAgY3R4LnN0eWxlLnRvcCA9IHk7XG4gICAgY3R4LnN0eWxlLmxlZnQgPSBlLnBhZ2VYO1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBkb2N1bWVudC5vbmNsaWNrID0gc21hc2guY29udGV4dG1lbnUuY2xvc2U7XG4gICAgcmV0dXJuIGZhbHNlO1xufTtcblxuc21hc2guY29udGV4dG1lbnUuY2xvc2UgPSBmdW5jdGlvbihlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGlmIChjdHggPSBzbWFzaC5nZXQoZG9jdW1lbnQsIFwiI3NtYXNoLWNvbnRleHQtbWVudVwiKSkge1xuICAgICAgICBzbWFzaC5yZW1vdmUoY3R4KTtcbiAgICB9XG4gICAgZG9jdW1lbnQub25jbGljayA9IHVuZGVmaW5lZDtcbn07XG4iLCJzbWFzaC5jb29raWUgPSB7fTtcblxuc21hc2guY29va2llLnNldCA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBleHBpcnlEYXlzKSB7XG4gICAgdmFyIGQgPSBuZXcgRGF0ZSgpO1xuICAgIGQuc2V0VGltZShkLmdldFRpbWUoKSArIChleHBpcnlEYXlzKjI0KjYwKjYwKjEwMDApKTtcbiAgICB2YXIgZXhwaXJlcyA9IFwiZXhwaXJlcz1cIisgZC50b1VUQ1N0cmluZygpO1xuICAgIGRvY3VtZW50LmNvb2tpZSA9IG5hbWUgKyBcIj1cIiArIHZhbHVlICsgXCI7XCIgKyBleHBpcmVzICsgXCI7cGF0aD0vXCI7XG59O1xuXG5zbWFzaC5jb29raWUuZ2V0ID0gZnVuY3Rpb24obmFtZSkge1xuICAgIHZhciBuYW1lID0gbmFtZSArIFwiPVwiO1xuICAgIHZhciBkZWNvZGVkQ29va2llID0gZGVjb2RlVVJJQ29tcG9uZW50KGRvY3VtZW50LmNvb2tpZSk7XG4gICAgdmFyIGNhID0gZGVjb2RlZENvb2tpZS5zcGxpdCgnOycpO1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPGNhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBjID0gY2FbaV07XG4gICAgICAgIHdoaWxlIChjLmNoYXJBdCgwKSA9PSAnICcpIHtcbiAgICAgICAgICAgIGMgPSBjLnN1YnN0cmluZygxKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYy5pbmRleE9mKG5hbWUpID09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBjLnN1YnN0cmluZyhuYW1lLmxlbmd0aCwgYy5sZW5ndGgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBcIlwiO1xufTtcbiIsInNtYXNoLmRpYWxvZyA9IHt9O1xuXG5zbWFzaC5kaWFsb2cubmV3ID0gZnVuY3Rpb24oY29udGVudCkge1xuICAgIHZhciBiYWNrZHJvcCA9IHNtYXNoLmRpYWxvZy5jaGVja0JhY2tkcm9wKCk7XG5cbiAgICB2YXIgZGlhbG9nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgZGlhbG9nLmNsYXNzTmFtZSA9ICdzbWFzaC1kaWFsb2cnO1xuICAgIGRpYWxvZy5pbm5lckhUTUwgPSBjb250ZW50O1xuICAgIGJhY2tkcm9wLmFwcGVuZENoaWxkKGRpYWxvZyk7XG59O1xuXG5zbWFzaC5kaWFsb2cuY2hlY2tCYWNrZHJvcCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmIChiYWNrZHJvcCA9IHNtYXNoLmdldChkb2N1bWVudCwgXCIuc21hc2gtZGlhbG9nLWJhY2tkcm9wXCIpKSB7XG4gICAgICAgIGlmIChkaWFsb2cgPSBzbWFzaC5nZXQoZG9jdW1lbnQsIFwiLnNtYXNoLWRpYWxvZy1iYWNrZHJvcCAuc21hc2gtZGlhbG9nXCIpKSB7XG4gICAgICAgICAgICBiYWNrZHJvcC5yZW1vdmVDaGlsZChkaWFsb2cpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBiYWNrZHJvcDtcbiAgICB9XG4gICAgdmFyIGJhY2tkcm9wID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgYmFja2Ryb3AuY2xhc3NOYW1lID0gJ3NtYXNoLWRpYWxvZy1iYWNrZHJvcCc7XG4gICAgYmFja2Ryb3AuaW5uZXJIVE1MID0gJzxkaXYgY2xhc3M9XCJzbWFzaC1kaWFsb2ctYmFja2dyb3VuZFwiPjwvZGl2Pic7XG4gICAgc21hc2guZ2V0KGJhY2tkcm9wLCAnLnNtYXNoLWRpYWxvZy1iYWNrZ3JvdW5kJykub25jbGljayA9IHNtYXNoLmRpYWxvZy5jbG9zZTtcbiAgICBzbWFzaC5nZXQoZG9jdW1lbnQsICdib2R5JykuYXBwZW5kQ2hpbGQoYmFja2Ryb3ApO1xuICAgIHJldHVybiBiYWNrZHJvcDtcbn07XG5cbnNtYXNoLmRpYWxvZy5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICAgIGlmIChkaWFsb2cgPSBzbWFzaC5nZXQoZG9jdW1lbnQsIFwiLnNtYXNoLWRpYWxvZy1iYWNrZHJvcFwiKSkge1xuICAgICAgICBzbWFzaC5nZXQoZG9jdW1lbnQsICdib2R5JykucmVtb3ZlQ2hpbGQoZGlhbG9nKTtcbiAgICB9XG59O1xuIiwic21hc2guRXhjZXB0aW9uID0gZnVuY3Rpb24gKHZhbHVlLCBtZXNzYWdlKSB7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgdGhpcy50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gJ1NtYXNoRXhjZXB0aW9uICcgKyB0aGlzLnZhbHVlICsgJzogJyArIHRoaXMubWVzc2FnZTtcbiAgICB9O1xufTtcbiIsInNtYXNoLmlucHV0ID0ge307XG5cbnNtYXNoLmlucHV0LmluaXQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaW5wdXRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5zbWFzaC1pbnB1dCBpbnB1dCwgLnNtYXNoLXRleHRhcmVhIHRleHRhcmVhXCIpO1xuICAgIHZhciBpbnB1dDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGlucHV0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpbnB1dCA9IGlucHV0c1tpXTtcbiAgICAgICAgaWYgKHNtYXNoLmNsYXNzLmhhcyhpbnB1dC5wYXJlbnRFbGVtZW50LCAnc21hc2gtaW5pdGlhbGlzZWQnKSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBpbnB1dC5wYXJlbnRFbGVtZW50LmdldE5hbWUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dFwiKS5nZXRBdHRyaWJ1dGUoJ25hbWUnKTtcbiAgICAgICAgfTtcblxuICAgICAgICBpbnB1dC5wYXJlbnRFbGVtZW50LnNldFZhbHVlID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIGlmIChpbnB1dCA9IHRoaXMucXVlcnlTZWxlY3RvcihcImlucHV0XCIpKSB7XG4gICAgICAgICAgICAgICAgaW5wdXQudmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICBpbnB1dC5vbmtleXVwKCk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGlucHV0ID0gdGhpcy5xdWVyeVNlbGVjdG9yKFwidGV4dGFyZWFcIikpIHtcbiAgICAgICAgICAgICAgICBpbnB1dC52YWx1ZSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIGlucHV0Lm9ua2V5dXAoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBpbnB1dC5wYXJlbnRFbGVtZW50LmdldFZhbHVlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAoaW5wdXQgPSB0aGlzLnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dFwiKSkge1xuICAgICAgICAgICAgICAgIHZhciBpbnB1dCA9IHRoaXMucXVlcnlTZWxlY3RvcihcImlucHV0XCIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBpbnB1dC52YWx1ZVxuICAgICAgICAgICAgfSBlbHNlIGlmIChpbnB1dCA9IHRoaXMucXVlcnlTZWxlY3RvcihcInRleHRhcmVhXCIpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gdGhpcy5xdWVyeVNlbGVjdG9yKFwidGV4dGFyZWFcIik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlucHV0LnZhbHVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfTtcblxuICAgICAgICBpZiAoc21hc2guY2xhc3MuaGFzKGlucHV0LnBhcmVudEVsZW1lbnQsICdoYXMtZmxvYXRpbmctbGFiZWwnKSkge1xuICAgICAgICAgICAgc21hc2guY2xhc3MucmVtb3ZlKGlucHV0LnBhcmVudEVsZW1lbnQsICdoYXMtZmxvYXRpbmctbGFiZWwnKTtcbiAgICAgICAgICAgIHNtYXNoLmNsYXNzLmFkZChpbnB1dC5wYXJlbnRFbGVtZW50LCAnZmxvYXRpbmctbGFiZWwnKTtcblxuICAgICAgICAgICAgdmFyIGxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICAgICAgICAgIGxhYmVsLmlubmVySFRNTCA9IGlucHV0LnBsYWNlaG9sZGVyO1xuICAgICAgICAgICAgaW5wdXQucGFyZW50RWxlbWVudC5hcHBlbmRDaGlsZChsYWJlbCk7XG4gICAgICAgICAgICBpbnB1dC5vbmtleXVwID0gZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgIHZhciBsID0gdGhpcy5wYXJlbnRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJsYWJlbFwiKTtcbiAgICAgICAgICAgICAgICBpZiAobCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy52YWx1ZSAhPSBcIlwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzbWFzaC5jbGFzcy5hZGQobCwgJ3Nob3cnKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNtYXNoLmNsYXNzLnJlbW92ZShsLCAnc2hvdycpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbnB1dC5wYXJlbnRFbGVtZW50LmdldEF0dHJpYnV0ZSgndmFsdWUnKSkge1xuICAgICAgICAgICAgaW5wdXQucGFyZW50RWxlbWVudC5zZXRWYWx1ZShpbnB1dC5wYXJlbnRFbGVtZW50LmdldEF0dHJpYnV0ZSgndmFsdWUnKSk7XG4gICAgICAgIH1cblxuICAgICAgICBzbWFzaC5jbGFzcy5hZGQoaW5wdXQucGFyZW50RWxlbWVudCwgJ3NtYXNoLWluaXRpYWxpc2VkJyk7XG4gICAgfVxuICAgIHZhciBzZWxlY3RzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5zbWFzaC1zZWxlY3Qgc2VsZWN0XCIpO1xuICAgIHZhciBzZWxlY3Q7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZWxlY3RzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHNlbGVjdCA9IHNlbGVjdHNbaV07XG4gICAgICAgIGlmIChzbWFzaC5jbGFzcy5oYXMoc2VsZWN0LnBhcmVudEVsZW1lbnQsICdzbWFzaC1pbml0aWFsaXNlZCcpKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc21hc2guY2xhc3MuaGFzKHNlbGVjdC5wYXJlbnRFbGVtZW50LCAnaGFzLWZsb2F0aW5nLWxhYmVsJykpIHtcbiAgICAgICAgICAgIHNtYXNoLmNsYXNzLnJlbW92ZShzZWxlY3QucGFyZW50RWxlbWVudCwgJ2hhcy1mbG9hdGluZy1sYWJlbCcpO1xuICAgICAgICAgICAgc21hc2guY2xhc3MuYWRkKHNlbGVjdC5wYXJlbnRFbGVtZW50LCAnZmxvYXRpbmctbGFiZWwnKTtcbiAgICAgICAgICAgIHZhciBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgICAgICAgICBsYWJlbC5pbm5lckhUTUwgPSBzZWxlY3QuZ2V0QXR0cmlidXRlKCdwbGFjZWhvbGRlcicpO1xuICAgICAgICAgICAgc2VsZWN0LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQobGFiZWwpO1xuICAgICAgICB9XG5cbiAgICAgICAgc2VsZWN0LnBhcmVudEVsZW1lbnQuZ2V0TmFtZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvcihcInNlbGVjdFwiKS5nZXRBdHRyaWJ1dGUoJ25hbWUnKTtcbiAgICAgICAgfTtcblxuICAgICAgICBzZWxlY3QucGFyZW50RWxlbWVudC5zZXRWYWx1ZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgICBzbWFzaC5jbGFzcy5yZW1vdmUodGhpcywgJ2lzLWZvY3Vzc2VkJyk7XG4gICAgICAgICAgICB2YXIgc2VsZWN0ID0gdGhpcy5xdWVyeVNlbGVjdG9yKFwic2VsZWN0XCIpO1xuICAgICAgICAgICAgdmFyIGlucHV0ID0gdGhpcy5xdWVyeVNlbGVjdG9yKFwiaW5wdXRcIik7XG4gICAgICAgICAgICB2YXIgb2xkID0gc2VsZWN0LnZhbHVlO1xuICAgICAgICAgICAgc2VsZWN0LnZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgICBpZiAoc2VsZWN0LnNlbGVjdGVkSW5kZXggPiAtMSkge1xuICAgICAgICAgICAgICAgIGlucHV0LnZhbHVlID0gc2VsZWN0Lm9wdGlvbnNbc2VsZWN0LnNlbGVjdGVkSW5kZXhdLnRleHQ7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlucHV0LnZhbHVlID0gXCJcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlucHV0LmZvY3VzKCk7XG4gICAgICAgICAgICBpbnB1dC5ibHVyKCk7XG4gICAgICAgICAgICBpZiAob2xkICE9IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGVjdC5vbmNoYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3Qub25jaGFuZ2UoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub25jaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbmNoYW5nZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBzZWxlY3QucGFyZW50RWxlbWVudC5nZXRWYWx1ZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIHNlbGVjdCA9IHRoaXMucXVlcnlTZWxlY3RvcihcInNlbGVjdFwiKTtcbiAgICAgICAgICAgIGlmIChzZWxlY3Quc2VsZWN0ZWRJbmRleCA9PSAtMSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHNlbGVjdC5vcHRpb25zW3NlbGVjdC5zZWxlY3RlZEluZGV4XS52YWx1ZTtcbiAgICAgICAgfTtcblxuICAgICAgICBzZWxlY3QucGFyZW50RWxlbWVudC5yZXNldCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgc21hc2guZ2V0KHRoaXMsICdpbnB1dCcpLnZhbHVlID0gdGhpcy5nZXRUZXh0KCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgc2VsZWN0LnBhcmVudEVsZW1lbnQuZ2V0VGV4dCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIHNlbGVjdCA9IHRoaXMucXVlcnlTZWxlY3RvcihcInNlbGVjdFwiKTtcbiAgICAgICAgICAgIGlmIChzZWxlY3Quc2VsZWN0ZWRJbmRleCA9PSAtMSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHNlbGVjdC5vcHRpb25zW3NlbGVjdC5zZWxlY3RlZEluZGV4XS5pbm5lckhUTUw7XG4gICAgICAgIH07XG5cbiAgICAgICAgdmFyIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgICAgaW5wdXQudHlwZSA9IFwidGV4dFwiO1xuICAgICAgICBpbnB1dC5wbGFjZWhvbGRlciA9IHNlbGVjdC5nZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJyk7XG4gICAgICAgIGlucHV0LnNldEF0dHJpYnV0ZShcInJlYWRvbmx5XCIsIFwicmVhZG9ubHlcIik7XG4gICAgICAgIHNlbGVjdC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGlucHV0KTtcblxuICAgICAgICB2YXIgb3B0aW9ucyA9IHNlbGVjdC5xdWVyeVNlbGVjdG9yQWxsKFwib3B0aW9uXCIpO1xuICAgICAgICB2YXIgdWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xuICAgICAgICB1bC5vbm1vdXNldXAgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICB9O1xuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IG9wdGlvbnMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgIHZhciBvcHRpb24gPSBvcHRpb25zW2pdO1xuICAgICAgICAgICAgaWYgKCFvcHRpb24uZ2V0QXR0cmlidXRlKCd2YWx1ZScpKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgICAgICAgICAgbGkuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgb3B0aW9uLnZhbHVlKTtcbiAgICAgICAgICAgIGxpLmlubmVySFRNTCA9IG9wdGlvbi5pbm5lckhUTUw7XG4gICAgICAgICAgICB1bC5hcHBlbmRDaGlsZChsaSk7XG4gICAgICAgICAgICBsaS5vbm1vdXNlZG93biA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5zZXRWYWx1ZSh0aGlzLmdldEF0dHJpYnV0ZSgndmFsdWUnKSk7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICBpZiAod2luZG93Lm9ubW91c2V1cCkge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cub25tb3VzZXVwKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHNlbGVjdC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKHVsKTtcbiAgICAgICAgaW5wdXQub25mb2N1cyA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIGlmIChzbWFzaC5jbGFzcy5oYXModGhpcy5wYXJlbnRFbGVtZW50LCAnaXMtZm9jdXNzZWQnKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBsID0gdGhpcy5wYXJlbnRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJsYWJlbFwiKTtcbiAgICAgICAgICAgIGlmIChsKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMudmFsdWUgIT0gXCJcIikge1xuICAgICAgICAgICAgICAgICAgICBzbWFzaC5jbGFzcy5hZGQobCwgJ3Nob3cnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzbWFzaC5jbGFzcy5yZW1vdmUobCwgJ3Nob3cnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnBhcmVudEVsZW1lbnQuY2xpY2soKTtcbiAgICAgICAgfTtcblxuICAgICAgICBpbnB1dC5vbmJsdXIgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBpZiAod2luZG93Lm9ubW91c2V1cCkge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5vbm1vdXNldXAoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHNlbGVjdC5wYXJlbnRFbGVtZW50Lm9uY2xpY2sgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHNtYXNoLmNsYXNzLmFkZCh0aGlzLCAnaXMtZm9jdXNzZWQnKTtcbiAgICAgICAgICAgIHZhciBpbnB1dCA9IHNtYXNoLmdldCh0aGlzLCAnaW5wdXQnKTtcbiAgICAgICAgICAgIHZhciBzZWxlY3QgPSB0aGlzO1xuICAgICAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKFwicGxhY2Vob2xkZXJcIiwgaW5wdXQudmFsdWUpO1xuICAgICAgICAgICAgaW5wdXQucmVtb3ZlQXR0cmlidXRlKFwicmVhZG9ubHlcIik7XG4gICAgICAgICAgICBpbnB1dC5ibHVyKCk7XG4gICAgICAgICAgICBpbnB1dC52YWx1ZSA9IFwiXCI7XG4gICAgICAgICAgICB3aW5kb3cub25tb3VzZXVwID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgd2luZG93Lm9ubW91c2V1cCA9IG51bGw7XG4gICAgICAgICAgICAgICAgaW5wdXQub25rZXl1cCA9IG51bGw7XG4gICAgICAgICAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKFwicmVhZG9ubHlcIiwgXCJyZWFkb25seVwiKTtcbiAgICAgICAgICAgICAgICBzZWxlY3QucmVzZXQoKTtcbiAgICAgICAgICAgICAgICBpZiAoaXRlbXMgPSBzbWFzaC5nZXRBbGwoc2VsZWN0LCAndWwgbGknKSkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpPTA7IGk8aXRlbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zW2ldLnN0eWxlLmRpc3BsYXkgPSBcIlwiO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHNtYXNoLnNob3coc2VsZWN0LCAndWwnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc21hc2guY2xhc3MucmVtb3ZlKHNlbGVjdCwgJ2lzLWZvY3Vzc2VkJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlucHV0Lm9ua2V5dXAgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChlLmtleUNvZGUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDEzOlxuICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZWN0ZWQgPSBzbWFzaC5nZXQoc2VsZWN0LCAndWwgbGkuc2VsZWN0ZWQnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQub25tb3VzZWRvd24oZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzNzpcbiAgICAgICAgICAgICAgICBjYXNlIDM4OlxuICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZWN0ZWQgPSBzbWFzaC5nZXQoc2VsZWN0LCAndWwgbGkuc2VsZWN0ZWQnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc21hc2guY2xhc3MucmVtb3ZlKHNlbGVjdGVkLCBcInNlbGVjdGVkXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByZXZpb3VzID0gc21hc2gucHJldmlvdXNWaXNpYmxlKHNlbGVjdGVkKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNtYXNoLmNsYXNzLmFkZChwcmV2aW91cywgXCJzZWxlY3RlZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmV2aW91cy5wYXJlbnRFbGVtZW50LnNjcm9sbFRvcCA9IHByZXZpb3VzLnBhcmVudEVsZW1lbnQuc2Nyb2xsVG9wIC0gcHJldmlvdXMub2Zmc2V0SGVpZ2h0O1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobGFzdCA9IHNtYXNoLmxhc3RWaXNpYmxlKHNlbGVjdGVkKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbWFzaC5jbGFzcy5hZGQobGFzdCwgXCJzZWxlY3RlZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdC5wYXJlbnRFbGVtZW50LnNjcm9sbFRvcCA9IGxhc3QucGFyZW50RWxlbWVudC5zY3JvbGxIZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxpID0gc21hc2guZ2V0KHNlbGVjdCwgJ3VsIGxpJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobGFzdCA9IHNtYXNoLmxhc3RWaXNpYmxlKGxpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNtYXNoLmNsYXNzLmFkZChsYXN0LCBcInNlbGVjdGVkXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3QucGFyZW50RWxlbWVudC5zY3JvbGxUb3AgPSBsYXN0LnBhcmVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMzk6XG4gICAgICAgICAgICAgICAgY2FzZSA0MDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGVjdGVkID0gc21hc2guZ2V0KHNlbGVjdCwgJ3VsIGxpLnNlbGVjdGVkJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNtYXNoLmNsYXNzLnJlbW92ZShzZWxlY3RlZCwgXCJzZWxlY3RlZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXh0ID0gc21hc2gubmV4dFZpc2libGUoc2VsZWN0ZWQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc21hc2guY2xhc3MuYWRkKG5leHQsIFwic2VsZWN0ZWRcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV4dC5wYXJlbnRFbGVtZW50LnNjcm9sbFRvcCA9IG5leHQucGFyZW50RWxlbWVudC5zY3JvbGxUb3AgKyBuZXh0Lm9mZnNldEhlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5leHQgPSBzbWFzaC5maXJzdFZpc2libGUoc2VsZWN0ZWQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNtYXNoLmNsYXNzLmFkZChuZXh0LCBcInNlbGVjdGVkXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0LnBhcmVudEVsZW1lbnQuc2Nyb2xsVG9wID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbGkgPSBzbWFzaC5nZXQoc2VsZWN0LCAndWwgbGknKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXh0ID0gc21hc2guZmlyc3RWaXNpYmxlKGxpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNtYXNoLmNsYXNzLmFkZChuZXh0LCBcInNlbGVjdGVkXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHQucGFyZW50RWxlbWVudC5zY3JvbGxUb3AgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMjc6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudmFsdWUgPSBcIlwiO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJsdXIoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHEgPSB0aGlzLnZhbHVlLnJlcGxhY2UoL1teYS16QS1aMC05XyBdL2csIFwiXCIpO1xuICAgICAgICAgICAgICAgIGlmIChpdGVtcyA9IHNtYXNoLmdldEFsbChzZWxlY3QsICd1bCBsaScpKSB7XG4gICAgICAgICAgICAgICAgICAgIHNtYXNoLnNob3coc2VsZWN0LCAndWwnKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW07XG4gICAgICAgICAgICAgICAgICAgIHZhciByZXN1bHRzID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGk9MDsgaTxpdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbSA9IGl0ZW1zW2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHEgPT0gXCJcIiB8fCBzbWFzaC5mdXp6eUNvbXBhcmUocSwgaXRlbS5pbm5lckhUTUwpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRzID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFyZXN1bHRzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzbWFzaC5oaWRlKHNlbGVjdCwgJ3VsJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlucHV0LmZvY3VzKCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKHNlbGVjdC5wYXJlbnRFbGVtZW50LmdldEF0dHJpYnV0ZSgndmFsdWUnKSkge1xuICAgICAgICAgICAgc2VsZWN0LnBhcmVudEVsZW1lbnQuc2V0VmFsdWUoc2VsZWN0LnBhcmVudEVsZW1lbnQuZ2V0QXR0cmlidXRlKCd2YWx1ZScpKTtcbiAgICAgICAgfVxuICAgICAgICBzbWFzaC5jbGFzcy5hZGQoc2VsZWN0LnBhcmVudEVsZW1lbnQsICdzbWFzaC1pbml0aWFsaXNlZCcpO1xuICAgIH1cbiAgICBzbWFzaC5pbnB1dC5jaGVja2JveEluaXQoKTtcbn07XG5cbnNtYXNoLmlucHV0LmNoZWNrYm94SW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBjaGVja2JveGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5zbWFzaC1jaGVja2JveCBpbnB1dFwiKTtcbiAgICB2YXIgY2hlY2tib3g7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGVja2JveGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNoZWNrYm94ID0gY2hlY2tib3hlc1tpXTtcbiAgICAgICAgaWYgKHNtYXNoLmNsYXNzLmhhcyhjaGVja2JveC5wYXJlbnRFbGVtZW50LCAnc21hc2gtaW5pdGlhbGlzZWQnKSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgYyA9ICBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgIGMuY2xhc3NOYW1lID0gJ2NoZWNrcyc7XG4gICAgICAgIGMuaW5uZXJIVE1MID0gJzxpIGNsYXNzPVwibWF0ZXJpYWwtaWNvbnNcIj5jaGVja19ib3hfb3V0bGluZV9ibGFuazwvaT48aSBjbGFzcz1cIm1hdGVyaWFsLWljb25zIGNoZWNrZWRcIj5jaGVja19ib3g8L2k+JztcbiAgICAgICAgY2hlY2tib3gucGFyZW50RWxlbWVudC5hcHBlbmRDaGlsZChjKTtcblxuICAgICAgICBpZiAobGFiZWwgPSBjaGVja2JveC5nZXRBdHRyaWJ1dGUoJ2xhYmVsJykpIHtcbiAgICAgICAgICAgIHZhciBsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICAgICAgbC5jbGFzc05hbWUgPSAnbGFiZWwnO1xuICAgICAgICAgICAgbC5pbm5lckhUTUwgPSBsYWJlbDtcbiAgICAgICAgICAgIGNoZWNrYm94LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQobCk7XG4gICAgICAgIH1cbiAgICAgICAgc21hc2guY2xhc3MuYWRkKGNoZWNrYm94LnBhcmVudEVsZW1lbnQsICdzbWFzaC1pbml0aWFsaXNlZCcpO1xuICAgICAgICBjaGVja2JveC5jaGVja2VkID0gc21hc2guY2xhc3MuaGFzKGNoZWNrYm94LnBhcmVudEVsZW1lbnQsICdjaGVja2VkJyk7XG5cbiAgICAgICAgY2hlY2tib3gucGFyZW50RWxlbWVudC5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBzbWFzaC5jbGFzcy50b2dnbGUodGhpcywgJ2NoZWNrZWQnKTtcbiAgICAgICAgICAgIHNtYXNoLmdldCh0aGlzLCAnaW5wdXQnKS5jaGVja2VkID0gc21hc2guY2xhc3MuaGFzKHRoaXMsICdjaGVja2VkJyk7XG4gICAgICAgICAgICBpZiAodGhpcy5vbmNoYW5nZSkge1xuICAgICAgICAgICAgICAgIHRoaXMub25jaGFuZ2Uoc21hc2guY2xhc3MuaGFzKHRoaXMsICdjaGVja2VkJykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGNoZWNrYm94LnBhcmVudEVsZW1lbnQuZ2V0TmFtZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvcihcImlucHV0XCIpLmdldEF0dHJpYnV0ZSgnbmFtZScpO1xuICAgICAgICB9O1xuXG4gICAgICAgIGNoZWNrYm94LnBhcmVudEVsZW1lbnQuZ2V0VmFsdWUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBzbWFzaC5jbGFzcy5oYXModGhpcywgJ2NoZWNrZWQnKTtcbiAgICAgICAgfTtcblxuICAgICAgICBjaGVja2JveC5wYXJlbnRFbGVtZW50LnNldFZhbHVlID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIGlmIChzbWFzaC5jbGFzcy5oYXModGhpcywgJ2NoZWNrZWQnKSA9PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMub25jbGljaygpO1xuICAgICAgICB9O1xuICAgIH1cbn07XG4iLCJzbWFzaC5yb3V0ZXIgPSB7XG4gICAgX19wYXJzZVJvdXRlUmVnZXg6IC97KC4qPyl9L2lnLFxuICAgIF9fZHluYW1pY1BhcnRzOiBbXSxcbiAgICBfX2Jhc2VEaXJlY3Rvcnk6IG51bGwsXG4gICAgX19yb3V0ZXM6IHtcbiAgICAgICAgc3RhdGljOiBbXSxcbiAgICAgICAgZHluYW1pYzogW11cbiAgICB9XG59O1xuXG4vKipcbiAqIEFkZCBhIHJvdXRlIGhhbmRsZXIgdG8gdGhlIHJvdXRlclxuICogQHBhcmFtIHN0cmluZyAgIHBhdGhcbiAqIEBwYXJhbSBGdW5jdGlvbiBjYWxsYmFja1xuICovXG5zbWFzaC5yb3V0ZXIuYWRkID0gZnVuY3Rpb24ocGF0aCwgY2FsbGJhY2spIHtcbiAgICB2YXIgcm91dGUgPSBzbWFzaC5yb3V0ZXIucGFyc2VSb3V0ZShwYXRoKTtcbiAgICBpZiAocm91dGUucmVnZXgpIHtcbiAgICAgICAgcm91dGUuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAgICAgaWYgKCFzbWFzaC5yb3V0ZXIuX19yb3V0ZXMuZHluYW1pY1tyb3V0ZS5kZXB0aF0pIHtcbiAgICAgICAgICAgIHNtYXNoLnJvdXRlci5fX3JvdXRlcy5keW5hbWljW3JvdXRlLmRlcHRoXSA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIGlmICghc21hc2gucm91dGVyLl9fcm91dGVzLmR5bmFtaWNbcm91dGUuZGVwdGhdW3JvdXRlLm51bVZhcnNdKSB7XG4gICAgICAgICAgICBzbWFzaC5yb3V0ZXIuX19yb3V0ZXMuZHluYW1pY1tyb3V0ZS5kZXB0aF1bcm91dGUubnVtVmFyc10gPSBbXTtcbiAgICAgICAgfVxuICAgICAgICBzbWFzaC5yb3V0ZXIuX19yb3V0ZXMuZHluYW1pY1tyb3V0ZS5kZXB0aF1bcm91dGUubnVtVmFyc10ucHVzaChyb3V0ZSk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgc21hc2gucm91dGVyLl9fcm91dGVzLnN0YXRpY1twYXRoXSA9IGNhbGxiYWNrO1xufTtcblxuLyoqXG4gKiBTZXQgYW5kIGV4ZWN1dGUgdGhlIGdpdmVuIHBhdGhcbiAqIEBwYXJhbSBzdHJpbmcgcGF0aFxuICovXG5zbWFzaC5yb3V0ZXIuc2V0ID0gZnVuY3Rpb24ocGF0aCkge1xuICAgIHNtYXNoLnJvdXRlci5kaXNwbGF5VVJMKHBhdGgpO1xuICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgncG9wc3RhdGUnKSk7XG59O1xuXG4vKipcbiAqIERpc3BsYXkgdGhlIHVybCBpbiB0aGUgYnJvd3NlclxuICogQHBhcmFtICBzdHJpbmcgcGF0aFxuICogQHJldHVybiB2b2lkXG4gKi9cbnNtYXNoLnJvdXRlci5kaXNwbGF5VVJMID0gZnVuY3Rpb24ocGF0aCkge1xuICAgIHBhdGggPSBzbWFzaC5yb3V0ZXIuYWRkQmFzZURpcmVjdG9yeShwYXRoKTtcbiAgICB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUoXCJcIiwgXCJcIiwgcGF0aCk7XG59O1xuXG4vKipcbiAqIFJlZGlyZWN0IHRvIHRoZSBjb3JyZWN0IHVybFxuICogQHBhcmFtICBzdHJpbmcgcGF0aFxuICogQHJldHVybiB2b2lkXG4gKi9cbnNtYXNoLnJvdXRlci5yZWRpcmVjdCA9IGZ1bmN0aW9uKHBhdGgpIHtcbiAgICBpZiAoIXBhdGguc2VhcmNoKC9eaHR0cFtzXT86XFwvXFwvLykpIHtcbiAgICAgICAgcGF0aCA9IHNtYXNoLnJvdXRlci5hZGRCYXNlRGlyZWN0b3J5KHBhdGgpO1xuICAgIH1cbiAgICB3aW5kb3cubG9jYXRpb24gPSBwYXRoO1xufTtcblxuLyoqXG4gKiBFeGVjdXRlIHdoZW4gYSBwYXRoIGlzIG5vdCBmb3VuZC5cbiAqIEBwYXJhbSAgUm91dGUgcm91dGVcbiAqIEByZXR1cm4gdm9pZFxuICovXG5zbWFzaC5yb3V0ZXIuaGFuZGxlTm90Rm91bmQgPSBmdW5jdGlvbihyb3V0ZSkge1xuICAgIGNvbnNvbGUubG9nKFwicm91dGU6IFwiICsgSlNPTi5zdHJpbmdpZnkocm91dGUpICsgXCIgZG9lcyBub3QgZXhpc3RcIik7XG59O1xuXG4vKipcbiAqIFJ1biB0aGUgcm91dGVyIGFuZCBjaGVjayB0aGUgZ2l2ZW4gcGF0aFxuICogQHJldHVybiB2b2lkXG4gKi9cbnNtYXNoLnJvdXRlci5ydW4gPSBmdW5jdGlvbigpIHtcbiAgICB3aW5kb3cub25wb3BzdGF0ZSA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIHNtYXNoLnJvdXRlci5leGVjdXRlKCk7XG4gICAgfTtcbiAgICBzbWFzaC5yb3V0ZXIuZXhlY3V0ZSgpO1xufVxuXG4vKipcbiAqIEV4ZWN1dGUgdGhlIHJvdXRlciBhbmQgY2hlY2sgZ2l2ZW4gcGF0aFxuICogQHJldHVybiB2b2lkXG4gKi9cbnNtYXNoLnJvdXRlci5leGVjdXRlID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHBhdGggPSB0aGlzLmdldFBhdGgoKTtcbiAgICBpZiAodGhpcy5fX3JvdXRlcy5zdGF0aWNbcGF0aC5wYXRoXSkge1xuICAgICAgICB0aGlzLl9fcm91dGVzLnN0YXRpY1twYXRoLnBhdGhdKCk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGRlcHRoID0gcGF0aC5wYXRoLnNwbGl0KFwiL1wiKS5sZW5ndGgtMTtcbiAgICBpZiAodGhpcy5fX3JvdXRlcy5keW5hbWljW2RlcHRoXSkge1xuICAgICAgICB2YXIgcm91dGU7XG4gICAgICAgIHZhciBtYXRjaGVzO1xuICAgICAgICB2YXIgZGF0YSA9IHt9O1xuICAgICAgICBmb3IgKHZhciB2YXJOdW0gaW4gdGhpcy5fX3JvdXRlcy5keW5hbWljW2RlcHRoXSkge1xuICAgICAgICAgICAgZm9yICh2YXIgaXRlbSBpbiB0aGlzLl9fcm91dGVzLmR5bmFtaWNbZGVwdGhdW3Zhck51bV0pIHtcbiAgICAgICAgICAgICAgICB2YXIgcm91dGUgPSB0aGlzLl9fcm91dGVzLmR5bmFtaWNbZGVwdGhdW3Zhck51bV1baXRlbV07XG4gICAgICAgICAgICAgICAgbWF0Y2hlcyA9IHBhdGgucGF0aC5tYXRjaChyb3V0ZS5yZWdleCk7XG4gICAgICAgICAgICAgICAgaWYgKCFtYXRjaGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpPTA7IGk8cm91dGUubnVtVmFyczsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGFbcm91dGUudmFyc1tpXV0gPSBtYXRjaGVzW2krMV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJvdXRlLmNhbGxiYWNrKGRhdGEpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBzbWFzaC5yb3V0ZXIuaGFuZGxlTm90Rm91bmQocGF0aCk7XG59O1xuXG4vKipcbiAqIEdldCBwYXRoIHdpdGhvdXQgYmFzZSBkaXJlY3RvcnkgaWYgYXZhaWxhYmxlXG4gKiBAcmV0dXJuIFBhdGhcbiAqL1xuc21hc2gucm91dGVyLmdldFBhdGggPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xuICAgIGwuaHJlZiA9IHdpbmRvdy5sb2NhdGlvbjtcbiAgICByZXR1cm4ge2hvc3Q6IGwuaG9zdG5hbWUsIHBhdGg6IHNtYXNoLnJvdXRlci5jaGVja1BhdGgobC5wYXRobmFtZSl9O1xufTtcblxuLyoqXG4gKiBQYXJzZSB0aGUgZ2l2ZW4gcm91dGUgZ2l2ZW4gYnkgYWRkXG4gKiBAcGFyYW0gIHN0cmluZyBwYXRoXG4gKiBAcmV0dXJuIFJvdXRlXG4gKi9cbnNtYXNoLnJvdXRlci5wYXJzZVJvdXRlID0gZnVuY3Rpb24ocGF0aCkge1xuICAgIHBhdGggPSBzbWFzaC5yb3V0ZXIuY2xlYW5QYXRoKHBhdGgpO1xuICAgIHZhciByb3V0ZSA9IHtcbiAgICAgICAgcGF0aDogcGF0aCxcbiAgICAgICAgZGVwdGg6IChwYXRoLnNwbGl0KFwiL1wiKS5sZW5ndGggLSAxKSxcbiAgICAgICAgdmFyczogW10sXG4gICAgICAgIG51bVZhcnM6IDBcbiAgICB9O1xuICAgIHNtYXNoLnJvdXRlci5fX2R5bmFtaWNQYXJ0cyA9IHBhdGgubWF0Y2goc21hc2gucm91dGVyLl9fcGFyc2VSb3V0ZVJlZ2V4KTtcbiAgICBpZiAoc21hc2gucm91dGVyLl9fZHluYW1pY1BhcnRzICE9IHVuZGVmaW5lZCAmJiBzbWFzaC5yb3V0ZXIuX19keW5hbWljUGFydHMgIT0gbnVsbCkge1xuICAgICAgICB2YXIgcmVnZXggPSBcIl5cIiArIHBhdGgucmVwbGFjZSgvXFwvL2lnLCBcIlxcXFwvXCIpICsgXCIkXCI7XG4gICAgICAgIGZvciAodmFyIGk9MDsgaTxzbWFzaC5yb3V0ZXIuX19keW5hbWljUGFydHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHJvdXRlLm51bVZhcnMrKztcbiAgICAgICAgICAgIHJvdXRlLnZhcnMucHVzaChzbWFzaC5yb3V0ZXIuX19keW5hbWljUGFydHNbaV0uc3Vic3RyaW5nKDEsIHNtYXNoLnJvdXRlci5fX2R5bmFtaWNQYXJ0c1tpXS5sZW5ndGgtMSkpO1xuICAgICAgICAgICAgcmVnZXggPSByZWdleC5yZXBsYWNlKHNtYXNoLnJvdXRlci5fX2R5bmFtaWNQYXJ0c1tpXSwgXCIoLio/KVwiKTtcbiAgICAgICAgfVxuICAgICAgICByb3V0ZS5yZWdleCA9IG5ldyBSZWdFeHAocmVnZXgsICdpJyk7XG4gICAgfVxuICAgIHJldHVybiByb3V0ZTtcbn07XG5cbi8qKlxuICogU2V0IHRoZSBiYXNlIGRpcmVjdG9yeSB0byBiZSB1c2VkIGJ5IGFsbCByb3V0ZXNcbiAqIEBwYXJhbSBzdHJpbmcgZGlyZWN0b3J5XG4gKi9cbnNtYXNoLnJvdXRlci5zZXRCYXNlRGlyZWN0b3J5ID0gZnVuY3Rpb24oZGlyZWN0b3J5KSB7XG4gICAgaWYgKCFkaXJlY3RvcnkpIHtcbiAgICAgICAgc21hc2gucm91dGVyLl9fYmFzZURpcmVjdG9yeSA9IHVuZGVmaW5lZDtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzbWFzaC5yb3V0ZXIuX19iYXNlRGlyZWN0b3J5ID0gc21hc2gucm91dGVyLmNsZWFuUGF0aChkaXJlY3RvcnkpO1xufTtcblxuLyoqXG4gKiBBZGQgdGhlIGJhc2UgZGlyZWN0b3J5IGlmIGl0IGlzIGF2YWlsYWJsZVxuICogQHBhcmFtIHN0cmluZyBwYXRoXG4gKiBAcmV0dXJuIHN0cmluZ1xuICovXG5zbWFzaC5yb3V0ZXIuYWRkQmFzZURpcmVjdG9yeSA9IGZ1bmN0aW9uKHBhdGgpIHtcbiAgICBpZiAoIXNtYXNoLnJvdXRlci5fX2Jhc2VEaXJlY3RvcnkpIHtcbiAgICAgICAgcmV0dXJuIHBhdGg7XG4gICAgfVxuICAgIGlmIChwYXRoLmluZGV4T2Yoc21hc2gucm91dGVyLl9fYmFzZURpcmVjdG9yeSkgPT09IC0xKSB7XG4gICAgICAgIHBhdGggPSBzbWFzaC5yb3V0ZXIuX19iYXNlRGlyZWN0b3J5ICsgcGF0aDtcbiAgICB9XG4gICAgcmV0dXJuIHBhdGg7XG59O1xuXG4vKipcbiAqIENsZWFuIHRoZSBnaXZlbiBwYXRoIHRvIHRoZSBwcm9wZXIgcGF0aCB0byBiZSB1c2VkIGJ5IHRoZSByb3V0ZXJcbiAqIEBwYXJhbSAgc3RyaW5nIHBhdGhcbiAqIEByZXR1cm4gc3RyaW5nXG4gKi9cbnNtYXNoLnJvdXRlci5jbGVhblBhdGggPSBmdW5jdGlvbihwYXRoKSB7XG4gICAgaWYgKHBhdGgubGVuZ3RoID4gMCAmJiBwYXRoLnN1YnN0cmluZygwLCAxKSAhPSBcIi9cIikge1xuICAgICAgICBwYXRoID0gXCIvXCIgKyBwYXRoO1xuICAgIH1cbiAgICBpZiAocGF0aC5sZW5ndGggPiAyICYmIHBhdGguc3Vic3RyaW5nKHBhdGgubGVuZ3RoLTIpID09IFwiL1wiKSB7XG4gICAgICAgIHBhdGggPSBwYXRoLnN1YnN0cmluZygwLCBwYXRoLmxlbmd0aC0yKTtcbiAgICB9XG4gICAgcmV0dXJuIHBhdGg7XG59O1xuXG4vKipcbiAqIENoZWNrIHRoZSBwYXRoIGlmIHRoZXJlIGlzIGEgYmFzZSBkaXJlY3RvcnkgYXZhaWxhYmxlXG4gKiBAcGFyYW0gIHN0cmluZyBwYXRoIFRoZSBwYXRoIHRvIGNoZWNrXG4gKiBAcmV0dXJuIHN0cmluZyAgICAgIFRoZSBwYXRoIHdpdGhvdXQgYSBiYXNlIGRpcmVjdG9yeSBmb3IgdXNlIG9mIGNoZWNraW5nIHJvdXRlc1xuICovXG5zbWFzaC5yb3V0ZXIuY2hlY2tQYXRoID0gZnVuY3Rpb24ocGF0aCkge1xuICAgIHBhdGggPSBzbWFzaC5yb3V0ZXIuY2xlYW5QYXRoKHBhdGgpO1xuICAgIGlmIChzbWFzaC5yb3V0ZXIuX19iYXNlRGlyZWN0b3J5ICYmIHBhdGguaW5kZXhPZihzbWFzaC5yb3V0ZXIuX19iYXNlRGlyZWN0b3J5KSAhPT0gLTEpIHtcbiAgICAgICAgcGF0aCA9IHBhdGgucmVwbGFjZShzbWFzaC5yb3V0ZXIuX19iYXNlRGlyZWN0b3J5LCAnJyk7XG4gICAgfVxuICAgIHJldHVybiBwYXRoO1xufTtcblxuLyoqXG4gKiBHZXQgdGhlIHF1ZXJ5IHBhcmFtIGluIHRoZSB1cmxcbiAqIEBwYXJhbSAgc3RyaW5nIHBhcmFtIFRoZSBwYXJhbSB5b3Ugd2FudCB0byBoYXZlXG4gKiBAcmV0dXJuIHN0cmluZyAgICAgICBUaGUgdmFsdWUgb2YgdGhlIHBhcmFtIG9yIHVuZGVmaW5lZCBpZiBpdCBpcyBub3QgYXZhaWxhYmxlXG4gKi9cbnNtYXNoLnJvdXRlci5xdWVyeVBhcmFtID0gZnVuY3Rpb24ocGFyYW0pIHtcbiAgICB2YXIgcmVnZXhTID0gXCJbXFxcXD8mXVwiK3BhcmFtK1wiPShbXiYjXSopXCIsXG4gICAgcmVnZXggPSBuZXcgUmVnRXhwKCByZWdleFMgKSxcbiAgICByZXN1bHRzID0gcmVnZXguZXhlYyggd2luZG93LmxvY2F0aW9uLnNlYXJjaCApO1xuICAgIGlmKCByZXN1bHRzID09IG51bGwgKXtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdHNbMV07Ly9kZWNvZGVVUklDb21wb25lbnQocmVzdWx0c1sxXS5yZXBsYWNlKC9cXCsvZywgXCIgXCIpKTtcbn07XG4iLCJzbWFzaC5zZWFyY2hib3ggPSB7XG4gICAgaV86IGZhbHNlLFxuICAgIG1pbkF1dG9Db21wbGV0ZUxlbmd0aDogMyxcbiAgICBvbmZvY3VzOiB1bmRlZmluZWQsXG4gICAgb25ibHVyOiB1bmRlZmluZWQsXG4gICAgb25jaGFuZ2U6IHVuZGVmaW5lZCxcbn07XG5cbnNtYXNoLnNlYXJjaGJveC5pbml0ID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKHNtYXNoLnNlYXJjaGJveC5pXykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBzc2IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNtYXNoLXNlYXJjaGJveCBpbnB1dFwiKTtcbiAgICBpZiAoIXNzYikge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHNzYi5vbmZvY3VzID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh0aGlzLnZhbHVlLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgICBzbWFzaC5zZWFyY2hib3gucmVzdWx0cygnPGRpdiBjbGFzcz1cInNtYXNoLWluc3RydWN0aW9uXCI+U3RhcnQgdHlwaW5nIHRvIGZpbmQgcmVzdWx0czwvZGl2PicpO1xuICAgICAgICB9XG4gICAgICAgIHNtYXNoLmNsYXNzLmFkZChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNtYXNoLWhlYWRlclwiKSwgJ2lzLWZvY3Vzc2VkJyk7XG4gICAgICAgIHNtYXNoLmNsYXNzLmFkZChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNtYXNoLXNlYXJjaGJveCAuc21hc2gtc2VhcmNoYm94LXJlc3VsdHNcIiksICdzaG93Jyk7XG4gICAgICAgIGlmIChzbWFzaC5zZWFyY2hib3gub25mb2N1cykge1xuICAgICAgICAgICAgc21hc2guc2VhcmNoYm94Lm9uZm9jdXMoKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgc3NiLm9uYmx1ciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBzbWFzaC5jbGFzcy5yZW1vdmUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zbWFzaC1oZWFkZXJcIiksICdpcy1mb2N1c3NlZCcpO1xuICAgICAgICBzbWFzaC5jbGFzcy5yZW1vdmUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zbWFzaC1zZWFyY2hib3ggLnNtYXNoLXNlYXJjaGJveC1yZXN1bHRzXCIpLCAnc2hvdycpO1xuICAgICAgICBpZiAoc21hc2guc2VhcmNoYm94Lm9uYmx1cikge1xuICAgICAgICAgICAgc21hc2guc2VhcmNoYm94Lm9uYmx1cigpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBzc2Iub25rZXl1cCA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgc3dpdGNoIChlLmtleUNvZGUpIHtcbiAgICAgICAgY2FzZSAyNzpcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSAnJztcbiAgICAgICAgICAgIHRoaXMuYmx1cigpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnZhbHVlLmxlbmd0aCA8IHNtYXNoLnNlYXJjaGJveC5taW5BdXRvQ29tcGxldGVMZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc21hc2guc2VhcmNoYm94Lm9uY2hhbmdlKSB7XG4gICAgICAgICAgICBzbWFzaC5zZWFyY2hib3gub25jaGFuZ2UodGhpcy52YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHNtYXNoLnNlYXJjaGJveC5pXyA9IHRydWU7XG59O1xuXG5zbWFzaC5zZWFyY2hib3guZW1wdHkgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAoaSA9IHNtYXNoLmdldChkb2N1bWVudCwgXCIuc21hc2gtc2VhcmNoYm94IGlucHV0XCIpKSB7XG4gICAgICAgIHJldHVybiAoaS52YWx1ZS5sZW5ndGggPT0gMCk7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuXG5zbWFzaC5zZWFyY2hib3guYXBwZW5kVG8gPSBmdW5jdGlvbihjb250ZW50KSB7XG4gICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIG5vZGUuaW5uZXJIVE1MID0gY29udGVudDtcbiAgICB2YXIgcmVzdWx0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc21hc2gtc2VhcmNoYm94IC5zbWFzaC1zZWFyY2hib3gtcmVzdWx0c1wiKTtcbiAgICByZXN1bHRzLmFwcGVuZENoaWxkKG5vZGUpO1xufTtcblxuc21hc2guc2VhcmNoYm94LnJlc3VsdHMgPSBmdW5jdGlvbihjb250ZW50KSB7XG4gICAgdmFyIHJlc3VsdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNtYXNoLXNlYXJjaGJveCAuc21hc2gtc2VhcmNoYm94LXJlc3VsdHNcIik7XG4gICAgcmVzdWx0cy5pbm5lckhUTUwgPSBjb250ZW50O1xufTtcbiIsInNtYXNoLnNpZGViYXIgPSB7XG4gICAgaV86IGZhbHNlXG59O1xuXG5zbWFzaC5zaWRlYmFyLmluaXQgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAoc21hc2guc2lkZWJhci5pXykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBzaWJsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zbWFzaC1zaWRlYmFyIC5sb2NrXCIpO1xuICAgIGlmICghc2libCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHNpYmwub25jbGljayA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBzbWFzaC5zaWRlYmFyLnRvZ2dsZUxvY2soKTtcbiAgICB9O1xuXG4gICAgdmFyIHNpYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc21hc2gtc2lkZWJhclwiKTtcbiAgICBzbWFzaC5jbGFzcy5hZGQoc2liLCAnaXMtdW5sb2NrZWQnKTtcbiAgICBzbWFzaC5zaWRlYmFyLmlfID0gdHJ1ZTtcbiAgICBpZiAoc21hc2guY29uZmlnLmdldCgnc2lkZWJhcl9sb2NrJykpIHtcbiAgICAgICAgc21hc2guc2lkZWJhci50b2dnbGVMb2NrKCk7XG4gICAgfVxufTtcblxuc21hc2guc2lkZWJhci50b2dnbGVMb2NrID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKCFzbWFzaC5zaWRlYmFyLmlfKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgc21hc2guY2xhc3MudG9nZ2xlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc21hc2gtc2lkZWJhciAubG9ja1wiKSwgJ3VubG9jaycpO1xuICAgIHNtYXNoLmNsYXNzLnRvZ2dsZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNtYXNoLXNpZGViYXJcIiksICdpcy11bmxvY2tlZCcpO1xuICAgIHNtYXNoLmNvbmZpZy5zZXQoJ3NpZGViYXJfbG9jaycsICFzbWFzaC5jbGFzcy5oYXMoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zbWFzaC1zaWRlYmFyXCIpLCAnaXMtdW5sb2NrZWQnKSk7XG59O1xuIiwic21hc2guc3RvcmFnZSA9IHt9O1xuXG5zbWFzaC5zdG9yYWdlLnNldCA9IGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIEpTT04uc3RyaW5naWZ5KHZhbHVlKSk7XG59O1xuXG5zbWFzaC5zdG9yYWdlLnVuc2V0ID0gZnVuY3Rpb24oa2V5KSB7XG4gICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oa2V5KTtcbn07XG5cbnNtYXNoLnN0b3JhZ2UuZ2V0ID0gZnVuY3Rpb24oa2V5KSB7XG4gICAgdmFyIGkgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xuICAgIGlmICghaSkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4gSlNPTi5wYXJzZShpKTtcbn07XG5cbnNtYXNoLnN0b3JhZ2UuY2xlYXIgPSBmdW5jdGlvbigpIHtcbiAgICBsb2NhbFN0b3JhZ2UuY2xlYXIoKTtcbn07XG4iLCJzbWFzaC53b3Jrc3BhY2UgPSB7XG4gICAgYmFzZVRpdGxlOiB1bmRlZmluZWQsXG4gICAgX3dzXzogdW5kZWZpbmVkLFxuICAgIF9oZHJfOiB1bmRlZmluZWQsXG4gICAgX3NiXzogdW5kZWZpbmVkLFxuICAgIF90YWJzXzogW11cbn07XG5cbnNtYXNoLndvcmtzcGFjZS5pbml0ID0gZnVuY3Rpb24oKSB7XG4gICAgc21hc2gud29ya3NwYWNlLl93c18gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNtYXNoLXdvcmtzcGFjZVwiKTtcbiAgICBpZiAoIXNtYXNoLndvcmtzcGFjZS5fd3NfKSB7XG4gICAgICAgIHJldHVyblxuICAgIH1cbiAgICBzbWFzaC53b3Jrc3BhY2UuX2hkcl8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNtYXNoLWhlYWRlclwiKTtcbiAgICBpZiAoc21hc2gud29ya3NwYWNlLl9oZHJfKSB7XG4gICAgICAgIHNtYXNoLmNsYXNzLmFkZChzbWFzaC53b3Jrc3BhY2UuX3dzXywgJ2hhcy1oZWFkZXInKTtcbiAgICB9XG4gICAgc21hc2gud29ya3NwYWNlLl9zYl8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNtYXNoLXdvcmtzcGFjZSAuc21hc2gtc2lkZWJhclwiKTtcbiAgICBpZiAoc21hc2gud29ya3NwYWNlLl9zYl8pIHtcbiAgICAgICAgc21hc2guY2xhc3MuYWRkKHNtYXNoLndvcmtzcGFjZS5fd3NfLCAnaGFzLXNpZGViYXInKTtcbiAgICB9XG59O1xuXG5zbWFzaC53b3Jrc3BhY2UuYWRkVGFiID0gZnVuY3Rpb24oaWQsIHRpdGxlLCBjb250ZW50LCB1cmwpIHtcbiAgICBpZiAoIXNtYXNoLmdldChkb2N1bWVudCwgJy5zbWFzaC10YWItcGFuZScpKSB7XG4gICAgICAgIHZhciBwYW5lbCA9IHNtYXNoLmdldChkb2N1bWVudCwgJy5zbWFzaC1wYW5lbCcpO1xuICAgICAgICBpZiAoIXBhbmVsKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnVG8gYWRkIGEgdGFiIHRoZXJlIG5lZWRzIHRvIGJlIGEgcGFuZWwnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBwYW5lbC5pbm5lckhUTUwgPSAnPGRpdiBjbGFzcz1cInNtYXNoLXRhYi1wYW5lXCI+PGRpdiBjbGFzcz1cInNtYXNoLXRhYnNcIj48L2Rpdj48ZGl2IGNsYXNzPVwic21hc2gtcGFuZXNcIj48L2Rpdj48L2Rpdj4nO1xuICAgIH1cbiAgICB2YXIgdGFicyA9IHNtYXNoLmdldChkb2N1bWVudCwgJy5zbWFzaC10YWItcGFuZSAuc21hc2gtdGFicycpO1xuICAgIHZhciBwYW5lc0NvbnRhaW5lciA9IHNtYXNoLmdldChkb2N1bWVudCwgJy5zbWFzaC10YWItcGFuZSAuc21hc2gtcGFuZXMnKTtcblxuICAgIGRvY3VtZW50LnRpdGxlID0gc21hc2gud29ya3NwYWNlLmNyZWF0ZVRpdGxlKHRpdGxlKTtcblxuICAgIGlmICh0YWIgPSBzbWFzaC5nZXQodGFicywgJy5zbWFzaC10YWJbZGF0YS1pZD1cIicgKyBpZCArICdcIl0nKSkge1xuICAgICAgICB2YXIgcGFuZSA9IHNtYXNoLmdldChwYW5lc0NvbnRhaW5lciwgJy5zbWFzaC1wYW5lW2RhdGEtaWQ9XCInICsgaWQgKyAnXCJdJyk7XG4gICAgICAgIHBhbmUuaW5uZXJIVE1MID0gY29udGVudDtcbiAgICAgICAgdGFiLmRhdGFzZXQudXJsID0gdXJsO1xuICAgICAgICB0YWIub25jbGljaygpO1xuICAgICAgICByZXR1cm4ge3RhYjogdGFiLCBwYW5lOiBwYW5lfTtcbiAgICB9XG5cbiAgICBzbWFzaC5oaWRlKHBhbmVzQ29udGFpbmVyLCBcIi5zbWFzaC1wYW5lXCIpO1xuICAgIGlmIChhY3RpdmUgPSBzbWFzaC5nZXQodGFicywgJy5zbWFzaC10YWIuYWN0aXZlJykpIHtcbiAgICAgICAgc21hc2guY2xhc3MucmVtb3ZlKGFjdGl2ZSwgJ2FjdGl2ZScpO1xuICAgIH1cblxuICAgIC8vIENyZWF0ZSBhIG5ldyB0YWJcbiAgICB2YXIgdGFiID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICB0YWIuY2xhc3NOYW1lID0gJ3NtYXNoLXRhYiBhY3RpdmUnO1xuICAgIHRhYi5kYXRhc2V0LmlkID0gaWQ7XG4gICAgdGFiLmRhdGFzZXQudXJsID0gdXJsO1xuICAgIHRhYi5pbm5lckhUTUwgPSB0aXRsZSArICc8aSBjbGFzcz1cIm1hdGVyaWFsLWljb25zIGNsb3NlXCI+Y2xvc2U8L2k+JztcbiAgICB0YWIub25jbGljayA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgaWYgKGFjdGl2ZSA9IHNtYXNoLmdldCh0YWJzLCAnLnNtYXNoLXRhYi5hY3RpdmUnKSkge1xuICAgICAgICAgICAgc21hc2guY2xhc3MucmVtb3ZlKGFjdGl2ZSwgJ2FjdGl2ZScpO1xuICAgICAgICB9XG4gICAgICAgIHNtYXNoLmNsYXNzLmFkZCh0aGlzLCAnYWN0aXZlJyk7XG4gICAgICAgIHNtYXNoLmhpZGUoZG9jdW1lbnQsICcuc21hc2gtcGFuZScpO1xuICAgICAgICBzbWFzaC5zaG93KGRvY3VtZW50LCAnLnNtYXNoLXBhbmVbZGF0YS1pZD1cIicgKyB0aGlzLmRhdGFzZXQuaWQgKyAnXCJdJyk7XG4gICAgICAgIGlmICh0aGlzLmRhdGFzZXQudXJsICYmIHRoaXMuZGF0YXNldC51cmwgIT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgc21hc2gucm91dGVyLmRpc3BsYXlVUkwodGhpcy5kYXRhc2V0LnVybCk7XG4gICAgICAgIH1cbiAgICAgICAgZG9jdW1lbnQudGl0bGUgPSBzbWFzaC53b3Jrc3BhY2UuY3JlYXRlVGl0bGUodGhpcy5pbm5lckhUTUwpO1xuICAgIH07XG4gICAgc21hc2gub24odGFiLCAnLmNsb3NlJywgJ29uY2xpY2snLCBmdW5jdGlvbihlKSB7XG4gICAgICAgIGlmICh0aGlzLnBhcmVudEVsZW1lbnQub25jbG9zZSAmJiAhdGhpcy5wYXJlbnRFbGVtZW50Lm9uY2xvc2UoKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzbWFzaC5jbGFzcy5oYXModGhpcy5wYXJlbnRFbGVtZW50LCAnYWN0aXZlJykpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnBhcmVudEVsZW1lbnQucHJldmlvdXNTaWJsaW5nKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJlbnRFbGVtZW50LnByZXZpb3VzU2libGluZy5vbmNsaWNrKCk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucGFyZW50RWxlbWVudC5uZXh0U2libGluZykge1xuICAgICAgICAgICAgICAgIHRoaXMucGFyZW50RWxlbWVudC5uZXh0U2libGluZy5vbmNsaWNrKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHBhbmUgPSBzbWFzaC5nZXQoZG9jdW1lbnQsICcuc21hc2gtcGFuZVtkYXRhLWlkPVwiJyArIHRoaXMucGFyZW50RWxlbWVudC5kYXRhc2V0LmlkICsgJ1wiXScpKSB7XG4gICAgICAgICAgICBwYW5lLnBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQocGFuZSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQodGhpcy5wYXJlbnRFbGVtZW50KTtcbiAgICAgICAgaWYgKHRoaXMucGFyZW50RWxlbWVudC5vbmNsb3NlZCkge1xuICAgICAgICAgICAgdGhpcy5wYXJlbnRFbGVtZW50Lm9uY2xvc2VkKCk7XG4gICAgICAgIH1cbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9KTtcbiAgICB0YWJzLmFwcGVuZENoaWxkKHRhYik7XG5cbiAgICAvLyBDcmVhdGUgYSBuZXcgcGFuZSB3aXRoIHRoZSBwcm92aWRlZCBjb250ZW50XG4gICAgdmFyIHBhbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHBhbmUuY2xhc3NOYW1lID0gJ3NtYXNoLXBhbmUnO1xuICAgIHBhbmUuZGF0YXNldC5pZCA9IGlkO1xuICAgIHBhbmUuaW5uZXJIVE1MID0gY29udGVudDtcbiAgICBwYW5lc0NvbnRhaW5lci5hcHBlbmRDaGlsZChwYW5lKTtcbiAgICByZXR1cm4ge3RhYjogdGFiLCBwYW5lOiBwYW5lfTtcbn07XG5cbnNtYXNoLndvcmtzcGFjZS5hY3RpdmVUYWIgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdGFiID0gc21hc2guZ2V0KGRvY3VtZW50LCAnLnNtYXNoLXRhYi5hY3RpdmUnKVxuICAgIGlmICghdGFiKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICB2YXIgcGFuZSA9IHNtYXNoLmdldChkb2N1bWVudCwgJy5zbWFzaC1wYW5lW2RhdGEtaWQ9XCInICsgdGFiLmRhdGFzZXQuaWQgKyAnXCJdJyk7XG4gICAgaWYgKCFwYW5lKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge3RhYjogdGFiLCBwYW5lOiBwYW5lfTtcbn07XG5cbnNtYXNoLndvcmtzcGFjZS5jcmVhdGVUaXRsZSA9IGZ1bmN0aW9uKHRpdGxlKSB7XG4gICAgdmFyIHQgPSB0aXRsZS5yZXBsYWNlKC88KFtePl0rPykoW14+XSo/KT4oLio/KTxcXC9cXDE+L2lnLCBcIlwiKTtcbiAgICBpZiAodCA9PSAnJykge1xuICAgICAgICB2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgZGl2LmlubmVySFRNTCA9IHRpdGxlO1xuICAgICAgICBpZiAodHMgPSBzbWFzaC5nZXQoZGl2LCAnLnRpdGxlJykpIHtcbiAgICAgICAgICAgIHQgPSB0cy5pbm5lckhUTUw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHQgPT0gJycpIHtcbiAgICAgICAgICAgIHQgPSAndW5rbm93bic7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHQgKyAoc21hc2gud29ya3NwYWNlLmJhc2VUaXRsZSA/ICcgfCAnICsgc21hc2gud29ya3NwYWNlLmJhc2VUaXRsZSA6IFwiXCIpO1xufTtcbiJdfQ==
